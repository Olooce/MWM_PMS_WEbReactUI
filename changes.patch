From ddaaf94bf305e946413d5953c97d48a7e9036e8b Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Mon, 22 Jul 2024 17:48:59 +0300
Subject: [PATCH 01/32] .

---
 .eslintrc.cjs                          |   21 +
 .gitignore                             |   24 +
 README.md                              |    8 +
 index.html                             |   13 +
 package-lock.json                      | 3792 ++++++++++++++++++++++++
 package.json                           |   26 +
 public/vite.svg                        |    1 +
 src/App.jsx                            |   27 +
 src/api.jsx                            |   58 +
 src/assets/react.svg                   |    1 +
 src/components/HandleNextPage.jsx      |   12 +
 src/components/HandlePrevPage.jsx      |   12 +
 src/layout/Dash.jsx                    |  181 ++
 src/main.jsx                           |   10 +
 src/pages/.Listemployees.jsx           |  307 ++
 src/pages/Dashboard.jsx                |   67 +
 src/pages/Homepage.jsx                 |   28 +
 src/pages/ListSalaries.jsx             |  148 +
 src/pages/Listemployees.jsx            |  279 ++
 src/pages/Loginpage.jsx                |   96 +
 src/pages/modals/AddEmployee.jsx       |  104 +
 src/pages/modals/EmployeeDetails.jsx   |  131 +
 src/reportWebVitals.js                 |   14 +
 src/styles/AddEmployee-Styling.css     |   57 +
 src/styles/EmployeeDetails-styling.css |   51 +
 src/styles/dashboardStyling.css        |   89 +
 src/styles/employeelistStyling.css     |  116 +
 src/styles/homepageStyling.css         |   71 +
 src/styles/index.css                   |   67 +
 src/styles/layoutStyling.css           |  208 ++
 src/styles/loginpageStyling.css        |  136 +
 src/styles/pageStyling.css             |  200 ++
 vite.config.js                         |    7 +
 33 files changed, 6362 insertions(+)
 create mode 100644 .eslintrc.cjs
 create mode 100644 .gitignore
 create mode 100644 README.md
 create mode 100644 index.html
 create mode 100644 package-lock.json
 create mode 100644 package.json
 create mode 100644 public/vite.svg
 create mode 100644 src/App.jsx
 create mode 100644 src/api.jsx
 create mode 100644 src/assets/react.svg
 create mode 100644 src/components/HandleNextPage.jsx
 create mode 100644 src/components/HandlePrevPage.jsx
 create mode 100644 src/layout/Dash.jsx
 create mode 100644 src/main.jsx
 create mode 100644 src/pages/.Listemployees.jsx
 create mode 100644 src/pages/Dashboard.jsx
 create mode 100644 src/pages/Homepage.jsx
 create mode 100644 src/pages/ListSalaries.jsx
 create mode 100644 src/pages/Listemployees.jsx
 create mode 100644 src/pages/Loginpage.jsx
 create mode 100644 src/pages/modals/AddEmployee.jsx
 create mode 100644 src/pages/modals/EmployeeDetails.jsx
 create mode 100644 src/reportWebVitals.js
 create mode 100644 src/styles/AddEmployee-Styling.css
 create mode 100644 src/styles/EmployeeDetails-styling.css
 create mode 100644 src/styles/dashboardStyling.css
 create mode 100644 src/styles/employeelistStyling.css
 create mode 100644 src/styles/homepageStyling.css
 create mode 100644 src/styles/index.css
 create mode 100644 src/styles/layoutStyling.css
 create mode 100644 src/styles/loginpageStyling.css
 create mode 100644 src/styles/pageStyling.css
 create mode 100644 vite.config.js

diff --git a/.eslintrc.cjs b/.eslintrc.cjs
new file mode 100644
index 0000000..3e212e1
--- /dev/null
+++ b/.eslintrc.cjs
@@ -0,0 +1,21 @@
+module.exports = {
+  root: true,
+  env: { browser: true, es2020: true },
+  extends: [
+    'eslint:recommended',
+    'plugin:react/recommended',
+    'plugin:react/jsx-runtime',
+    'plugin:react-hooks/recommended',
+  ],
+  ignorePatterns: ['dist', '.eslintrc.cjs'],
+  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
+  settings: { react: { version: '18.2' } },
+  plugins: ['react-refresh'],
+  rules: {
+    'react/jsx-no-target-blank': 'off',
+    'react-refresh/only-export-components': [
+      'warn',
+      { allowConstantExport: true },
+    ],
+  },
+}
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..a547bf3
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,24 @@
+# Logs
+logs
+*.log
+npm-debug.log*
+yarn-debug.log*
+yarn-error.log*
+pnpm-debug.log*
+lerna-debug.log*
+
+node_modules
+dist
+dist-ssr
+*.local
+
+# Editor directories and files
+.vscode/*
+!.vscode/extensions.json
+.idea
+.DS_Store
+*.suo
+*.ntvs*
+*.njsproj
+*.sln
+*.sw?
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..f768e33
--- /dev/null
+++ b/README.md
@@ -0,0 +1,8 @@
+# React + Vite
+
+This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.
+
+Currently, two official plugins are available:
+
+- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
+- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh
diff --git a/index.html b/index.html
new file mode 100644
index 0000000..0c589ec
--- /dev/null
+++ b/index.html
@@ -0,0 +1,13 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <title>Vite + React</title>
+  </head>
+  <body>
+    <div id="root"></div>
+    <script type="module" src="/src/main.jsx"></script>
+  </body>
+</html>
diff --git a/package-lock.json b/package-lock.json
new file mode 100644
index 0000000..00286f7
--- /dev/null
+++ b/package-lock.json
@@ -0,0 +1,3792 @@
+{
+  "name": "mwm-pms-web-react-ui-decluttered",
+  "version": "0.0.0",
+  "lockfileVersion": 3,
+  "requires": true,
+  "packages": {
+    "": {
+      "name": "mwm-pms-web-react-ui-decluttered",
+      "version": "0.0.0",
+      "dependencies": {
+        "react": "^18.3.1",
+        "react-dom": "^18.3.1"
+      },
+      "devDependencies": {
+        "@types/react": "^18.3.3",
+        "@types/react-dom": "^18.3.0",
+        "@vitejs/plugin-react-swc": "^3.5.0",
+        "eslint": "^8.57.0",
+        "eslint-plugin-react": "^7.34.3",
+        "eslint-plugin-react-hooks": "^4.6.2",
+        "eslint-plugin-react-refresh": "^0.4.7",
+        "vite": "^5.3.4"
+      }
+    },
+    "node_modules/@esbuild/aix-ppc64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz",
+      "integrity": "sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==",
+      "cpu": [
+        "ppc64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "aix"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/android-arm": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.21.5.tgz",
+      "integrity": "sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/android-arm64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.21.5.tgz",
+      "integrity": "sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/android-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.21.5.tgz",
+      "integrity": "sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/darwin-arm64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.21.5.tgz",
+      "integrity": "sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/darwin-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.21.5.tgz",
+      "integrity": "sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/freebsd-arm64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.21.5.tgz",
+      "integrity": "sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/freebsd-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.21.5.tgz",
+      "integrity": "sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-arm": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.21.5.tgz",
+      "integrity": "sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-arm64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.21.5.tgz",
+      "integrity": "sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-ia32": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.21.5.tgz",
+      "integrity": "sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==",
+      "cpu": [
+        "ia32"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-loong64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.21.5.tgz",
+      "integrity": "sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==",
+      "cpu": [
+        "loong64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-mips64el": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.21.5.tgz",
+      "integrity": "sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==",
+      "cpu": [
+        "mips64el"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-ppc64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.21.5.tgz",
+      "integrity": "sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==",
+      "cpu": [
+        "ppc64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-riscv64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.21.5.tgz",
+      "integrity": "sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==",
+      "cpu": [
+        "riscv64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-s390x": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.21.5.tgz",
+      "integrity": "sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==",
+      "cpu": [
+        "s390x"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.21.5.tgz",
+      "integrity": "sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/netbsd-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.21.5.tgz",
+      "integrity": "sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "netbsd"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/openbsd-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.21.5.tgz",
+      "integrity": "sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "openbsd"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/sunos-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.21.5.tgz",
+      "integrity": "sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "sunos"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/win32-arm64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.21.5.tgz",
+      "integrity": "sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/win32-ia32": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.21.5.tgz",
+      "integrity": "sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==",
+      "cpu": [
+        "ia32"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/win32-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.21.5.tgz",
+      "integrity": "sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@eslint-community/eslint-utils": {
+      "version": "4.4.0",
+      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.4.0.tgz",
+      "integrity": "sha512-1/sA4dwrzBAyeUoQ6oxahHKmrZvsnLCg4RfxW3ZFGGmQkSNQPFNLV9CUEFQP1x9EYXHTo5p6xdhZM1Ne9p/AfA==",
+      "dev": true,
+      "dependencies": {
+        "eslint-visitor-keys": "^3.3.0"
+      },
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "peerDependencies": {
+        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
+      }
+    },
+    "node_modules/@eslint-community/regexpp": {
+      "version": "4.11.0",
+      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.11.0.tgz",
+      "integrity": "sha512-G/M/tIiMrTAxEWRfLfQJMmGNX28IxBg4PBz8XqQhqUHLFI6TL2htpIB1iQCj144V5ee/JaKyT9/WZ0MGZWfA7A==",
+      "dev": true,
+      "engines": {
+        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
+      }
+    },
+    "node_modules/@eslint/eslintrc": {
+      "version": "2.1.4",
+      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz",
+      "integrity": "sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==",
+      "dev": true,
+      "dependencies": {
+        "ajv": "^6.12.4",
+        "debug": "^4.3.2",
+        "espree": "^9.6.0",
+        "globals": "^13.19.0",
+        "ignore": "^5.2.0",
+        "import-fresh": "^3.2.1",
+        "js-yaml": "^4.1.0",
+        "minimatch": "^3.1.2",
+        "strip-json-comments": "^3.1.1"
+      },
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/@eslint/js": {
+      "version": "8.57.0",
+      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-8.57.0.tgz",
+      "integrity": "sha512-Ys+3g2TaW7gADOJzPt83SJtCDhMjndcDMFVQ/Tj9iA1BfJzFKD9mAUXT3OenpuPHbI6P/myECxRJrofUsDx/5g==",
+      "dev": true,
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      }
+    },
+    "node_modules/@humanwhocodes/config-array": {
+      "version": "0.11.14",
+      "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.11.14.tgz",
+      "integrity": "sha512-3T8LkOmg45BV5FICb15QQMsyUSWrQ8AygVfC7ZG32zOalnqrilm018ZVCw0eapXux8FtA33q8PSRSstjee3jSg==",
+      "deprecated": "Use @eslint/config-array instead",
+      "dev": true,
+      "dependencies": {
+        "@humanwhocodes/object-schema": "^2.0.2",
+        "debug": "^4.3.1",
+        "minimatch": "^3.0.5"
+      },
+      "engines": {
+        "node": ">=10.10.0"
+      }
+    },
+    "node_modules/@humanwhocodes/module-importer": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
+      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
+      "dev": true,
+      "engines": {
+        "node": ">=12.22"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/nzakas"
+      }
+    },
+    "node_modules/@humanwhocodes/object-schema": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.3.tgz",
+      "integrity": "sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==",
+      "deprecated": "Use @eslint/object-schema instead",
+      "dev": true
+    },
+    "node_modules/@nodelib/fs.scandir": {
+      "version": "2.1.5",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
+      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
+      "dev": true,
+      "dependencies": {
+        "@nodelib/fs.stat": "2.0.5",
+        "run-parallel": "^1.1.9"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/@nodelib/fs.stat": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
+      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
+      "dev": true,
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/@nodelib/fs.walk": {
+      "version": "1.2.8",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
+      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
+      "dev": true,
+      "dependencies": {
+        "@nodelib/fs.scandir": "2.1.5",
+        "fastq": "^1.6.0"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/@rollup/rollup-android-arm-eabi": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.19.0.tgz",
+      "integrity": "sha512-JlPfZ/C7yn5S5p0yKk7uhHTTnFlvTgLetl2VxqE518QgyM7C9bSfFTYvB/Q/ftkq0RIPY4ySxTz+/wKJ/dXC0w==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "android"
+      ]
+    },
+    "node_modules/@rollup/rollup-android-arm64": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.19.0.tgz",
+      "integrity": "sha512-RDxUSY8D1tWYfn00DDi5myxKgOk6RvWPxhmWexcICt/MEC6yEMr4HNCu1sXXYLw8iAsg0D44NuU+qNq7zVWCrw==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "android"
+      ]
+    },
+    "node_modules/@rollup/rollup-darwin-arm64": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.19.0.tgz",
+      "integrity": "sha512-emvKHL4B15x6nlNTBMtIaC9tLPRpeA5jMvRLXVbl/W9Ie7HhkrE7KQjvgS9uxgatL1HmHWDXk5TTS4IaNJxbAA==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "darwin"
+      ]
+    },
+    "node_modules/@rollup/rollup-darwin-x64": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.19.0.tgz",
+      "integrity": "sha512-fO28cWA1dC57qCd+D0rfLC4VPbh6EOJXrreBmFLWPGI9dpMlER2YwSPZzSGfq11XgcEpPukPTfEVFtw2q2nYJg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "darwin"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.19.0.tgz",
+      "integrity": "sha512-2Rn36Ubxdv32NUcfm0wB1tgKqkQuft00PtM23VqLuCUR4N5jcNWDoV5iBC9jeGdgS38WK66ElncprqgMUOyomw==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.19.0.tgz",
+      "integrity": "sha512-gJuzIVdq/X1ZA2bHeCGCISe0VWqCoNT8BvkQ+BfsixXwTOndhtLUpOg0A1Fcx/+eA6ei6rMBzlOz4JzmiDw7JQ==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm64-gnu": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.19.0.tgz",
+      "integrity": "sha512-0EkX2HYPkSADo9cfeGFoQ7R0/wTKb7q6DdwI4Yn/ULFE1wuRRCHybxpl2goQrx4c/yzK3I8OlgtBu4xvted0ug==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm64-musl": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.19.0.tgz",
+      "integrity": "sha512-GlIQRj9px52ISomIOEUq/IojLZqzkvRpdP3cLgIE1wUWaiU5Takwlzpz002q0Nxxr1y2ZgxC2obWxjr13lvxNQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.19.0.tgz",
+      "integrity": "sha512-N6cFJzssruDLUOKfEKeovCKiHcdwVYOT1Hs6dovDQ61+Y9n3Ek4zXvtghPPelt6U0AH4aDGnDLb83uiJMkWYzQ==",
+      "cpu": [
+        "ppc64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.19.0.tgz",
+      "integrity": "sha512-2DnD3mkS2uuam/alF+I7M84koGwvn3ZVD7uG+LEWpyzo/bq8+kKnus2EVCkcvh6PlNB8QPNFOz6fWd5N8o1CYg==",
+      "cpu": [
+        "riscv64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-s390x-gnu": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.19.0.tgz",
+      "integrity": "sha512-D6pkaF7OpE7lzlTOFCB2m3Ngzu2ykw40Nka9WmKGUOTS3xcIieHe82slQlNq69sVB04ch73thKYIWz/Ian8DUA==",
+      "cpu": [
+        "s390x"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-x64-gnu": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.19.0.tgz",
+      "integrity": "sha512-HBndjQLP8OsdJNSxpNIN0einbDmRFg9+UQeZV1eiYupIRuZsDEoeGU43NQsS34Pp166DtwQOnpcbV/zQxM+rWA==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-x64-musl": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.19.0.tgz",
+      "integrity": "sha512-HxfbvfCKJe/RMYJJn0a12eiOI9OOtAUF4G6ozrFUK95BNyoJaSiBjIOHjZskTUffUrB84IPKkFG9H9nEvJGW6A==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-win32-arm64-msvc": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.19.0.tgz",
+      "integrity": "sha512-HxDMKIhmcguGTiP5TsLNolwBUK3nGGUEoV/BO9ldUBoMLBssvh4J0X8pf11i1fTV7WShWItB1bKAKjX4RQeYmg==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "win32"
+      ]
+    },
+    "node_modules/@rollup/rollup-win32-ia32-msvc": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.19.0.tgz",
+      "integrity": "sha512-xItlIAZZaiG/u0wooGzRsx11rokP4qyc/79LkAOdznGRAbOFc+SfEdfUOszG1odsHNgwippUJavag/+W/Etc6Q==",
+      "cpu": [
+        "ia32"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "win32"
+      ]
+    },
+    "node_modules/@rollup/rollup-win32-x64-msvc": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.19.0.tgz",
+      "integrity": "sha512-xNo5fV5ycvCCKqiZcpB65VMR11NJB+StnxHz20jdqRAktfdfzhgjTiJ2doTDQE/7dqGaV5I7ZGqKpgph6lCIag==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "win32"
+      ]
+    },
+    "node_modules/@swc/core": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/@swc/core/-/core-1.7.0.tgz",
+      "integrity": "sha512-d4vMzH6ICllDwlPuhset2h8gu/USHdbyfJim+2hQEdxC0UONtfpmu38XBgNqRjStrji1Q5M10jfeUZL3cu1i8g==",
+      "dev": true,
+      "hasInstallScript": true,
+      "dependencies": {
+        "@swc/counter": "^0.1.3",
+        "@swc/types": "^0.1.9"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/swc"
+      },
+      "optionalDependencies": {
+        "@swc/core-darwin-arm64": "1.7.0",
+        "@swc/core-darwin-x64": "1.7.0",
+        "@swc/core-linux-arm-gnueabihf": "1.7.0",
+        "@swc/core-linux-arm64-gnu": "1.7.0",
+        "@swc/core-linux-arm64-musl": "1.7.0",
+        "@swc/core-linux-x64-gnu": "1.7.0",
+        "@swc/core-linux-x64-musl": "1.7.0",
+        "@swc/core-win32-arm64-msvc": "1.7.0",
+        "@swc/core-win32-ia32-msvc": "1.7.0",
+        "@swc/core-win32-x64-msvc": "1.7.0"
+      },
+      "peerDependencies": {
+        "@swc/helpers": "*"
+      },
+      "peerDependenciesMeta": {
+        "@swc/helpers": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@swc/core-darwin-arm64": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/@swc/core-darwin-arm64/-/core-darwin-arm64-1.7.0.tgz",
+      "integrity": "sha512-2ylhM7f0HwUwLrFYZAe/dse8PCbPsYcJS3Dt7Q8NT3PUn7vy6QOMxNcOPPuDrnmaXqQQO3oxdmRapguTxaat9g==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/@swc/core-darwin-x64": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/@swc/core-darwin-x64/-/core-darwin-x64-1.7.0.tgz",
+      "integrity": "sha512-SgVnN4gT1Rb9YfTkp4FCUITqSs7Yj0uB2SUciu5CV3HuGvS5YXCUzh+KrwpLFtx8NIgivISKcNnb41mJi98X8Q==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/@swc/core-linux-arm-gnueabihf": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/@swc/core-linux-arm-gnueabihf/-/core-linux-arm-gnueabihf-1.7.0.tgz",
+      "integrity": "sha512-+Z9Dayart1iKJQEJJ9N/KS4z5EdXJE3WPFikY0jonKTo4Dd8RuyVz5yLvqcIMeVdz/SwximATaL6iJXw7hZS9A==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/@swc/core-linux-arm64-gnu": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/@swc/core-linux-arm64-gnu/-/core-linux-arm64-gnu-1.7.0.tgz",
+      "integrity": "sha512-UnLrCiZ1EI4shznJn0xP6DLgsXUSwtfsdgHhGYCrvbgVBBve3S9iFgVFEB3SPl7Q/TdowNbrN4zHU0oChfiNfw==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/@swc/core-linux-arm64-musl": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/@swc/core-linux-arm64-musl/-/core-linux-arm64-musl-1.7.0.tgz",
+      "integrity": "sha512-H724UANA+ptsfwKRr9mnaDa9cb5fw0oFysiGKTgb3DMYcgk3Od0jMTnXVPFSVpo7FlmyxeC9K8ueUPBOoOK6XA==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/@swc/core-linux-x64-gnu": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/@swc/core-linux-x64-gnu/-/core-linux-x64-gnu-1.7.0.tgz",
+      "integrity": "sha512-SY3HA0K0Dpqt1HIfMLGpwL4hd4UaL2xHP5oZXPlRQPhUDZrbb4PbI3ZJnh66c63eL4ZR8EJ+HRFI0Alx5p69Zw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/@swc/core-linux-x64-musl": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/@swc/core-linux-x64-musl/-/core-linux-x64-musl-1.7.0.tgz",
+      "integrity": "sha512-cEJ2ebtV1v/5Ilb55E05J6F5SrHKQWzUttIhR5Mkayyo+yvPslcpByuFC3D+J7X1ebziTOBpWuMpUdjLfh3SMQ==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/@swc/core-win32-arm64-msvc": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/@swc/core-win32-arm64-msvc/-/core-win32-arm64-msvc-1.7.0.tgz",
+      "integrity": "sha512-ecQOOmzEssz+m0pR4xDYCGuvn3E/l0nQ3tk5jp1NA1lsAy4bMV0YbYCHjptYvWL/UjhIerIp3IlCJ8x5DodSog==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/@swc/core-win32-ia32-msvc": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/@swc/core-win32-ia32-msvc/-/core-win32-ia32-msvc-1.7.0.tgz",
+      "integrity": "sha512-gz81seZkRn3zMnVOc7L5k6F4vQC82gIxmHiL+GedK+A37XI/X26AASU3zxvORnqQbwQYXQ+AEVckxBmFlz3v2g==",
+      "cpu": [
+        "ia32"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/@swc/core-win32-x64-msvc": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/@swc/core-win32-x64-msvc/-/core-win32-x64-msvc-1.7.0.tgz",
+      "integrity": "sha512-b5Fd1xEOw9uqBpj2lqsaR4Iq9UhiL84hNDcEsi6DQA7Y1l85waQAslTbS0E4/pJ1PISAs0jW0zIGLco1eaWBOg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/@swc/counter": {
+      "version": "0.1.3",
+      "resolved": "https://registry.npmjs.org/@swc/counter/-/counter-0.1.3.tgz",
+      "integrity": "sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==",
+      "dev": true
+    },
+    "node_modules/@swc/types": {
+      "version": "0.1.12",
+      "resolved": "https://registry.npmjs.org/@swc/types/-/types-0.1.12.tgz",
+      "integrity": "sha512-wBJA+SdtkbFhHjTMYH+dEH1y4VpfGdAc2Kw/LK09i9bXd/K6j6PkDcFCEzb6iVfZMkPRrl/q0e3toqTAJdkIVA==",
+      "dev": true,
+      "dependencies": {
+        "@swc/counter": "^0.1.3"
+      }
+    },
+    "node_modules/@types/estree": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.5.tgz",
+      "integrity": "sha512-/kYRxGDLWzHOB7q+wtSUQlFrtcdUccpfy+X+9iMBpHK8QLLhx2wIPYuS5DYtR9Wa/YlZAbIovy7qVdB1Aq6Lyw==",
+      "dev": true
+    },
+    "node_modules/@types/prop-types": {
+      "version": "15.7.12",
+      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.12.tgz",
+      "integrity": "sha512-5zvhXYtRNRluoE/jAp4GVsSduVUzNWKkOZrCDBWYtE7biZywwdC2AcEzg+cSMLFRfVgeAFqpfNabiPjxFddV1Q==",
+      "dev": true
+    },
+    "node_modules/@types/react": {
+      "version": "18.3.3",
+      "resolved": "https://registry.npmjs.org/@types/react/-/react-18.3.3.tgz",
+      "integrity": "sha512-hti/R0pS0q1/xx+TsI73XIqk26eBsISZ2R0wUijXIngRK9R/e7Xw/cXVxQK7R5JjW+SV4zGcn5hXjudkN/pLIw==",
+      "dev": true,
+      "dependencies": {
+        "@types/prop-types": "*",
+        "csstype": "^3.0.2"
+      }
+    },
+    "node_modules/@types/react-dom": {
+      "version": "18.3.0",
+      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-18.3.0.tgz",
+      "integrity": "sha512-EhwApuTmMBmXuFOikhQLIBUn6uFg81SwLMOAUgodJF14SOBOCMdU04gDoYi0WOJJHD144TL32z4yDqCW3dnkQg==",
+      "dev": true,
+      "dependencies": {
+        "@types/react": "*"
+      }
+    },
+    "node_modules/@ungap/structured-clone": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.2.0.tgz",
+      "integrity": "sha512-zuVdFrMJiuCDQUMCzQaD6KL28MjnqqN8XnAqiEq9PNm/hCPTSGfrXCOfwj1ow4LFb/tNymJPwsNbVePc1xFqrQ==",
+      "dev": true
+    },
+    "node_modules/@vitejs/plugin-react-swc": {
+      "version": "3.7.0",
+      "resolved": "https://registry.npmjs.org/@vitejs/plugin-react-swc/-/plugin-react-swc-3.7.0.tgz",
+      "integrity": "sha512-yrknSb3Dci6svCd/qhHqhFPDSw0QtjumcqdKMoNNzmOl5lMXTTiqzjWtG4Qask2HdvvzaNgSunbQGet8/GrKdA==",
+      "dev": true,
+      "dependencies": {
+        "@swc/core": "^1.5.7"
+      },
+      "peerDependencies": {
+        "vite": "^4 || ^5"
+      }
+    },
+    "node_modules/acorn": {
+      "version": "8.12.1",
+      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.12.1.tgz",
+      "integrity": "sha512-tcpGyI9zbizT9JbV6oYE477V6mTlXvvi0T0G3SNIYE2apm/G5huBa1+K89VGeovbg+jycCrfhl3ADxErOuO6Jg==",
+      "dev": true,
+      "bin": {
+        "acorn": "bin/acorn"
+      },
+      "engines": {
+        "node": ">=0.4.0"
+      }
+    },
+    "node_modules/acorn-jsx": {
+      "version": "5.3.2",
+      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
+      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
+      "dev": true,
+      "peerDependencies": {
+        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
+      }
+    },
+    "node_modules/ajv": {
+      "version": "6.12.6",
+      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
+      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
+      "dev": true,
+      "dependencies": {
+        "fast-deep-equal": "^3.1.1",
+        "fast-json-stable-stringify": "^2.0.0",
+        "json-schema-traverse": "^0.4.1",
+        "uri-js": "^4.2.2"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/epoberezkin"
+      }
+    },
+    "node_modules/ansi-regex": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
+      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
+      "dev": true,
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/ansi-styles": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
+      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
+      "dev": true,
+      "dependencies": {
+        "color-convert": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
+      }
+    },
+    "node_modules/argparse": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
+      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
+      "dev": true
+    },
+    "node_modules/array-buffer-byte-length": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.1.tgz",
+      "integrity": "sha512-ahC5W1xgou+KTXix4sAO8Ki12Q+jf4i0+tmk3sC+zgcynshkHxzpXdImBehiUYKKKDwvfFiJl1tZt6ewscS1Mg==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.5",
+        "is-array-buffer": "^3.0.4"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array-includes": {
+      "version": "3.1.8",
+      "resolved": "https://registry.npmjs.org/array-includes/-/array-includes-3.1.8.tgz",
+      "integrity": "sha512-itaWrbYbqpGXkGhZPGUulwnhVf5Hpy1xiCFsGqyIGglbBxmG5vSjxQen3/WGOjPpNEv1RtBLKxbmVXm8HpJStQ==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.2",
+        "es-object-atoms": "^1.0.0",
+        "get-intrinsic": "^1.2.4",
+        "is-string": "^1.0.7"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array.prototype.findlast": {
+      "version": "1.2.5",
+      "resolved": "https://registry.npmjs.org/array.prototype.findlast/-/array.prototype.findlast-1.2.5.tgz",
+      "integrity": "sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.2",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.0.0",
+        "es-shim-unscopables": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array.prototype.flat": {
+      "version": "1.3.2",
+      "resolved": "https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.2.tgz",
+      "integrity": "sha512-djYB+Zx2vLewY8RWlNCUdHjDXs2XOgm602S9E7P/UpHgfeHL00cRiIF+IN/G/aUJ7kGPb6yO/ErDI5V2s8iycA==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.2",
+        "define-properties": "^1.2.0",
+        "es-abstract": "^1.22.1",
+        "es-shim-unscopables": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array.prototype.flatmap": {
+      "version": "1.3.2",
+      "resolved": "https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.2.tgz",
+      "integrity": "sha512-Ewyx0c9PmpcsByhSW4r+9zDU7sGjFc86qf/kKtuSCRdhfbk0SNLLkaT5qvcHnRGgc5NP/ly/y+qkXkqONX54CQ==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.2",
+        "define-properties": "^1.2.0",
+        "es-abstract": "^1.22.1",
+        "es-shim-unscopables": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array.prototype.tosorted": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.4.tgz",
+      "integrity": "sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.3",
+        "es-errors": "^1.3.0",
+        "es-shim-unscopables": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/arraybuffer.prototype.slice": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.3.tgz",
+      "integrity": "sha512-bMxMKAjg13EBSVscxTaYA4mRc5t1UAXa2kXiGTNfZ079HIWXEkKmkgFrh/nJqamaLSrXO5H4WFFkPEaLJWbs3A==",
+      "dev": true,
+      "dependencies": {
+        "array-buffer-byte-length": "^1.0.1",
+        "call-bind": "^1.0.5",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.22.3",
+        "es-errors": "^1.2.1",
+        "get-intrinsic": "^1.2.3",
+        "is-array-buffer": "^3.0.4",
+        "is-shared-array-buffer": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/available-typed-arrays": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
+      "integrity": "sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==",
+      "dev": true,
+      "dependencies": {
+        "possible-typed-array-names": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/balanced-match": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
+      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
+      "dev": true
+    },
+    "node_modules/brace-expansion": {
+      "version": "1.1.11",
+      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
+      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
+      "dev": true,
+      "dependencies": {
+        "balanced-match": "^1.0.0",
+        "concat-map": "0.0.1"
+      }
+    },
+    "node_modules/call-bind": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz",
+      "integrity": "sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==",
+      "dev": true,
+      "dependencies": {
+        "es-define-property": "^1.0.0",
+        "es-errors": "^1.3.0",
+        "function-bind": "^1.1.2",
+        "get-intrinsic": "^1.2.4",
+        "set-function-length": "^1.2.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/callsites": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
+      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
+      "dev": true,
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/chalk": {
+      "version": "4.1.2",
+      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
+      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
+      "dev": true,
+      "dependencies": {
+        "ansi-styles": "^4.1.0",
+        "supports-color": "^7.1.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/chalk?sponsor=1"
+      }
+    },
+    "node_modules/color-convert": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
+      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
+      "dev": true,
+      "dependencies": {
+        "color-name": "~1.1.4"
+      },
+      "engines": {
+        "node": ">=7.0.0"
+      }
+    },
+    "node_modules/color-name": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
+      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
+      "dev": true
+    },
+    "node_modules/concat-map": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
+      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
+      "dev": true
+    },
+    "node_modules/cross-spawn": {
+      "version": "7.0.3",
+      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
+      "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
+      "dev": true,
+      "dependencies": {
+        "path-key": "^3.1.0",
+        "shebang-command": "^2.0.0",
+        "which": "^2.0.1"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/csstype": {
+      "version": "3.1.3",
+      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
+      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
+      "dev": true
+    },
+    "node_modules/data-view-buffer": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.1.tgz",
+      "integrity": "sha512-0lht7OugA5x3iJLOWFhWK/5ehONdprk0ISXqVFn/NFrDu+cuc8iADFrGQz5BnRK7LLU3JmkbXSxaqX+/mXYtUA==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.6",
+        "es-errors": "^1.3.0",
+        "is-data-view": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/data-view-byte-length": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.1.tgz",
+      "integrity": "sha512-4J7wRJD3ABAzr8wP+OcIcqq2dlUKp4DVflx++hs5h5ZKydWMI6/D/fAot+yh6g2tHh8fLFTvNOaVN357NvSrOQ==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "es-errors": "^1.3.0",
+        "is-data-view": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/data-view-byte-offset": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.0.tgz",
+      "integrity": "sha512-t/Ygsytq+R995EJ5PZlD4Cu56sWa8InXySaViRzw9apusqsOO2bQP+SbYzAhR0pFKoB+43lYy8rWban9JSuXnA==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.6",
+        "es-errors": "^1.3.0",
+        "is-data-view": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/debug": {
+      "version": "4.3.5",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.5.tgz",
+      "integrity": "sha512-pt0bNEmneDIvdL1Xsd9oDQ/wrQRkXDT4AUWlNZNPKvW5x/jyO9VFXkJUP07vQ2upmw5PlaITaPKc31jK13V+jg==",
+      "dev": true,
+      "dependencies": {
+        "ms": "2.1.2"
+      },
+      "engines": {
+        "node": ">=6.0"
+      },
+      "peerDependenciesMeta": {
+        "supports-color": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/deep-is": {
+      "version": "0.1.4",
+      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
+      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
+      "dev": true
+    },
+    "node_modules/define-data-property": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
+      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
+      "dev": true,
+      "dependencies": {
+        "es-define-property": "^1.0.0",
+        "es-errors": "^1.3.0",
+        "gopd": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/define-properties": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz",
+      "integrity": "sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==",
+      "dev": true,
+      "dependencies": {
+        "define-data-property": "^1.0.1",
+        "has-property-descriptors": "^1.0.0",
+        "object-keys": "^1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/doctrine": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
+      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
+      "dev": true,
+      "dependencies": {
+        "esutils": "^2.0.2"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/es-abstract": {
+      "version": "1.23.3",
+      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.23.3.tgz",
+      "integrity": "sha512-e+HfNH61Bj1X9/jLc5v1owaLYuHdeHHSQlkhCBiTK8rBvKaULl/beGMxwrMXjpYrv4pz22BlY570vVePA2ho4A==",
+      "dev": true,
+      "dependencies": {
+        "array-buffer-byte-length": "^1.0.1",
+        "arraybuffer.prototype.slice": "^1.0.3",
+        "available-typed-arrays": "^1.0.7",
+        "call-bind": "^1.0.7",
+        "data-view-buffer": "^1.0.1",
+        "data-view-byte-length": "^1.0.1",
+        "data-view-byte-offset": "^1.0.0",
+        "es-define-property": "^1.0.0",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.0.0",
+        "es-set-tostringtag": "^2.0.3",
+        "es-to-primitive": "^1.2.1",
+        "function.prototype.name": "^1.1.6",
+        "get-intrinsic": "^1.2.4",
+        "get-symbol-description": "^1.0.2",
+        "globalthis": "^1.0.3",
+        "gopd": "^1.0.1",
+        "has-property-descriptors": "^1.0.2",
+        "has-proto": "^1.0.3",
+        "has-symbols": "^1.0.3",
+        "hasown": "^2.0.2",
+        "internal-slot": "^1.0.7",
+        "is-array-buffer": "^3.0.4",
+        "is-callable": "^1.2.7",
+        "is-data-view": "^1.0.1",
+        "is-negative-zero": "^2.0.3",
+        "is-regex": "^1.1.4",
+        "is-shared-array-buffer": "^1.0.3",
+        "is-string": "^1.0.7",
+        "is-typed-array": "^1.1.13",
+        "is-weakref": "^1.0.2",
+        "object-inspect": "^1.13.1",
+        "object-keys": "^1.1.1",
+        "object.assign": "^4.1.5",
+        "regexp.prototype.flags": "^1.5.2",
+        "safe-array-concat": "^1.1.2",
+        "safe-regex-test": "^1.0.3",
+        "string.prototype.trim": "^1.2.9",
+        "string.prototype.trimend": "^1.0.8",
+        "string.prototype.trimstart": "^1.0.8",
+        "typed-array-buffer": "^1.0.2",
+        "typed-array-byte-length": "^1.0.1",
+        "typed-array-byte-offset": "^1.0.2",
+        "typed-array-length": "^1.0.6",
+        "unbox-primitive": "^1.0.2",
+        "which-typed-array": "^1.1.15"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/es-define-property": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz",
+      "integrity": "sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==",
+      "dev": true,
+      "dependencies": {
+        "get-intrinsic": "^1.2.4"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-errors": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
+      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
+      "dev": true,
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-iterator-helpers": {
+      "version": "1.0.19",
+      "resolved": "https://registry.npmjs.org/es-iterator-helpers/-/es-iterator-helpers-1.0.19.tgz",
+      "integrity": "sha512-zoMwbCcH5hwUkKJkT8kDIBZSz9I6mVG//+lDCinLCGov4+r7NIy0ld8o03M0cJxl2spVf6ESYVS6/gpIfq1FFw==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.3",
+        "es-errors": "^1.3.0",
+        "es-set-tostringtag": "^2.0.3",
+        "function-bind": "^1.1.2",
+        "get-intrinsic": "^1.2.4",
+        "globalthis": "^1.0.3",
+        "has-property-descriptors": "^1.0.2",
+        "has-proto": "^1.0.3",
+        "has-symbols": "^1.0.3",
+        "internal-slot": "^1.0.7",
+        "iterator.prototype": "^1.1.2",
+        "safe-array-concat": "^1.1.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-object-atoms": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.0.0.tgz",
+      "integrity": "sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==",
+      "dev": true,
+      "dependencies": {
+        "es-errors": "^1.3.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-set-tostringtag": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.0.3.tgz",
+      "integrity": "sha512-3T8uNMC3OQTHkFUsFq8r/BwAXLHvU/9O9mE0fBc/MY5iq/8H7ncvO947LmYA6ldWw9Uh8Yhf25zu6n7nML5QWQ==",
+      "dev": true,
+      "dependencies": {
+        "get-intrinsic": "^1.2.4",
+        "has-tostringtag": "^1.0.2",
+        "hasown": "^2.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-shim-unscopables": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.0.2.tgz",
+      "integrity": "sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==",
+      "dev": true,
+      "dependencies": {
+        "hasown": "^2.0.0"
+      }
+    },
+    "node_modules/es-to-primitive": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz",
+      "integrity": "sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==",
+      "dev": true,
+      "dependencies": {
+        "is-callable": "^1.1.4",
+        "is-date-object": "^1.0.1",
+        "is-symbol": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/esbuild": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.21.5.tgz",
+      "integrity": "sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==",
+      "dev": true,
+      "hasInstallScript": true,
+      "bin": {
+        "esbuild": "bin/esbuild"
+      },
+      "engines": {
+        "node": ">=12"
+      },
+      "optionalDependencies": {
+        "@esbuild/aix-ppc64": "0.21.5",
+        "@esbuild/android-arm": "0.21.5",
+        "@esbuild/android-arm64": "0.21.5",
+        "@esbuild/android-x64": "0.21.5",
+        "@esbuild/darwin-arm64": "0.21.5",
+        "@esbuild/darwin-x64": "0.21.5",
+        "@esbuild/freebsd-arm64": "0.21.5",
+        "@esbuild/freebsd-x64": "0.21.5",
+        "@esbuild/linux-arm": "0.21.5",
+        "@esbuild/linux-arm64": "0.21.5",
+        "@esbuild/linux-ia32": "0.21.5",
+        "@esbuild/linux-loong64": "0.21.5",
+        "@esbuild/linux-mips64el": "0.21.5",
+        "@esbuild/linux-ppc64": "0.21.5",
+        "@esbuild/linux-riscv64": "0.21.5",
+        "@esbuild/linux-s390x": "0.21.5",
+        "@esbuild/linux-x64": "0.21.5",
+        "@esbuild/netbsd-x64": "0.21.5",
+        "@esbuild/openbsd-x64": "0.21.5",
+        "@esbuild/sunos-x64": "0.21.5",
+        "@esbuild/win32-arm64": "0.21.5",
+        "@esbuild/win32-ia32": "0.21.5",
+        "@esbuild/win32-x64": "0.21.5"
+      }
+    },
+    "node_modules/escape-string-regexp": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
+      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
+      "dev": true,
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/eslint": {
+      "version": "8.57.0",
+      "resolved": "https://registry.npmjs.org/eslint/-/eslint-8.57.0.tgz",
+      "integrity": "sha512-dZ6+mexnaTIbSBZWgou51U6OmzIhYM2VcNdtiTtI7qPNZm35Akpr0f6vtw3w1Kmn5PYo+tZVfh13WrhpS6oLqQ==",
+      "dev": true,
+      "dependencies": {
+        "@eslint-community/eslint-utils": "^4.2.0",
+        "@eslint-community/regexpp": "^4.6.1",
+        "@eslint/eslintrc": "^2.1.4",
+        "@eslint/js": "8.57.0",
+        "@humanwhocodes/config-array": "^0.11.14",
+        "@humanwhocodes/module-importer": "^1.0.1",
+        "@nodelib/fs.walk": "^1.2.8",
+        "@ungap/structured-clone": "^1.2.0",
+        "ajv": "^6.12.4",
+        "chalk": "^4.0.0",
+        "cross-spawn": "^7.0.2",
+        "debug": "^4.3.2",
+        "doctrine": "^3.0.0",
+        "escape-string-regexp": "^4.0.0",
+        "eslint-scope": "^7.2.2",
+        "eslint-visitor-keys": "^3.4.3",
+        "espree": "^9.6.1",
+        "esquery": "^1.4.2",
+        "esutils": "^2.0.2",
+        "fast-deep-equal": "^3.1.3",
+        "file-entry-cache": "^6.0.1",
+        "find-up": "^5.0.0",
+        "glob-parent": "^6.0.2",
+        "globals": "^13.19.0",
+        "graphemer": "^1.4.0",
+        "ignore": "^5.2.0",
+        "imurmurhash": "^0.1.4",
+        "is-glob": "^4.0.0",
+        "is-path-inside": "^3.0.3",
+        "js-yaml": "^4.1.0",
+        "json-stable-stringify-without-jsonify": "^1.0.1",
+        "levn": "^0.4.1",
+        "lodash.merge": "^4.6.2",
+        "minimatch": "^3.1.2",
+        "natural-compare": "^1.4.0",
+        "optionator": "^0.9.3",
+        "strip-ansi": "^6.0.1",
+        "text-table": "^0.2.0"
+      },
+      "bin": {
+        "eslint": "bin/eslint.js"
+      },
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/eslint-plugin-react": {
+      "version": "7.35.0",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.35.0.tgz",
+      "integrity": "sha512-v501SSMOWv8gerHkk+IIQBkcGRGrO2nfybfj5pLxuJNFTPxxA3PSryhXTK+9pNbtkggheDdsC0E9Q8CuPk6JKA==",
+      "dev": true,
+      "dependencies": {
+        "array-includes": "^3.1.8",
+        "array.prototype.findlast": "^1.2.5",
+        "array.prototype.flatmap": "^1.3.2",
+        "array.prototype.tosorted": "^1.1.4",
+        "doctrine": "^2.1.0",
+        "es-iterator-helpers": "^1.0.19",
+        "estraverse": "^5.3.0",
+        "hasown": "^2.0.2",
+        "jsx-ast-utils": "^2.4.1 || ^3.0.0",
+        "minimatch": "^3.1.2",
+        "object.entries": "^1.1.8",
+        "object.fromentries": "^2.0.8",
+        "object.values": "^1.2.0",
+        "prop-types": "^15.8.1",
+        "resolve": "^2.0.0-next.5",
+        "semver": "^6.3.1",
+        "string.prototype.matchall": "^4.0.11",
+        "string.prototype.repeat": "^1.0.0"
+      },
+      "engines": {
+        "node": ">=4"
+      },
+      "peerDependencies": {
+        "eslint": "^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7"
+      }
+    },
+    "node_modules/eslint-plugin-react-hooks": {
+      "version": "4.6.2",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-4.6.2.tgz",
+      "integrity": "sha512-QzliNJq4GinDBcD8gPB5v0wh6g8q3SUi6EFF0x8N/BL9PoVs0atuGc47ozMRyOWAKdwaZ5OnbOEa3WR+dSGKuQ==",
+      "dev": true,
+      "engines": {
+        "node": ">=10"
+      },
+      "peerDependencies": {
+        "eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0"
+      }
+    },
+    "node_modules/eslint-plugin-react-refresh": {
+      "version": "0.4.9",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-react-refresh/-/eslint-plugin-react-refresh-0.4.9.tgz",
+      "integrity": "sha512-QK49YrBAo5CLNLseZ7sZgvgTy21E6NEw22eZqc4teZfH8pxV3yXc9XXOYfUI6JNpw7mfHNkAeWtBxrTyykB6HA==",
+      "dev": true,
+      "peerDependencies": {
+        "eslint": ">=7"
+      }
+    },
+    "node_modules/eslint-plugin-react/node_modules/doctrine": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
+      "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
+      "dev": true,
+      "dependencies": {
+        "esutils": "^2.0.2"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/eslint-scope": {
+      "version": "7.2.2",
+      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz",
+      "integrity": "sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==",
+      "dev": true,
+      "dependencies": {
+        "esrecurse": "^4.3.0",
+        "estraverse": "^5.2.0"
+      },
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/eslint-visitor-keys": {
+      "version": "3.4.3",
+      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
+      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
+      "dev": true,
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/espree": {
+      "version": "9.6.1",
+      "resolved": "https://registry.npmjs.org/espree/-/espree-9.6.1.tgz",
+      "integrity": "sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==",
+      "dev": true,
+      "dependencies": {
+        "acorn": "^8.9.0",
+        "acorn-jsx": "^5.3.2",
+        "eslint-visitor-keys": "^3.4.1"
+      },
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/esquery": {
+      "version": "1.6.0",
+      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
+      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
+      "dev": true,
+      "dependencies": {
+        "estraverse": "^5.1.0"
+      },
+      "engines": {
+        "node": ">=0.10"
+      }
+    },
+    "node_modules/esrecurse": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
+      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
+      "dev": true,
+      "dependencies": {
+        "estraverse": "^5.2.0"
+      },
+      "engines": {
+        "node": ">=4.0"
+      }
+    },
+    "node_modules/estraverse": {
+      "version": "5.3.0",
+      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
+      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
+      "dev": true,
+      "engines": {
+        "node": ">=4.0"
+      }
+    },
+    "node_modules/esutils": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
+      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
+      "dev": true,
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/fast-deep-equal": {
+      "version": "3.1.3",
+      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
+      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
+      "dev": true
+    },
+    "node_modules/fast-json-stable-stringify": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
+      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
+      "dev": true
+    },
+    "node_modules/fast-levenshtein": {
+      "version": "2.0.6",
+      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
+      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
+      "dev": true
+    },
+    "node_modules/fastq": {
+      "version": "1.17.1",
+      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.17.1.tgz",
+      "integrity": "sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==",
+      "dev": true,
+      "dependencies": {
+        "reusify": "^1.0.4"
+      }
+    },
+    "node_modules/file-entry-cache": {
+      "version": "6.0.1",
+      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz",
+      "integrity": "sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==",
+      "dev": true,
+      "dependencies": {
+        "flat-cache": "^3.0.4"
+      },
+      "engines": {
+        "node": "^10.12.0 || >=12.0.0"
+      }
+    },
+    "node_modules/find-up": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
+      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
+      "dev": true,
+      "dependencies": {
+        "locate-path": "^6.0.0",
+        "path-exists": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/flat-cache": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz",
+      "integrity": "sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==",
+      "dev": true,
+      "dependencies": {
+        "flatted": "^3.2.9",
+        "keyv": "^4.5.3",
+        "rimraf": "^3.0.2"
+      },
+      "engines": {
+        "node": "^10.12.0 || >=12.0.0"
+      }
+    },
+    "node_modules/flatted": {
+      "version": "3.3.1",
+      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.1.tgz",
+      "integrity": "sha512-X8cqMLLie7KsNUDSdzeN8FYK9rEt4Dt67OsG/DNGnYTSDBG4uFAJFBnUeiV+zCVAvwFy56IjM9sH51jVaEhNxw==",
+      "dev": true
+    },
+    "node_modules/for-each": {
+      "version": "0.3.3",
+      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz",
+      "integrity": "sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==",
+      "dev": true,
+      "dependencies": {
+        "is-callable": "^1.1.3"
+      }
+    },
+    "node_modules/fs.realpath": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
+      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
+      "dev": true
+    },
+    "node_modules/fsevents": {
+      "version": "2.3.3",
+      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
+      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
+      "dev": true,
+      "hasInstallScript": true,
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
+      }
+    },
+    "node_modules/function-bind": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
+      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
+      "dev": true,
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/function.prototype.name": {
+      "version": "1.1.6",
+      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.6.tgz",
+      "integrity": "sha512-Z5kx79swU5P27WEayXM1tBi5Ze/lbIyiNgU3qyXUOf9b2rgXYyF9Dy9Cx+IQv/Lc8WCG6L82zwUPpSS9hGehIg==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.2",
+        "define-properties": "^1.2.0",
+        "es-abstract": "^1.22.1",
+        "functions-have-names": "^1.2.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/functions-have-names": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
+      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==",
+      "dev": true,
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/get-intrinsic": {
+      "version": "1.2.4",
+      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz",
+      "integrity": "sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==",
+      "dev": true,
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "function-bind": "^1.1.2",
+        "has-proto": "^1.0.1",
+        "has-symbols": "^1.0.3",
+        "hasown": "^2.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/get-symbol-description": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.0.2.tgz",
+      "integrity": "sha512-g0QYk1dZBxGwk+Ngc+ltRH2IBp2f7zBkBMBJZCDerh6EhlhSR6+9irMCuT/09zD6qkarHUSn529sK/yL4S27mg==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.5",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.4"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/glob": {
+      "version": "7.2.3",
+      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
+      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
+      "deprecated": "Glob versions prior to v9 are no longer supported",
+      "dev": true,
+      "dependencies": {
+        "fs.realpath": "^1.0.0",
+        "inflight": "^1.0.4",
+        "inherits": "2",
+        "minimatch": "^3.1.1",
+        "once": "^1.3.0",
+        "path-is-absolute": "^1.0.0"
+      },
+      "engines": {
+        "node": "*"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
+    "node_modules/glob-parent": {
+      "version": "6.0.2",
+      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
+      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
+      "dev": true,
+      "dependencies": {
+        "is-glob": "^4.0.3"
+      },
+      "engines": {
+        "node": ">=10.13.0"
+      }
+    },
+    "node_modules/globals": {
+      "version": "13.24.0",
+      "resolved": "https://registry.npmjs.org/globals/-/globals-13.24.0.tgz",
+      "integrity": "sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==",
+      "dev": true,
+      "dependencies": {
+        "type-fest": "^0.20.2"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/globalthis": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz",
+      "integrity": "sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==",
+      "dev": true,
+      "dependencies": {
+        "define-properties": "^1.2.1",
+        "gopd": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/gopd": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz",
+      "integrity": "sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==",
+      "dev": true,
+      "dependencies": {
+        "get-intrinsic": "^1.1.3"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/graphemer": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
+      "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
+      "dev": true
+    },
+    "node_modules/has-bigints": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.0.2.tgz",
+      "integrity": "sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==",
+      "dev": true,
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-flag": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
+      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
+      "dev": true,
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/has-property-descriptors": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
+      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
+      "dev": true,
+      "dependencies": {
+        "es-define-property": "^1.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-proto": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz",
+      "integrity": "sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==",
+      "dev": true,
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-symbols": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz",
+      "integrity": "sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==",
+      "dev": true,
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-tostringtag": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
+      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
+      "dev": true,
+      "dependencies": {
+        "has-symbols": "^1.0.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/hasown": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
+      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
+      "dev": true,
+      "dependencies": {
+        "function-bind": "^1.1.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/ignore": {
+      "version": "5.3.1",
+      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.1.tgz",
+      "integrity": "sha512-5Fytz/IraMjqpwfd34ke28PTVMjZjJG2MPn5t7OE4eUCUNf8BAa7b5WUS9/Qvr6mwOQS7Mk6vdsMno5he+T8Xw==",
+      "dev": true,
+      "engines": {
+        "node": ">= 4"
+      }
+    },
+    "node_modules/import-fresh": {
+      "version": "3.3.0",
+      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
+      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
+      "dev": true,
+      "dependencies": {
+        "parent-module": "^1.0.0",
+        "resolve-from": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=6"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/imurmurhash": {
+      "version": "0.1.4",
+      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
+      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
+      "dev": true,
+      "engines": {
+        "node": ">=0.8.19"
+      }
+    },
+    "node_modules/inflight": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
+      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
+      "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
+      "dev": true,
+      "dependencies": {
+        "once": "^1.3.0",
+        "wrappy": "1"
+      }
+    },
+    "node_modules/inherits": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
+      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
+      "dev": true
+    },
+    "node_modules/internal-slot": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.0.7.tgz",
+      "integrity": "sha512-NGnrKwXzSms2qUUih/ILZ5JBqNTSa1+ZmP6flaIp6KmSElgE9qdndzS3cqjrDovwFdmwsGsLdeFgB6suw+1e9g==",
+      "dev": true,
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "hasown": "^2.0.0",
+        "side-channel": "^1.0.4"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/is-array-buffer": {
+      "version": "3.0.4",
+      "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.4.tgz",
+      "integrity": "sha512-wcjaerHw0ydZwfhiKbXJWLDY8A7yV7KhjQOpb83hGgGfId/aQa4TOvwyzn2PuswW2gPCYEL/nEAiSVpdOj1lXw==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.2",
+        "get-intrinsic": "^1.2.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-async-function": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/is-async-function/-/is-async-function-2.0.0.tgz",
+      "integrity": "sha512-Y1JXKrfykRJGdlDwdKlLpLyMIiWqWvuSd17TvZk68PLAOGOoF4Xyav1z0Xhoi+gCYjZVeC5SI+hYFOfvXmGRCA==",
+      "dev": true,
+      "dependencies": {
+        "has-tostringtag": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-bigint": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.0.4.tgz",
+      "integrity": "sha512-zB9CruMamjym81i2JZ3UMn54PKGsQzsJeo6xvN3HJJ4CAsQNB6iRutp2To77OfCNuoxspsIhzaPoO1zyCEhFOg==",
+      "dev": true,
+      "dependencies": {
+        "has-bigints": "^1.0.1"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-boolean-object": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.1.2.tgz",
+      "integrity": "sha512-gDYaKHJmnj4aWxyj6YHyXVpdQawtVLHU5cb+eztPGczf6cjuTdwve5ZIEfgXqH4e57An1D1AKf8CZ3kYrQRqYA==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.2",
+        "has-tostringtag": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-callable": {
+      "version": "1.2.7",
+      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
+      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
+      "dev": true,
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-core-module": {
+      "version": "2.15.0",
+      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.15.0.tgz",
+      "integrity": "sha512-Dd+Lb2/zvk9SKy1TGCt1wFJFo/MWBPMX5x7KcvLajWTGuomczdQX61PvY5yK6SVACwpoexWo81IfFyoKY2QnTA==",
+      "dev": true,
+      "dependencies": {
+        "hasown": "^2.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-data-view": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.1.tgz",
+      "integrity": "sha512-AHkaJrsUVW6wq6JS8y3JnM/GJF/9cf+k20+iDzlSaJrinEo5+7vRiteOSwBhHRiAyQATN1AmY4hwzxJKPmYf+w==",
+      "dev": true,
+      "dependencies": {
+        "is-typed-array": "^1.1.13"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-date-object": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.5.tgz",
+      "integrity": "sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==",
+      "dev": true,
+      "dependencies": {
+        "has-tostringtag": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-extglob": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
+      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
+      "dev": true,
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/is-finalizationregistry": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.0.2.tgz",
+      "integrity": "sha512-0by5vtUJs8iFQb5TYUHHPudOR+qXYIMKtiUzvLIZITZUjknFmziyBJuLhVRc+Ds0dREFlskDNJKYIdIzu/9pfw==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.2"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-generator-function": {
+      "version": "1.0.10",
+      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.0.10.tgz",
+      "integrity": "sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==",
+      "dev": true,
+      "dependencies": {
+        "has-tostringtag": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-glob": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
+      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
+      "dev": true,
+      "dependencies": {
+        "is-extglob": "^2.1.1"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/is-map": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz",
+      "integrity": "sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==",
+      "dev": true,
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-negative-zero": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.3.tgz",
+      "integrity": "sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==",
+      "dev": true,
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-number-object": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.0.7.tgz",
+      "integrity": "sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==",
+      "dev": true,
+      "dependencies": {
+        "has-tostringtag": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-path-inside": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
+      "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
+      "dev": true,
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/is-regex": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.1.4.tgz",
+      "integrity": "sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.2",
+        "has-tostringtag": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-set": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz",
+      "integrity": "sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==",
+      "dev": true,
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-shared-array-buffer": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.3.tgz",
+      "integrity": "sha512-nA2hv5XIhLR3uVzDDfCIknerhx8XUKnstuOERPNNIinXG7v9u+ohXF67vxm4TPTEPU6lm61ZkwP3c9PCB97rhg==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-string": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.0.7.tgz",
+      "integrity": "sha512-tE2UXzivje6ofPW7l23cjDOMa09gb7xlAqG6jG5ej6uPV32TlWP3NKPigtaGeHNu9fohccRYvIiZMfOOnOYUtg==",
+      "dev": true,
+      "dependencies": {
+        "has-tostringtag": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-symbol": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.4.tgz",
+      "integrity": "sha512-C/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq6isisz87tzT01tuGhg==",
+      "dev": true,
+      "dependencies": {
+        "has-symbols": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-typed-array": {
+      "version": "1.1.13",
+      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.13.tgz",
+      "integrity": "sha512-uZ25/bUAlUY5fR4OKT4rZQEBrzQWYV9ZJYGGsUmEJ6thodVJ1HX64ePQ6Z0qPWP+m+Uq6e9UugrE38jeYsDSMw==",
+      "dev": true,
+      "dependencies": {
+        "which-typed-array": "^1.1.14"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-weakmap": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz",
+      "integrity": "sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==",
+      "dev": true,
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-weakref": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/is-weakref/-/is-weakref-1.0.2.tgz",
+      "integrity": "sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.2"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-weakset": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.3.tgz",
+      "integrity": "sha512-LvIm3/KWzS9oRFHugab7d+M/GcBXuXX5xZkzPmN+NxihdQlZUQ4dWuSV1xR/sq6upL1TJEDrfBgRepHFdBtSNQ==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "get-intrinsic": "^1.2.4"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/isarray": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
+      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
+      "dev": true
+    },
+    "node_modules/isexe": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
+      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
+      "dev": true
+    },
+    "node_modules/iterator.prototype": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.2.tgz",
+      "integrity": "sha512-DR33HMMr8EzwuRL8Y9D3u2BMj8+RqSE850jfGu59kS7tbmPLzGkZmVSfyCFSDxuZiEY6Rzt3T2NA/qU+NwVj1w==",
+      "dev": true,
+      "dependencies": {
+        "define-properties": "^1.2.1",
+        "get-intrinsic": "^1.2.1",
+        "has-symbols": "^1.0.3",
+        "reflect.getprototypeof": "^1.0.4",
+        "set-function-name": "^2.0.1"
+      }
+    },
+    "node_modules/js-tokens": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
+      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
+    },
+    "node_modules/js-yaml": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
+      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
+      "dev": true,
+      "dependencies": {
+        "argparse": "^2.0.1"
+      },
+      "bin": {
+        "js-yaml": "bin/js-yaml.js"
+      }
+    },
+    "node_modules/json-buffer": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
+      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
+      "dev": true
+    },
+    "node_modules/json-schema-traverse": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
+      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
+      "dev": true
+    },
+    "node_modules/json-stable-stringify-without-jsonify": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
+      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
+      "dev": true
+    },
+    "node_modules/jsx-ast-utils": {
+      "version": "3.3.5",
+      "resolved": "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.5.tgz",
+      "integrity": "sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==",
+      "dev": true,
+      "dependencies": {
+        "array-includes": "^3.1.6",
+        "array.prototype.flat": "^1.3.1",
+        "object.assign": "^4.1.4",
+        "object.values": "^1.1.6"
+      },
+      "engines": {
+        "node": ">=4.0"
+      }
+    },
+    "node_modules/keyv": {
+      "version": "4.5.4",
+      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
+      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
+      "dev": true,
+      "dependencies": {
+        "json-buffer": "3.0.1"
+      }
+    },
+    "node_modules/levn": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
+      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
+      "dev": true,
+      "dependencies": {
+        "prelude-ls": "^1.2.1",
+        "type-check": "~0.4.0"
+      },
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/locate-path": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
+      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
+      "dev": true,
+      "dependencies": {
+        "p-locate": "^5.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/lodash.merge": {
+      "version": "4.6.2",
+      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
+      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
+      "dev": true
+    },
+    "node_modules/loose-envify": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
+      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
+      "dependencies": {
+        "js-tokens": "^3.0.0 || ^4.0.0"
+      },
+      "bin": {
+        "loose-envify": "cli.js"
+      }
+    },
+    "node_modules/minimatch": {
+      "version": "3.1.2",
+      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
+      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
+      "dev": true,
+      "dependencies": {
+        "brace-expansion": "^1.1.7"
+      },
+      "engines": {
+        "node": "*"
+      }
+    },
+    "node_modules/ms": {
+      "version": "2.1.2",
+      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
+      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
+      "dev": true
+    },
+    "node_modules/nanoid": {
+      "version": "3.3.7",
+      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.7.tgz",
+      "integrity": "sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "bin": {
+        "nanoid": "bin/nanoid.cjs"
+      },
+      "engines": {
+        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
+      }
+    },
+    "node_modules/natural-compare": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
+      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
+      "dev": true
+    },
+    "node_modules/object-assign": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
+      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
+      "dev": true,
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/object-inspect": {
+      "version": "1.13.2",
+      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.2.tgz",
+      "integrity": "sha512-IRZSRuzJiynemAXPYtPe5BoI/RESNYR7TYm50MC5Mqbd3Jmw5y790sErYw3V6SryFJD64b74qQQs9wn5Bg/k3g==",
+      "dev": true,
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/object-keys": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
+      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
+      "dev": true,
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/object.assign": {
+      "version": "4.1.5",
+      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.5.tgz",
+      "integrity": "sha512-byy+U7gp+FVwmyzKPYhW2h5l3crpmGsxl7X2s8y43IgxvG4g3QZ6CffDtsNQy1WsmZpQbO+ybo0AlW7TY6DcBQ==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.5",
+        "define-properties": "^1.2.1",
+        "has-symbols": "^1.0.3",
+        "object-keys": "^1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/object.entries": {
+      "version": "1.1.8",
+      "resolved": "https://registry.npmjs.org/object.entries/-/object.entries-1.1.8.tgz",
+      "integrity": "sha512-cmopxi8VwRIAw/fkijJohSfpef5PdN0pMQJN6VC/ZKvn0LIknWD8KtgY6KlQdEc4tIjcQ3HxSMmnvtzIscdaYQ==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/object.fromentries": {
+      "version": "2.0.8",
+      "resolved": "https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.8.tgz",
+      "integrity": "sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.2",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/object.values": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.2.0.tgz",
+      "integrity": "sha512-yBYjY9QX2hnRmZHAjG/f13MzmBzxzYgQhFrke06TTyKY5zSTEqkOeukBzIdVA3j3ulu8Qa3MbVFShV7T2RmGtQ==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/once": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
+      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
+      "dev": true,
+      "dependencies": {
+        "wrappy": "1"
+      }
+    },
+    "node_modules/optionator": {
+      "version": "0.9.4",
+      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
+      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
+      "dev": true,
+      "dependencies": {
+        "deep-is": "^0.1.3",
+        "fast-levenshtein": "^2.0.6",
+        "levn": "^0.4.1",
+        "prelude-ls": "^1.2.1",
+        "type-check": "^0.4.0",
+        "word-wrap": "^1.2.5"
+      },
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/p-limit": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
+      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
+      "dev": true,
+      "dependencies": {
+        "yocto-queue": "^0.1.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/p-locate": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
+      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
+      "dev": true,
+      "dependencies": {
+        "p-limit": "^3.0.2"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/parent-module": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
+      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
+      "dev": true,
+      "dependencies": {
+        "callsites": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/path-exists": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
+      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
+      "dev": true,
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/path-is-absolute": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
+      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
+      "dev": true,
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/path-key": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
+      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
+      "dev": true,
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/path-parse": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
+      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
+      "dev": true
+    },
+    "node_modules/picocolors": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.0.1.tgz",
+      "integrity": "sha512-anP1Z8qwhkbmu7MFP5iTt+wQKXgwzf7zTyGlcdzabySa9vd0Xt392U0rVmz9poOaBj0uHJKyyo9/upk0HrEQew==",
+      "dev": true
+    },
+    "node_modules/possible-typed-array-names": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.0.0.tgz",
+      "integrity": "sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==",
+      "dev": true,
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/postcss": {
+      "version": "8.4.39",
+      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.39.tgz",
+      "integrity": "sha512-0vzE+lAiG7hZl1/9I8yzKLx3aR9Xbof3fBHKunvMfOCYAtMhrsnccJY2iTURb9EZd5+pLuiNV9/c/GZJOHsgIw==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/postcss/"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/postcss"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "dependencies": {
+        "nanoid": "^3.3.7",
+        "picocolors": "^1.0.1",
+        "source-map-js": "^1.2.0"
+      },
+      "engines": {
+        "node": "^10 || ^12 || >=14"
+      }
+    },
+    "node_modules/prelude-ls": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
+      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
+      "dev": true,
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/prop-types": {
+      "version": "15.8.1",
+      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
+      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
+      "dev": true,
+      "dependencies": {
+        "loose-envify": "^1.4.0",
+        "object-assign": "^4.1.1",
+        "react-is": "^16.13.1"
+      }
+    },
+    "node_modules/punycode": {
+      "version": "2.3.1",
+      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
+      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
+      "dev": true,
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/queue-microtask": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
+      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ]
+    },
+    "node_modules/react": {
+      "version": "18.3.1",
+      "resolved": "https://registry.npmjs.org/react/-/react-18.3.1.tgz",
+      "integrity": "sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==",
+      "dependencies": {
+        "loose-envify": "^1.1.0"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/react-dom": {
+      "version": "18.3.1",
+      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz",
+      "integrity": "sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==",
+      "dependencies": {
+        "loose-envify": "^1.1.0",
+        "scheduler": "^0.23.2"
+      },
+      "peerDependencies": {
+        "react": "^18.3.1"
+      }
+    },
+    "node_modules/react-is": {
+      "version": "16.13.1",
+      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
+      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
+      "dev": true
+    },
+    "node_modules/reflect.getprototypeof": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.6.tgz",
+      "integrity": "sha512-fmfw4XgoDke3kdI6h4xcUz1dG8uaiv5q9gcEwLS4Pnth2kxT+GZ7YehS1JTMGBQmtV7Y4GFGbs2re2NqhdozUg==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.1",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.4",
+        "globalthis": "^1.0.3",
+        "which-builtin-type": "^1.1.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/regexp.prototype.flags": {
+      "version": "1.5.2",
+      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.2.tgz",
+      "integrity": "sha512-NcDiDkTLuPR+++OCKB0nWafEmhg/Da8aUPLPMQbK+bxKKCm1/S5he+AqYa4PlMCVBalb4/yxIRub6qkEx5yJbw==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.6",
+        "define-properties": "^1.2.1",
+        "es-errors": "^1.3.0",
+        "set-function-name": "^2.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/resolve": {
+      "version": "2.0.0-next.5",
+      "resolved": "https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.5.tgz",
+      "integrity": "sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==",
+      "dev": true,
+      "dependencies": {
+        "is-core-module": "^2.13.0",
+        "path-parse": "^1.0.7",
+        "supports-preserve-symlinks-flag": "^1.0.0"
+      },
+      "bin": {
+        "resolve": "bin/resolve"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/resolve-from": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
+      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
+      "dev": true,
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/reusify": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz",
+      "integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==",
+      "dev": true,
+      "engines": {
+        "iojs": ">=1.0.0",
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/rimraf": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
+      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
+      "deprecated": "Rimraf versions prior to v4 are no longer supported",
+      "dev": true,
+      "dependencies": {
+        "glob": "^7.1.3"
+      },
+      "bin": {
+        "rimraf": "bin.js"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
+    "node_modules/rollup": {
+      "version": "4.19.0",
+      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.19.0.tgz",
+      "integrity": "sha512-5r7EYSQIowHsK4eTZ0Y81qpZuJz+MUuYeqmmYmRMl1nwhdmbiYqt5jwzf6u7wyOzJgYqtCRMtVRKOtHANBz7rA==",
+      "dev": true,
+      "dependencies": {
+        "@types/estree": "1.0.5"
+      },
+      "bin": {
+        "rollup": "dist/bin/rollup"
+      },
+      "engines": {
+        "node": ">=18.0.0",
+        "npm": ">=8.0.0"
+      },
+      "optionalDependencies": {
+        "@rollup/rollup-android-arm-eabi": "4.19.0",
+        "@rollup/rollup-android-arm64": "4.19.0",
+        "@rollup/rollup-darwin-arm64": "4.19.0",
+        "@rollup/rollup-darwin-x64": "4.19.0",
+        "@rollup/rollup-linux-arm-gnueabihf": "4.19.0",
+        "@rollup/rollup-linux-arm-musleabihf": "4.19.0",
+        "@rollup/rollup-linux-arm64-gnu": "4.19.0",
+        "@rollup/rollup-linux-arm64-musl": "4.19.0",
+        "@rollup/rollup-linux-powerpc64le-gnu": "4.19.0",
+        "@rollup/rollup-linux-riscv64-gnu": "4.19.0",
+        "@rollup/rollup-linux-s390x-gnu": "4.19.0",
+        "@rollup/rollup-linux-x64-gnu": "4.19.0",
+        "@rollup/rollup-linux-x64-musl": "4.19.0",
+        "@rollup/rollup-win32-arm64-msvc": "4.19.0",
+        "@rollup/rollup-win32-ia32-msvc": "4.19.0",
+        "@rollup/rollup-win32-x64-msvc": "4.19.0",
+        "fsevents": "~2.3.2"
+      }
+    },
+    "node_modules/run-parallel": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
+      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "dependencies": {
+        "queue-microtask": "^1.2.2"
+      }
+    },
+    "node_modules/safe-array-concat": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.2.tgz",
+      "integrity": "sha512-vj6RsCsWBCf19jIeHEfkRMw8DPiBb+DMXklQ/1SGDHOMlHdPUkZXFQ2YdplS23zESTijAcurb1aSgJA3AgMu1Q==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "get-intrinsic": "^1.2.4",
+        "has-symbols": "^1.0.3",
+        "isarray": "^2.0.5"
+      },
+      "engines": {
+        "node": ">=0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/safe-regex-test": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.0.3.tgz",
+      "integrity": "sha512-CdASjNJPvRa7roO6Ra/gLYBTzYzzPyyBXxIMdGW3USQLyjWEls2RgW5UBTXaQVp+OrpeCK3bLem8smtmheoRuw==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.6",
+        "es-errors": "^1.3.0",
+        "is-regex": "^1.1.4"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/scheduler": {
+      "version": "0.23.2",
+      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz",
+      "integrity": "sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==",
+      "dependencies": {
+        "loose-envify": "^1.1.0"
+      }
+    },
+    "node_modules/semver": {
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
+      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
+      "dev": true,
+      "bin": {
+        "semver": "bin/semver.js"
+      }
+    },
+    "node_modules/set-function-length": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
+      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
+      "dev": true,
+      "dependencies": {
+        "define-data-property": "^1.1.4",
+        "es-errors": "^1.3.0",
+        "function-bind": "^1.1.2",
+        "get-intrinsic": "^1.2.4",
+        "gopd": "^1.0.1",
+        "has-property-descriptors": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/set-function-name": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz",
+      "integrity": "sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==",
+      "dev": true,
+      "dependencies": {
+        "define-data-property": "^1.1.4",
+        "es-errors": "^1.3.0",
+        "functions-have-names": "^1.2.3",
+        "has-property-descriptors": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/shebang-command": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
+      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
+      "dev": true,
+      "dependencies": {
+        "shebang-regex": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/shebang-regex": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
+      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
+      "dev": true,
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/side-channel": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz",
+      "integrity": "sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.4",
+        "object-inspect": "^1.13.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/source-map-js": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.0.tgz",
+      "integrity": "sha512-itJW8lvSA0TXEphiRoawsCksnlf8SyvmFzIhltqAHluXd88pkCd+cXJVHTDwdCr0IzwptSm035IHQktUu1QUMg==",
+      "dev": true,
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/string.prototype.matchall": {
+      "version": "4.0.11",
+      "resolved": "https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.11.tgz",
+      "integrity": "sha512-NUdh0aDavY2og7IbBPenWqR9exH+E26Sv8e0/eTe1tltDGZL+GtBkDAnnyBtmekfK6/Dq3MkcGtzXFEd1LQrtg==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.2",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.0.0",
+        "get-intrinsic": "^1.2.4",
+        "gopd": "^1.0.1",
+        "has-symbols": "^1.0.3",
+        "internal-slot": "^1.0.7",
+        "regexp.prototype.flags": "^1.5.2",
+        "set-function-name": "^2.0.2",
+        "side-channel": "^1.0.6"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/string.prototype.repeat": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/string.prototype.repeat/-/string.prototype.repeat-1.0.0.tgz",
+      "integrity": "sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==",
+      "dev": true,
+      "dependencies": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.5"
+      }
+    },
+    "node_modules/string.prototype.trim": {
+      "version": "1.2.9",
+      "resolved": "https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.9.tgz",
+      "integrity": "sha512-klHuCNxiMZ8MlsOihJhJEBJAiMVqU3Z2nEXWfWnIqjN0gEFS9J9+IxKozWWtQGcgoa1WUZzLjKPTr4ZHNFTFxw==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.0",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/string.prototype.trimend": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.8.tgz",
+      "integrity": "sha512-p73uL5VCHCO2BZZ6krwwQE3kCzM7NKmis8S//xEC6fQonchbum4eP6kR4DLEjQFO3Wnj3Fuo8NM0kOSjVdHjZQ==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/string.prototype.trimstart": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz",
+      "integrity": "sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/strip-ansi": {
+      "version": "6.0.1",
+      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
+      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
+      "dev": true,
+      "dependencies": {
+        "ansi-regex": "^5.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/strip-json-comments": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
+      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
+      "dev": true,
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/supports-color": {
+      "version": "7.2.0",
+      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
+      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
+      "dev": true,
+      "dependencies": {
+        "has-flag": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/supports-preserve-symlinks-flag": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
+      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
+      "dev": true,
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/text-table": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
+      "integrity": "sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==",
+      "dev": true
+    },
+    "node_modules/type-check": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
+      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
+      "dev": true,
+      "dependencies": {
+        "prelude-ls": "^1.2.1"
+      },
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/type-fest": {
+      "version": "0.20.2",
+      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
+      "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
+      "dev": true,
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/typed-array-buffer": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.2.tgz",
+      "integrity": "sha512-gEymJYKZtKXzzBzM4jqa9w6Q1Jjm7x2d+sh19AdsD4wqnMPDYyvwpsIc2Q/835kHuo3BEQ7CjelGhfTsoBb2MQ==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "es-errors": "^1.3.0",
+        "is-typed-array": "^1.1.13"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/typed-array-byte-length": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.1.tgz",
+      "integrity": "sha512-3iMJ9q0ao7WE9tWcaYKIptkNBuOIcZCCT0d4MRvuuH88fEoEH62IuQe0OtraD3ebQEoTRk8XCBoknUNc1Y67pw==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "for-each": "^0.3.3",
+        "gopd": "^1.0.1",
+        "has-proto": "^1.0.3",
+        "is-typed-array": "^1.1.13"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/typed-array-byte-offset": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.2.tgz",
+      "integrity": "sha512-Ous0vodHa56FviZucS2E63zkgtgrACj7omjwd/8lTEMEPFFyjfixMZ1ZXenpgCFBBt4EC1J2XsyVS2gkG0eTFA==",
+      "dev": true,
+      "dependencies": {
+        "available-typed-arrays": "^1.0.7",
+        "call-bind": "^1.0.7",
+        "for-each": "^0.3.3",
+        "gopd": "^1.0.1",
+        "has-proto": "^1.0.3",
+        "is-typed-array": "^1.1.13"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/typed-array-length": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.6.tgz",
+      "integrity": "sha512-/OxDN6OtAk5KBpGb28T+HZc2M+ADtvRxXrKKbUwtsLgdoxgX13hyy7ek6bFRl5+aBs2yZzB0c4CnQfAtVypW/g==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "for-each": "^0.3.3",
+        "gopd": "^1.0.1",
+        "has-proto": "^1.0.3",
+        "is-typed-array": "^1.1.13",
+        "possible-typed-array-names": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/unbox-primitive": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.0.2.tgz",
+      "integrity": "sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==",
+      "dev": true,
+      "dependencies": {
+        "call-bind": "^1.0.2",
+        "has-bigints": "^1.0.2",
+        "has-symbols": "^1.0.3",
+        "which-boxed-primitive": "^1.0.2"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/uri-js": {
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
+      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
+      "dev": true,
+      "dependencies": {
+        "punycode": "^2.1.0"
+      }
+    },
+    "node_modules/vite": {
+      "version": "5.3.4",
+      "resolved": "https://registry.npmjs.org/vite/-/vite-5.3.4.tgz",
+      "integrity": "sha512-Cw+7zL3ZG9/NZBB8C+8QbQZmR54GwqIz+WMI4b3JgdYJvX+ny9AjJXqkGQlDXSXRP9rP0B4tbciRMOVEKulVOA==",
+      "dev": true,
+      "dependencies": {
+        "esbuild": "^0.21.3",
+        "postcss": "^8.4.39",
+        "rollup": "^4.13.0"
+      },
+      "bin": {
+        "vite": "bin/vite.js"
+      },
+      "engines": {
+        "node": "^18.0.0 || >=20.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/vitejs/vite?sponsor=1"
+      },
+      "optionalDependencies": {
+        "fsevents": "~2.3.3"
+      },
+      "peerDependencies": {
+        "@types/node": "^18.0.0 || >=20.0.0",
+        "less": "*",
+        "lightningcss": "^1.21.0",
+        "sass": "*",
+        "stylus": "*",
+        "sugarss": "*",
+        "terser": "^5.4.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/node": {
+          "optional": true
+        },
+        "less": {
+          "optional": true
+        },
+        "lightningcss": {
+          "optional": true
+        },
+        "sass": {
+          "optional": true
+        },
+        "stylus": {
+          "optional": true
+        },
+        "sugarss": {
+          "optional": true
+        },
+        "terser": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/which": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
+      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
+      "dev": true,
+      "dependencies": {
+        "isexe": "^2.0.0"
+      },
+      "bin": {
+        "node-which": "bin/node-which"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/which-boxed-primitive": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.0.2.tgz",
+      "integrity": "sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==",
+      "dev": true,
+      "dependencies": {
+        "is-bigint": "^1.0.1",
+        "is-boolean-object": "^1.1.0",
+        "is-number-object": "^1.0.4",
+        "is-string": "^1.0.5",
+        "is-symbol": "^1.0.3"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/which-builtin-type": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.1.3.tgz",
+      "integrity": "sha512-YmjsSMDBYsM1CaFiayOVT06+KJeXf0o5M/CAd4o1lTadFAtacTUM49zoYxr/oroopFDfhvN6iEcBxUyc3gvKmw==",
+      "dev": true,
+      "dependencies": {
+        "function.prototype.name": "^1.1.5",
+        "has-tostringtag": "^1.0.0",
+        "is-async-function": "^2.0.0",
+        "is-date-object": "^1.0.5",
+        "is-finalizationregistry": "^1.0.2",
+        "is-generator-function": "^1.0.10",
+        "is-regex": "^1.1.4",
+        "is-weakref": "^1.0.2",
+        "isarray": "^2.0.5",
+        "which-boxed-primitive": "^1.0.2",
+        "which-collection": "^1.0.1",
+        "which-typed-array": "^1.1.9"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/which-collection": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz",
+      "integrity": "sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==",
+      "dev": true,
+      "dependencies": {
+        "is-map": "^2.0.3",
+        "is-set": "^2.0.3",
+        "is-weakmap": "^2.0.2",
+        "is-weakset": "^2.0.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/which-typed-array": {
+      "version": "1.1.15",
+      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.15.tgz",
+      "integrity": "sha512-oV0jmFtUky6CXfkqehVvBP/LSWJ2sy4vWMioiENyJLePrBO/yKyV9OyJySfAKosh+RYkIl5zJCNZ8/4JncrpdA==",
+      "dev": true,
+      "dependencies": {
+        "available-typed-arrays": "^1.0.7",
+        "call-bind": "^1.0.7",
+        "for-each": "^0.3.3",
+        "gopd": "^1.0.1",
+        "has-tostringtag": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/word-wrap": {
+      "version": "1.2.5",
+      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
+      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
+      "dev": true,
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/wrappy": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
+      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
+      "dev": true
+    },
+    "node_modules/yocto-queue": {
+      "version": "0.1.0",
+      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
+      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
+      "dev": true,
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    }
+  }
+}
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..8ca64f1
--- /dev/null
+++ b/package.json
@@ -0,0 +1,26 @@
+{
+  "name": "mwm-pms-web-react-ui-decluttered",
+  "private": true,
+  "version": "0.0.0",
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "vite build",
+    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1"
+  },
+  "devDependencies": {
+    "@types/react": "^18.3.3",
+    "@types/react-dom": "^18.3.0",
+    "@vitejs/plugin-react-swc": "^3.5.0",
+    "eslint": "^8.57.0",
+    "eslint-plugin-react": "^7.34.3",
+    "eslint-plugin-react-hooks": "^4.6.2",
+    "eslint-plugin-react-refresh": "^0.4.7",
+    "vite": "^5.3.4"
+  }
+}
diff --git a/public/vite.svg b/public/vite.svg
new file mode 100644
index 0000000..e7b8dfb
--- /dev/null
+++ b/public/vite.svg
@@ -0,0 +1 @@
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>
\ No newline at end of file
diff --git a/src/App.jsx b/src/App.jsx
new file mode 100644
index 0000000..fc17b83
--- /dev/null
+++ b/src/App.jsx
@@ -0,0 +1,27 @@
+import React from 'react';
+import { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';
+import ListSalaries from './pages/ListSalaries';
+import Listemployees from './pages/Listemployees';
+import EmployeeDetails from './pages/modals/EmployeeDetails';
+import Homepage from './pages/Homepage';
+import Loginpage from './pages/Loginpage';
+import { Dashboard } from './pages/Dashboard';
+
+const App = () => {
+  return (
+    <Router>   
+        <Routes>
+          <Route path="/" element={<Homepage />} />
+          <Route path="/home" element={<Homepage />} />
+          <Route path="/salaries" element={<ListSalaries />} /> 
+          <Route path="/employee/:id" element={<EmployeeDetails />} />
+          <Route path="/employees" element={<Listemployees/>} /> 
+          <Route path="/login" element={<Loginpage />} />
+          <Route path="/dashboard" element={<Dashboard/>} />
+          <Route path="*" element={<Navigate to="/" />} />
+        </Routes>
+    </Router>
+  );
+};
+
+export default App;
diff --git a/src/api.jsx b/src/api.jsx
new file mode 100644
index 0000000..48e32bc
--- /dev/null
+++ b/src/api.jsx
@@ -0,0 +1,58 @@
+import axios from 'axios';
+
+const api = axios.create({
+  baseURL: 'http://localhost:8080',
+  headers: {
+    "Content-Type": "application/json",
+    Accept: "application/json",
+  },
+  timeout: 600000,
+});
+
+export default api;
+
+export const validateCredentials = (username, password) => {
+  return api.post('/systemusers/auth', {
+    username: username,
+    password: password
+  });
+};
+
+export const getAllEmployees = (page = 0, size = 10) => api.get(`/employees?page=${page}&size=${size}`);
+export const getAllNewEmployees = (page = 0, size = 10, startDate, endDate) => {
+  let url = `/employees/new-by-department?page=${page}&size=${size}`;
+  if (startDate) url += `&startDate=${startDate}`;
+  if (endDate) url += `&endDate=${endDate}`;
+  return api.get(url);
+};
+export const countActiveEmployees = (departmentId = 1) => api.get(`/employees/count-active/${departmentId}`);
+export const searchEmployees = (searchTerm, page = 1, size = 10) => api.post(`/employees/search?searchTerm=${searchTerm}&page=${page}&size=${size}`);
+export const addNewEmployee = async (employee) => {
+  const response = await api.post('/employees/add-employee', employee);
+  return response;
+};
+export const getEmployeeById = (employeeId) => api.get(`/employees/${employeeId}`);
+export const updateEmployee = (employeeId, employeeDto) => api.put(`/employees/${employeeId}`, employeeDto);
+export const deleteEmployee = (employeeId) => api.delete(`/employees/${employeeId}`);
+
+export const getAllTaxes = (page = 1, size = 10) => api.get(`/taxes?page=${page}&size=${size}`)
+
+export const getAllAllowances = (page = 1, size = 10) => api.get(`/allowances?page=${page}&size=${size}`)
+
+export const getAllBankDetails = (page = 1, size = 10) => api.get(`/bankdetails?page=${page}&size=${size}`)
+
+export const getAllBranches = (page = 1, size = 10) => api.get(`/branches?page=${page}&size=${size}`)
+
+export const getAllContactInfo = (page = 1, size = 10) => api.get(`/contactinfo?page=${page}&size=${size}`)
+
+export const getAllDeductions = (page = 1, size = 10) => api.get(`/deductions?page=${page}&size=${size}`)
+
+export const getAllDepartments = (page = 1, size = 10) => api.get(`/departments?page=${page}&size=${size}`)
+
+export const getAllSalaries = (page = 1, size = 10) => api.get(`/salaries?page=${page}&size=${size}`)
+export const getEarningsAndDeductionsEmp = (employeeId = 1) => api.get(`/salaries/earnings-deductions?employeeId=${employeeId}`)
+export const getAllowancesSalariesDept = (departmentId = 1) => api.get(`/salaries/allowances-net-salaries?departmentId=${departmentId}`)
+export const getTotalSalary = api.get(`/salaries/total-net-salary`)
+export const getPaymentHistory = (employeeId) => api.get(`/salaries/payment-history/?employeeId=${employeeId}`)
+
+export const getAllUsers = (page = 1, size = 10) => api.get(`/systemusers?page=${page}&size=${size}`)
\ No newline at end of file
diff --git a/src/assets/react.svg b/src/assets/react.svg
new file mode 100644
index 0000000..6c87de9
--- /dev/null
+++ b/src/assets/react.svg
@@ -0,0 +1 @@
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>
\ No newline at end of file
diff --git a/src/components/HandleNextPage.jsx b/src/components/HandleNextPage.jsx
new file mode 100644
index 0000000..05f6f06
--- /dev/null
+++ b/src/components/HandleNextPage.jsx
@@ -0,0 +1,12 @@
+
+import React from 'react';
+
+const HandleNextPage = ({ page, setPage, setLoading }) => {
+    const nextPage = () => {
+        setLoading(true);
+        setPage((prev) => prev + 1);
+    };
+    return <button onClick={nextPage}>Next</button>;
+};
+
+export default HandleNextPage;
diff --git a/src/components/HandlePrevPage.jsx b/src/components/HandlePrevPage.jsx
new file mode 100644
index 0000000..c32199d
--- /dev/null
+++ b/src/components/HandlePrevPage.jsx
@@ -0,0 +1,12 @@
+
+import React from 'react';
+
+const HandlePrevPage = ({ page, setPage, setLoading }) => {
+    const prevPage = () => {
+      setLoading(true);
+      setPage((prev) => (prev > 0 ? prev - 1 : 0));
+    };
+    return <button onClick={prevPage} disabled={page === 1}>Previous</button>;
+  };
+
+export default HandlePrevPage;
diff --git a/src/layout/Dash.jsx b/src/layout/Dash.jsx
new file mode 100644
index 0000000..914375a
--- /dev/null
+++ b/src/layout/Dash.jsx
@@ -0,0 +1,181 @@
+import React, { useState } from 'react';
+import { Link } from 'react-router-dom';
+import { searchEmployees } from '../api';
+import EmployeeDetails from '../pages/modals/EmployeeDetails';
+import { motion, AnimatePresence } from 'framer-motion';
+import '../styles/layoutStyling.css';
+
+const Dash = ({ children }) => {
+    const [isCollapsed, setIsCollapsed] = useState(false);
+    const [searchTerm, setSearchTerm] = useState('');
+    const [searchResults, setSearchResults] = useState([]);
+    const [showPopup, setShowPopup] = useState(false);
+    const [selectedEmployee, setSelectedEmployee] = useState(null);
+
+    const toggleCollapse = () => {
+        setIsCollapsed(!isCollapsed);
+    };
+
+    const handleKeyDown = (e) => {
+        if (e.key === 'Enter') {
+            handleSearch();
+        }
+    };
+
+    const handleSearchInputChange = (e) => {
+        setSearchTerm(e.target.value);
+    };
+
+    const handleSearch = async () => {
+        if (searchTerm.trim() === '') {
+            setSearchResults([]);
+            return;
+        }
+
+        try {
+            const response = await searchEmployees(searchTerm);
+            const data = response.data;
+            setSearchResults(data);
+            setShowPopup(true); 
+        } catch (error) {
+            console.error('Error fetching search results:', error);
+            setSearchResults([]);
+        }
+    };
+
+    const closePopup = () => {
+        setShowPopup(false);
+    };
+
+    const showEmployeeDetails = (employee) => {
+        setSelectedEmployee(employee);
+    };
+
+    const closeEmployeeDetails = () => {
+        setSelectedEmployee(null);
+    };
+
+    return (
+        <div className="dashboard-layout">
+            <nav className="navbar">
+                <div>
+                    <button className="collapse-btn" onClick={toggleCollapse}>
+                        {isCollapsed ? 'Expand' : 'Collapse'}
+                    </button>
+                </div>
+                <div className="navbar-left">
+                    <img src="../assets/logo.png" alt="" className="logo" />
+                </div>
+                <div className="navbar-center">
+                    {/* <input
+                        type="text"
+                        placeholder="Search Employee"
+                        className="search-input"
+                        value={searchTerm}
+                        onChange={handleSearchInputChange}
+                        onKeyDown={handleKeyDown}
+                    /> */}
+                </div>
+                <div className="navbar-right">
+                    <button className="icon-button"><i className="bell-icon"></i></button>
+                    <button className="icon-button"><i className="gift-icon"></i></button>
+                    <button className="icon-button"><i className="help-icon"></i></button>
+                    <div className="user-profile">
+                        <img src="../assets/avatar.png" alt="" className="avatar" />
+                        <span className="user-name">Name</span>
+                        <span className="user-role">Role</span>
+                    </div>
+                </div>
+            </nav>
+
+            <div className="main-content-wrapper">
+                <nav className={`sidebar ${isCollapsed ? 'collapsed' : ''}`}>
+                    <ul>
+                        <li><Link to="/dashboard"><i className="icon-dashboard"></i><span>Dashboard</span></Link></li>
+                        <li><Link to="/employees"><i className="icon-workers"></i><span>Employees</span></Link></li>
+                        <li><Link to="/salaries"><i className="icon-payroll"></i><span>Payroll</span></Link></li>
+                        <li><Link to="/reports"><i className="icon-reports"></i><span>Reports</span></Link></li>
+                        <li><Link to="/filings"><i className="icon-filings"></i><span>Filings</span></Link></li>
+                        <li><Link to="/hr"><i className="icon-hr"></i><span>HR</span></Link></li>
+                        <li><Link to="/company"><i className="icon-company"></i><span>Company</span></Link></li>
+                    </ul>
+                </nav>
+
+                <div className="content-area">
+                    {children}
+                </div>
+
+                {/* Popup Modal for Search Results */}
+                {showPopup && (
+                    <div className="popup-overlay">
+                        <div className="popup-content">
+                            <button className="close-btn" onClick={closePopup}>Close</button>
+                            <div className="search-results">
+                                {searchResults.length > 0 ? (
+                                    <div className="table-wrapper">
+                                        <table className="fl-table">
+                                            <thead>
+                                                <tr>
+                                                    <th>ID</th>
+                                                    <th>Name</th>
+                                                    <th>DOB</th>
+                                                    <th>Gender</th>
+                                                    <th>Department ID</th>
+                                                    <th>Employment Type</th>
+                                                    <th>Employment Date</th>
+                                                    <th>Status</th>
+                                                    <th>Status Description</th>
+                                                    <th>Termination Date</th>
+                                                </tr>
+                                            </thead>
+                                            <tbody>
+                                                {searchResults.map(employee => (
+                                                    <tr key={employee.employeeId}>
+                                                        <td><button onClick={() => showEmployeeDetails(employee)}>
+                                                            {employee.employeeId}
+                                                        </button></td>
+                                                        <td>{employee.name}</td>
+                                                        <td>{employee.dob}</td>
+                                                        <td>{employee.gender}</td>
+                                                        <td>{employee.departmentId}</td>
+                                                        <td>{employee.employmentType}</td>
+                                                        <td>{employee.employmentDate}</td>
+                                                        <td>{employee.status}</td>
+                                                        <td>{employee.statusDescription}</td>
+                                                        <td>{employee.terminationDate}</td>
+                                                    </tr>
+                                                ))}
+                                            </tbody>
+                                        </table>
+                                        {selectedEmployee && (
+                                            <div className="employee-details-overlay">
+                                                <AnimatePresence>
+                                                    <motion.div
+                                                        initial={{ opacity: 0 }}
+                                                        animate={{ opacity: 1 }}
+                                                        exit={{ opacity: 0 }}
+                                                        className="employee-details-container"
+                                                    >
+                                                        <EmployeeDetails
+                                                            employee={selectedEmployee}
+                                                            onClose={closeEmployeeDetails}
+                                                        />
+                                                    </motion.div>
+                                                </AnimatePresence>
+                                            </div>
+                                        )}
+                                    </div>
+
+                                ) : (
+                                    <p>No results found.</p>
+                                )}
+                            </div>
+                        </div>
+                    </div>
+                )}
+            </div>
+        </div>
+    );
+};
+
+export default Dash;
diff --git a/src/main.jsx b/src/main.jsx
new file mode 100644
index 0000000..fce89a2
--- /dev/null
+++ b/src/main.jsx
@@ -0,0 +1,10 @@
+import React from 'react'
+import ReactDOM from 'react-dom/client'
+import App from './App.jsx'
+import './styles/index.css'
+
+ReactDOM.createRoot(document.getElementById('root')).render(
+  <React.StrictMode>
+    <App />
+  </React.StrictMode>,
+)
diff --git a/src/pages/.Listemployees.jsx b/src/pages/.Listemployees.jsx
new file mode 100644
index 0000000..3c0666e
--- /dev/null
+++ b/src/pages/.Listemployees.jsx
@@ -0,0 +1,307 @@
+import React, { useEffect, useState, useCallback } from 'react';
+import {
+    getAllEmployees,
+    searchEmployees,
+    addNewEmployee,
+    updateEmployee,
+    deleteEmployee,
+} from '../api';
+import Dash from "../layout/Dash";
+import HandleNextPage from '../components/HandleNextPage';
+import HandlePrevPage from '../components/HandlePrevPage';
+import { motion, AnimatePresence } from 'framer-motion';
+import EmployeeDetails from './EmployeeDetails';
+
+const LoadingAnimation = () => (
+    <motion.div
+        initial={{ opacity: 0 }}
+        animate={{ opacity: 1 }}
+        exit={{ opacity: 0 }}
+        className="loading-animation"
+    >
+        <div className="spinner"></div>
+    </motion.div>
+);
+
+const ListEmployees = () => {
+    const [employees, setEmployees] = useState([]);
+    const [loading, setLoading] = useState(true);
+    const [error, setError] = useState(null);
+    const [page, setPage] = useState(1);
+    const [size, setSize] = useState(10);
+    const [inputPage, setInputPage] = useState(1);
+    const [inputSize, setInputSize] = useState(10);
+    const [selectedEmployee, setSelectedEmployee] = useState(null);
+    const [searchTerm, setSearchTerm] = useState('');
+    const [newEmployee, setNewEmployee] = useState({ name: '', departmentId: '', employmentType: '' });
+    const [showAllEmployees, setShowAllEmployees] = useState(false);
+
+    const fetchEmployees = useCallback(async () => {
+        try {
+            setLoading(true);
+            const response = await getAllEmployees(page, size);
+            const data = response.data;
+            setEmployees(Array.isArray(data) ? data : []);
+        } catch (err) {
+            setError(err.message);
+        } finally {
+            setLoading(false);
+        }
+    }, [page, size]);
+
+    useEffect(() => {
+        fetchEmployees();
+    }, [fetchEmployees]);
+
+    const handlePageChange = (e) => {
+        setInputPage(Number(e.target.value));
+    };
+
+    const handleSizeChange = (e) => {
+        setInputSize(Number(e.target.value));
+    };
+
+    const handleGoToPage = () => {
+        setPage(inputPage);
+        setSize(inputSize);
+    };
+
+    const handleSearchChange = (e) => {
+        setSearchTerm(e.target.value);
+    };
+
+    const handleSearch = async () => {
+        try {
+            setLoading(true);
+            const response = await searchEmployees(searchTerm);
+            const data = response.data;
+            setEmployees(Array.isArray(data) ? data : []);
+        } catch (err) {
+            setError(err.message);
+        } finally {
+            setLoading(false);
+        }
+    };
+
+    const handleNewEmployeeChange = (e) => {
+        setNewEmployee({ ...newEmployee, [e.target.name]: e.target.value });
+    };
+
+    const handleAddEmployee = async () => {
+        try {
+            setLoading(true);
+            await addNewEmployee(newEmployee);
+            fetchEmployees();
+        } catch (err) {
+            setError(err.message);
+        } finally {
+            setLoading(false);
+        }
+    };
+
+    const handleUpdateEmployee = async (employeeId) => {
+        try {
+            setLoading(true);
+            await updateEmployee(employeeId, selectedEmployee);
+            fetchEmployees();
+        } catch (err) {
+            setError(err.message);
+        } finally {
+            setLoading(false);
+        }
+    };
+
+    const handleDeleteEmployee = async (employeeId) => {
+        try {
+            setLoading(true);
+            await deleteEmployee(employeeId);
+            fetchEmployees();
+        } catch (err) {
+            setError(err.message);
+        } finally {
+            setLoading(false);
+        }
+    };
+
+    const showEmployeeDetails = (employee) => {
+        setSelectedEmployee(employee);
+    };
+
+    const closeEmployeeDetails = () => {
+        setSelectedEmployee(null);
+    };
+
+    const renderTable = () => (
+        <div className="table-wrapper">
+            <table className="fl-table">
+                <thead>
+                    <tr>
+                        <th>ID</th>
+                        <th>Name</th>
+                        <th>Department ID</th>
+                        <th>Employment Type</th>
+                    </tr>
+                </thead>
+                <tbody>
+                    {employees.map((employee) => (
+                        <tr key={employee.employeeId}>
+                            <td>
+                                <button onClick={() => showEmployeeDetails(employee)}>
+                                    {employee.employeeId}
+                                </button>
+                            </td>
+                            <td>{employee.name}</td>
+                            <td>{employee.departmentId}</td>
+                            <td>{employee.employmentType}</td>
+                        </tr>
+                    ))}
+                </tbody>
+            </table>
+        </div>
+    );
+
+    const renderPagination = () => (
+        <div className="pagination">
+            <HandlePrevPage page={page} setPage={setPage} setLoading={setLoading} />
+            <span className="page-info">Page {page}</span>
+            <HandleNextPage page={page} setPage={setPage} setLoading={setLoading} />
+            <div className="page-controls">
+                <input
+                    type="number"
+                    value={inputPage}
+                    onChange={handlePageChange}
+                    placeholder="Page number"
+                    className="page-input"
+                />
+                <input
+                    type="number"
+                    value={inputSize}
+                    onChange={handleSizeChange}
+                    placeholder="Page size"
+                    className="size-input"
+                />
+                <button onClick={handleGoToPage} className="go-button">Go</button>
+            </div>
+        </div>
+    );
+
+    const renderContent = () => {
+        if (error) return <div>Error: {error}</div>;
+        if (loading) return <LoadingAnimation key="loading" />;
+        if (employees.length === 0 && !loading) return <p>No employees found.</p>;
+
+        return (
+            // <motion.div
+            //     key="content"
+            //     initial={{ opacity: 0 }}
+            //     animate={{ opacity: 1 }}
+            //     exit={{ opacity: 0 }}
+            // >
+            //     {renderTable()}
+            // </motion.div>
+            <div>
+            {renderTable()}
+            </div>
+        );
+    };
+
+    return (
+        <Dash>
+            <div className="employees-list">
+                <h2>Employees</h2>
+                <div className="controls">
+                    <div className="search-bar">
+                        <input
+                            type="text"
+                            value={searchTerm}
+                            onChange={handleSearchChange}
+                            placeholder="Search employees..."
+                        />
+                        <button onClick={handleSearch}>Search</button>
+                    </div>
+                    <div className="new-employee-form">
+                        <input
+                            type="text"
+                            name="name"
+                            value={newEmployee.name}
+                            onChange={handleNewEmployeeChange}
+                            placeholder="Name"
+                        />
+                        <input
+                            type="number"
+                            name="departmentId"
+                            value={newEmployee.departmentId}
+                            onChange={handleNewEmployeeChange}
+                            placeholder="Department ID"
+                        />
+                        <input
+                            type="text"
+                            name="dob"
+                            value={newEmployee.employmentType}
+                            onChange={handleNewEmployeeChange}
+                            placeholder="DOB"
+                        />
+                        <input
+                            type="text"
+                            name="employmentType"
+                            value={newEmployee.employmentType}
+                            onChange={handleNewEmployeeChange}
+                            placeholder="Employment Type"
+                        />
+                        <input
+                            type="text"
+                            name="gender"
+                            value={newEmployee.employmentType}
+                            onChange={handleNewEmployeeChange}
+                            placeholder="Gender"
+                        />
+                        <input
+                            type="text"
+                            name="status"
+                            value={newEmployee.employmentType}
+                            onChange={handleNewEmployeeChange}
+                            placeholder="Status"
+                        />
+                        <input
+                            type="text"
+                            name="statusDescription"
+                            value={newEmployee.employmentType}
+                            onChange={handleNewEmployeeChange}
+                            placeholder="Status Description"
+                        />
+                        
+                        <button onClick={handleAddEmployee}>Add Employee</button>
+                    </div>
+                    <button onClick={() => setShowAllEmployees(true)}>All Employees</button>
+                </div>
+                {showAllEmployees && (
+                    <>
+                        {renderContent()}
+                        {renderPagination()}
+                    </>
+                )}
+                {selectedEmployee && (
+                    <div className="employee-details-overlay">
+                        <AnimatePresence>
+                            <motion.div
+                                initial={{ opacity: 0 }}
+                                animate={{ opacity: 1 }}
+                                exit={{ opacity: 0 }}
+                                className="employee-details-container"
+                            >
+                                <EmployeeDetails
+                                    employee={selectedEmployee}
+                                    onClose={closeEmployeeDetails}
+                                    onSave={handleUpdateEmployee}
+                                    onDelete={handleDeleteEmployee}
+                                />
+                            </motion.div>
+                        </AnimatePresence>
+                    </div>
+                )}
+            </div>
+        </Dash>
+    );
+};
+
+export default ListEmployees;
diff --git a/src/pages/Dashboard.jsx b/src/pages/Dashboard.jsx
new file mode 100644
index 0000000..db0a18c
--- /dev/null
+++ b/src/pages/Dashboard.jsx
@@ -0,0 +1,67 @@
+import React, { useState, useEffect } from 'react';
+import Dash from "../layout/Dash";
+import { motion } from 'framer-motion';
+import { FaUsers, FaMoneyBillWave, FaBuilding, FaChartLine } from 'react-icons/fa';
+import '../styles/dashboardStyling.css';  
+
+export function Dashboard() {
+    const [isLoaded, setIsLoaded] = useState(false);
+
+    useEffect(() => {
+        setIsLoaded(true);
+    }, []);
+
+    const cardVariants = {
+        hidden: { opacity: 0, y: 50 },
+        visible: { opacity: 1, y: 0 }
+    };
+
+    const cards = [
+        { icon: <FaUsers />, title: "Employees", value: "1,234" },
+        { icon: <FaMoneyBillWave />, title: "Total Salary", value: "$5,678,900" },
+        { icon: <FaBuilding />, title: "Departments", value: "15" },
+        { icon: <FaChartLine />, title: "Growth", value: "12.5%" }
+    ];
+
+    return (
+        <Dash>
+            <div className="dashboard-container">
+                <h1 className="dashboard-title">Dashboard</h1>
+                <div className="dashboard-grid">
+                    {cards.map((card, index) => (
+                        <motion.div
+                            key={index}
+                            className="dashboard-card"
+                            variants={cardVariants}
+                            initial="hidden"
+                            animate={isLoaded ? "visible" : "hidden"}
+                            transition={{ duration: 0.5, delay: index * 0.1 }}
+                        >
+                            <div className="card-header">
+                                <div className="card-icon">
+                                    {card.icon}
+                                </div>
+                                <h2 className="card-title">{card.title}</h2>
+                            </div>
+                            <p className="card-value">{card.value}</p>
+                        </motion.div>
+                    ))}
+                </div>
+                <motion.div
+                    className="activity-section"
+                    initial={{ opacity: 0, y: 50 }}
+                    animate={isLoaded ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 }}
+                    transition={{ duration: 0.5, delay: 0.4 }}
+                >
+                    <h2 className="activity-title">Recent Activity</h2>
+                    <ul className="activity-list">
+                        <li className="activity-item">New employee John Doe added</li>
+                        <li className="activity-item">Salary adjustment for Jane Smith</li>
+                        <li className="activity-item">Department restructure: Marketing</li>
+                        <li className="activity-item">Performance review completed for Q2</li>
+                    </ul>
+                </motion.div>
+            </div>
+        </Dash>
+    );
+}
\ No newline at end of file
diff --git a/src/pages/Homepage.jsx b/src/pages/Homepage.jsx
new file mode 100644
index 0000000..31e2886
--- /dev/null
+++ b/src/pages/Homepage.jsx
@@ -0,0 +1,28 @@
+import React from 'react';
+import { Link } from 'react-router-dom';
+import '../styles/homepageStyling.css'; 
+
+export default function Homepage() {
+  return (
+    <React.Fragment>
+      <header className="header">
+        <nav className="nav">
+          <div className="logo">Mabavu Wealth Managers</div>
+          <ul className="nav-links">
+            <li>
+              <Link className="nav-link" to="/">Home</Link>
+            </li>
+            <li>
+              <Link className="nav-link" to="/login">Log In</Link>
+            </li>
+          </ul>
+        </nav>
+      </header>
+      <main className="main-content">
+        <h1 className="title">Welcome to Mabavu Wealth Managers</h1>
+        <p className="subtitle">Your trusted partner in financial growth and stability</p>
+        <Link className="cta-button" to="/">Get Started</Link>
+      </main>
+    </React.Fragment>
+  );
+}
diff --git a/src/pages/ListSalaries.jsx b/src/pages/ListSalaries.jsx
new file mode 100644
index 0000000..7b111bb
--- /dev/null
+++ b/src/pages/ListSalaries.jsx
@@ -0,0 +1,148 @@
+import React, { useState, useEffect, useCallback } from 'react';
+import { getAllSalaries } from '../api';
+import Dash from "../layout/Dash";
+import HandleNextPage from '../components/HandleNextPage';
+import HandlePrevPage from '../components/HandlePrevPage';
+import { motion } from 'framer-motion';
+
+const LoadingAnimation = () => (
+  <motion.div
+    initial={{ opacity: 0 }}
+    animate={{ opacity: 1 }}
+    exit={{ opacity: 0 }}
+    className="loading-animation"
+  >
+    <div className="spinner"></div>
+  </motion.div>
+);
+
+const ListSalaries = () => {
+  const [salaries, setSalaries] = useState([]);
+  const [loading, setLoading] = useState(true);
+  const [error, setError] = useState(null);
+  const [page, setPage] = useState(1);
+  const [size, setSize] = useState(10);
+  const [inputPage, setInputPage] = useState(1);
+  const [inputSize, setInputSize] = useState(10);
+
+  const fetchSalaries = useCallback(async () => {
+    try {
+      setLoading(true);
+      const response = await getAllSalaries(page, size);
+      const data = response.data;
+      console.log("Fetched salaries data:", data);
+      const salaryList = data;
+      if (salaryList) {
+        setSalaries(salaryList);
+        console.log("Updated salaries state:", salaryList);
+      } else {
+        setError('No salary data found');
+      }
+    } catch (error) {
+      if (error.message === "Network Error") {
+        setLoading(true);
+      } else {
+        setError(`Error fetching salaries: ${error.message}`);
+      }
+    } finally {
+      setLoading(false);
+    }
+  }, [page, size]);
+
+  useEffect(() => {
+    console.log("Fetching salaries for page:", page);
+    fetchSalaries();
+  }, [fetchSalaries]);
+
+  const handlePageChange = (e) => {
+    setInputPage(Number(e.target.value));
+  };
+
+  const handleSizeChange = (e) => {
+    setInputSize(Number(e.target.value));
+  };
+
+  const handleGoToPage = () => {
+    setPage(inputPage);
+    setSize(inputSize);
+  };
+
+  const renderTable = () => (
+    <div className="table-wrapper">
+      <table className="fl-table">
+        <thead>
+          <tr>
+            <th>#</th>
+            <th>EmployeeID</th>
+            <th>Date</th>
+            <th>NetSalary</th>
+          </tr>
+        </thead>
+        <tbody>
+          {salaries.map((salary, index) => (
+            <tr key={salary.salaryId}>
+              <td>{(page - 1) * size + index + 1}</td>
+              <td>{salary.employeeId}</td>
+              <td>{salary.month}</td>
+              <td>{salary.netSalary}</td>
+            </tr>
+          ))}
+        </tbody>
+      </table>
+    </div>
+  );
+
+  const renderPagination = () => (
+    <div className="pagination">
+      <HandlePrevPage page={page} setPage={setPage} setLoading={setLoading} />
+      <span className="page-info">Page {page}</span>
+      <HandleNextPage page={page} setPage={setPage} setLoading={setLoading} />
+      <div className="page-controls">
+        <input
+          type="number"
+          value={inputPage}
+          onChange={handlePageChange}
+          placeholder="Page number"
+          className="page-input"
+        />
+        <input
+          type="number"
+          value={inputSize}
+          onChange={handleSizeChange}
+          placeholder="Page size"
+          className="size-input"
+        />
+        <button onClick={handleGoToPage} className="go-button">Go</button>
+      </div>
+    </div>
+  );
+
+  const renderContent = () => {
+    if (error) return <div>Error: {error}</div>;
+    if (salaries.length === 0 && !loading) return <p>No salaries found.</p>;
+
+    return (
+      <motion.div
+        key="content"
+        initial={{ opacity: 0 }}
+        animate={{ opacity: 1 }}
+        exit={{ opacity: 0 }}
+      >
+        {renderTable()}
+      </motion.div>
+    );
+  };
+
+  return (
+    <Dash>
+      <div className="salaries-list">
+        <h2>Salaries</h2>
+        {console.log("Current salaries state:", salaries)}
+        {renderContent()}
+        {renderPagination()}
+      </div>
+    </Dash>
+  );
+};
+
+export default ListSalaries;
diff --git a/src/pages/Listemployees.jsx b/src/pages/Listemployees.jsx
new file mode 100644
index 0000000..e76067d
--- /dev/null
+++ b/src/pages/Listemployees.jsx
@@ -0,0 +1,279 @@
+import React, { useEffect, useState, useCallback } from 'react';
+import {
+    getAllEmployees,
+    searchEmployees,
+    addNewEmployee,
+    updateEmployee,
+    deleteEmployee,
+} from '../api';
+import Dash from "../layout/Dash";
+import HandleNextPage from '../components/HandleNextPage';
+import HandlePrevPage from '../components/HandlePrevPage';
+import { motion, AnimatePresence } from 'framer-motion';
+import EmployeeDetails from './modals/EmployeeDetails';
+import AddEmployee from './modals/AddEmployee';
+import '../styles/pageStyling.css'
+import '../styles/employeelistStyling.css'
+
+const LoadingAnimation = () => (
+    <motion.div
+        initial={{ opacity: 0 }}
+        animate={{ opacity: 1 }}
+        exit={{ opacity: 0 }}
+        className="loading-animation"
+    >
+        <div className="spinner"></div>
+    </motion.div>
+);
+
+const ListEmployees = () => {
+    const [employees, setEmployees] = useState([]);
+    const [loading, setLoading] = useState(true);
+    const [error, setError] = useState(null);
+    const [page, setPage] = useState(1);
+    const [size, setSize] = useState(10);
+    const [inputPage, setInputPage] = useState(1);
+    const [inputSize, setInputSize] = useState(10);
+    const [selectedEmployee, setSelectedEmployee] = useState(null);
+    const [searchTerm, setSearchTerm] = useState('');
+    const [isSearching, setIsSearching] = useState(false);
+    const [newEmployee, setNewEmployee] = useState({
+        name: '',
+        departmentId: '',
+        employmentType: '',
+        dob: '',
+        gender: '',
+        status: '',
+        statusDescription: '',
+        employmentDate: '',
+        terminationDate: ''
+    });
+    const [showAllEmployees, setShowAllEmployees] = useState(false);
+    const [isModalOpen, setIsModalOpen] = useState(false);
+
+    const fetchEmployees = useCallback(async () => {
+        try {
+            setLoading(true);
+            let response;
+            if (isSearching) {
+                response = await searchEmployees(searchTerm, page, size);
+            } else {
+                response = await getAllEmployees(page, size);
+            }
+            const data = response.data;
+            setEmployees(Array.isArray(data) ? data : []);
+        } catch (err) {
+            setError(err.message);
+        } finally {
+            setLoading(false);
+        }
+    }, [isSearching, searchTerm, page, size]);
+
+    useEffect(() => {
+        fetchEmployees();
+    }, [fetchEmployees]);
+
+    const handlePageChange = (e) => {
+        setInputPage(Number(e.target.value));
+    };
+
+    const handleSizeChange = (e) => {
+        setInputSize(Number(e.target.value));
+    };
+
+    const handleGoToPage = () => {
+        setPage(inputPage);
+        setSize(inputSize);
+    };
+
+    const handleSearchChange = (e) => {
+        setSearchTerm(e.target.value);
+        setPage(1);
+    };
+
+    const handleSearch = () => {
+        setIsSearching(true);
+        setPage(1);
+        setShowAllEmployees(false);
+        fetchEmployees();
+    };
+
+    const handleShowAllEmployees = () => {
+        setIsSearching(false);
+        setSearchTerm('');
+        setPage(1);
+        setShowAllEmployees(true);
+        fetchEmployees();
+    };
+
+    const handleNewEmployeeChange = (e) => {
+        setNewEmployee({ ...newEmployee, [e.target.name]: e.target.value });
+    };
+
+    const handleAddEmployee = async () => {
+        try {
+            setLoading(true);
+            await addNewEmployee(newEmployee);
+            setNewEmployee({ name: '', departmentId: '', employmentType: '', dob: '', gender: '', status: '', statusDescription: '' });
+            fetchEmployees();
+        } catch (err) {
+            setError(err.message);
+        } finally {
+            setLoading(false);
+            setIsModalOpen(false);
+        }
+    };
+
+    const handleUpdateEmployee = async (employeeId) => {
+        try {
+            setLoading(true);
+            await updateEmployee(employeeId, selectedEmployee);
+            fetchEmployees();
+        } catch (err) {
+            setError(err.message);
+        } finally {
+            setLoading(false);
+        }
+    };
+
+    const handleDeleteEmployee = async (employeeId) => {
+        try {
+            setLoading(true);
+            await deleteEmployee(employeeId);
+            fetchEmployees();
+        } catch (err) {
+            setError(err.message);
+        } finally {
+            setLoading(false);
+        }
+    };
+
+    const showEmployeeDetails = (employee) => {
+        setSelectedEmployee(employee);
+    };
+
+    const closeEmployeeDetails = () => {
+        setSelectedEmployee(null);
+
+    };
+
+    const renderTable = () => (
+        <div className="table-wrapper">
+            <table className="fl-table">
+                <thead>
+                    <tr>
+                        <th>#</th>
+                        <th>Name</th>
+                        <th>Department ID</th>
+                        <th>Employment Type</th>
+                    </tr>
+                </thead>
+                <tbody>
+                    {employees.map((employee, index) => (
+                        <tr key={employee.employeeId}>
+                            <td>
+                                <button className="cell-btn" onClick={() => showEmployeeDetails(employee)}>
+                                    {(page - 1) * size + index + 1}
+                                </button>
+                            </td>
+                            <td>{employee.name}</td>
+                            <td>{employee.departmentId}</td>
+                            <td>{employee.employmentType}</td>
+
+                        </tr>
+                    ))}
+                </tbody>
+            </table>
+        </div>
+    );
+
+    const renderPagination = () => {
+        if (isSearching || showAllEmployees) {
+            return (
+                <div className="pagination">
+                    <HandlePrevPage page={page} setPage={setPage} setLoading={setLoading} />
+                    <span className="page-info">Page {page}</span>
+                    <HandleNextPage page={page} setPage={setPage} setLoading={setLoading} />
+                    <div className="page-controls">
+                        <input
+                            type="number"
+                            value={inputPage}
+                            onChange={handlePageChange}
+                            placeholder="Page number"
+                            className="page-input"
+                        />
+                        <input
+                            type="number"
+                            value={inputSize}
+                            onChange={handleSizeChange}
+                            placeholder="Page size"
+                            className="size-input"
+                        />
+                        <button onClick={handleGoToPage} className="go-button">Go</button>
+                    </div>
+                </div>
+            );
+        }
+
+
+    };
+
+    const renderContent = () => {
+        if (error) return <div>Error: {error}</div>;
+        if (loading) return <LoadingAnimation key="loading" />;
+        if (employees.length === 0 && !loading) return <p>No employees found.</p>;
+        if (showAllEmployees || isSearching) return <div>{renderTable()}</div>;
+    };
+
+    return (
+        <Dash>
+            <div className="employees-list">
+                <h2>Employees</h2>
+                <div className="controls">
+                    <div className="search-bar">
+                        <input
+                            type="text"
+                            value={searchTerm}
+                            onChange={handleSearchChange}
+                            placeholder="Search employees..."
+                        />
+                        <button onClick={handleSearch}>Search</button>
+                    </div>
+                    <button className="add-employee-button" onClick={() => setIsModalOpen(true)}>Add Employee</button>
+                    <button className="show-all-button" onClick={handleShowAllEmployees}>All Employees</button>
+                </div>
+
+                {renderContent()}
+                {renderPagination()}
+                {selectedEmployee && (
+                    <div className="employee-details-overlay">
+                        <AnimatePresence>
+                            <motion.div
+                                initial={{ opacity: 0 }}
+                                animate={{ opacity: 1 }}
+                                exit={{ opacity: 0 }}
+                                className="employee-details-container"
+                            >
+                                <EmployeeDetails
+                                    employee={selectedEmployee}
+                                    onClose={closeEmployeeDetails}
+                                    onSave={handleUpdateEmployee}
+                                    onDelete={handleDeleteEmployee}
+                                />
+                            </motion.div>
+                        </AnimatePresence>
+                    </div>
+                )}
+                <AddEmployee
+                    isOpen={isModalOpen}
+                    onClose={() => setIsModalOpen(false)}
+                    onSubmit={handleAddEmployee}
+                    newEmployee={newEmployee}
+                    handleNewEmployeeChange={handleNewEmployeeChange}
+                />
+            </div>
+        </Dash>
+    );
+};
+
+export default ListEmployees;
diff --git a/src/pages/Loginpage.jsx b/src/pages/Loginpage.jsx
new file mode 100644
index 0000000..8f29052
--- /dev/null
+++ b/src/pages/Loginpage.jsx
@@ -0,0 +1,96 @@
+import React, { useState } from 'react';
+import { useNavigate } from 'react-router-dom';
+import "../styles/loginpageStyling.css";
+import { validateCredentials } from '../api';
+
+export default function LoginPage() {
+  const [isLoggedIn, setIsLoggedIn] = useState(false);
+  const navigate = useNavigate();
+  const [username, setUsername] = useState('');
+  const [password, setPassword] = useState('');
+  const [loginFailed, setLoginFailed] = useState(false);
+  const [captcha, setCaptcha] = useState('');
+  const [captchaInput, setCaptchaInput] = useState('');
+
+  const handleLogin = async () => {
+    if (captchaInput !== captcha) {
+      setLoginFailed(true);
+      return;
+    }
+    try {
+      const res = await validateCredentials(username, password);
+      if (res.status === 200) {
+        setIsLoggedIn(true);
+      } else {
+        setLoginFailed(true);
+      }
+    } catch (error) {
+      if (error.response && error.response.status === 401) {
+        console.log('Invalid credentials');
+        setLoginFailed(true);
+      } else {
+        console.error('Login error:', error);
+      }
+    }
+  };
+
+  const generateCaptcha = () => {
+    const newCaptcha = Math.random().toString(36).substring(2, 8).toUpperCase();
+    setCaptcha(newCaptcha);
+  };
+
+  React.useEffect(() => {
+    generateCaptcha();
+    if (isLoggedIn) {
+      navigate('/dashboard');
+    }
+  }, [isLoggedIn, navigate]);
+
+  return (
+    <div className="container">
+      <div className="left-section">
+        <h1>Welcome to Mabavu Wealth Managers Portal</h1>
+        <p>A gateway to Employee Mahangement  & Payroll Processing.</p>
+      </div>
+      <div className="right-section">
+        <div className="login-form">
+          <h2>Log In</h2>
+          {loginFailed && <p>Login Failed!</p>}
+          <div className="form-group">
+            <label htmlFor="username">Email Address</label>
+            <input
+              type="text"
+              id="username"
+              value={username}
+              onChange={(e) => setUsername(e.target.value)}
+              className="form-control"
+            />
+          </div>
+          <div className="form-group">
+            <label htmlFor="password">Password</label>
+            <input
+              type="password"
+              id="password"
+              value={password}
+              onChange={(e) => setPassword(e.target.value)}
+              className="form-control"
+            />
+          </div>
+          <div className="form-group captcha-image">
+            <label htmlFor="captcha">Captcha</label>
+            <input
+              type="text"
+              id="captcha"
+              value={captchaInput}
+              onChange={(e) => setCaptchaInput(e.target.value)}
+              className="form-control"
+            />
+            <img src={`https://dummyimage.com/100x40/000/fff&text=${captcha}`} alt="captcha" />
+            <span className="captcha-refresh" onClick={generateCaptcha}>↻</span>
+          </div>
+          <button onClick={handleLogin} className="btn btn-primary">Log In</button>
+        </div>
+      </div>
+    </div>
+  );
+}
diff --git a/src/pages/modals/AddEmployee.jsx b/src/pages/modals/AddEmployee.jsx
new file mode 100644
index 0000000..8c8b9b5
--- /dev/null
+++ b/src/pages/modals/AddEmployee.jsx
@@ -0,0 +1,104 @@
+import React from 'react';
+import Modal from 'react-modal';
+import '../../styles/AddEmployee-Styling.css';
+
+const AddEmployee = ({ isOpen, onClose, onSubmit, newEmployee, handleNewEmployeeChange }) => {
+    return (
+        <Modal
+            isOpen={isOpen}
+            onRequestClose={onClose}
+            className="modal-content"
+            overlayClassName="modal-overlay"
+            contentLabel="Add Employee"
+        >
+            <h2>Add New Employee</h2>
+            <form onSubmit={(e) => { e.preventDefault(); onSubmit(); }}>
+                <label>
+                    Name:
+                    <input
+                        type="text"
+                        name="name"
+                        value={newEmployee.name}
+                        onChange={handleNewEmployeeChange}
+                    />
+                </label>
+                <label>
+                    Date of Birth:
+                    <input
+                        type="date"
+                        name="dob"
+                        value={newEmployee.dob}
+                        onChange={handleNewEmployeeChange}
+                    />
+                </label>
+                <label>
+                    Gender:
+                    <input
+                        type="text"
+                        name="gender"
+                        value={newEmployee.gender}
+                        onChange={handleNewEmployeeChange}
+                    />
+                </label>
+                <label>
+                    Department ID:
+                    <input
+                        type="text"
+                        name="departmentId"
+                        value={newEmployee.departmentId}
+                        onChange={handleNewEmployeeChange}
+                    />
+                </label>
+                <label>
+                    Employment Type:
+                    <input
+                        type="text"
+                        name="employmentType"
+                        value={newEmployee.employmentType}
+                        onChange={handleNewEmployeeChange}
+                    />
+                </label>
+                <label>
+                    Employment Date:
+                    <input
+                        type="date"
+                        name="employmentDate"
+                        value={newEmployee.employmentDate}
+                        onChange={handleNewEmployeeChange}
+                    />
+                </label>
+                <label>
+                    Status:
+                    <input
+                        type="text"
+                        name="status"
+                        value={newEmployee.status}
+                        onChange={handleNewEmployeeChange}
+                    />
+                </label>
+                <label>
+                    Status Description:
+                    <input
+                        type="text"
+                        name="statusDescription"
+                        value={newEmployee.statusDescription}
+                        onChange={handleNewEmployeeChange}
+                    />
+                </label>
+                <label>
+                    Termination Date:
+                    <input
+                        type="date"
+                        name="terminationDate"
+                        value={newEmployee.terminationDate}
+                        onChange={handleNewEmployeeChange}
+                    />
+                </label>
+                <button type="submit">Add Employee</button>
+                <button type="button" onClick={onClose}>Cancel</button>
+            </form>
+        </Modal>
+    );
+};
+
+export default AddEmployee;
diff --git a/src/pages/modals/EmployeeDetails.jsx b/src/pages/modals/EmployeeDetails.jsx
new file mode 100644
index 0000000..b207d56
--- /dev/null
+++ b/src/pages/modals/EmployeeDetails.jsx
@@ -0,0 +1,131 @@
+import React, { useState } from 'react';
+import '../../styles/EmployeeDetails-styling.css'
+
+const EmployeeDetails = ({ employee, onClose, onSave, onDelete }) => {
+    const [editableEmployee, setEditableEmployee] = useState({ ...employee });
+
+    const handleChange = (e) => {
+        setEditableEmployee({ ...editableEmployee, [e.target.name]: e.target.value });
+    };
+
+    const handleSave = () => {
+      
+        onSave(editableEmployee.employeeId, editableEmployee);
+        console.log( editableEmployee)
+    };
+
+    const handleDelete = () => {
+        onDelete(editableEmployee.employeeId);
+    };
+
+   
+    return (
+        <div className="employee-details-overlay">
+            
+            <div className="employee-details-container">
+               
+                <h2>Employee Details</h2>
+                <div className="employee-details-content">
+                  
+                    <p><strong>ID:</strong> {employee.employeeId}</p>
+                    <p>
+                        <strong>Name:</strong>
+                        <input
+                            type="text"
+                            name="name"
+                            value={editableEmployee.name}
+                            onChange={handleChange}
+                        />
+                    </p>
+                    <p>
+                        <strong>DOB:</strong>
+                        <input
+                            type="date"
+                            name="dob"
+                            value={editableEmployee.dob}
+                            onChange={handleChange}
+                        />
+                    </p>
+                    <p>
+                        <strong>Gender:</strong>
+                        <input
+                            type="text"
+                            name="gender"
+                            value={editableEmployee.gender}
+                            onChange={handleChange}
+                        />
+                    </p>
+                    <p>
+                        <strong>Department ID:</strong>
+                        <input
+                            type="text"
+                            name="departmentId"
+                            value={editableEmployee.departmentId}
+                            onChange={handleChange}
+                        />
+                    </p>
+                    <p>
+                        <strong>Employment Type:</strong>
+                        <input
+                            type="text"
+                            name="employmentType"
+                            value={editableEmployee.employmentType}
+                            onChange={handleChange}
+                        />
+                    </p>
+                    <p>
+                        <strong>Employment Date:</strong>
+                        <input
+                            type="date"
+                            name="employmentDate"
+                            value={editableEmployee.employmentDate}
+                            onChange={handleChange}
+                        />
+                    </p>
+                    <p>
+                        <strong>Status:</strong>
+                        <input
+                            type="text"
+                            name="status"
+                            value={editableEmployee.status}
+                            onChange={handleChange}
+                        />
+                    </p>
+                    <p>
+                        <strong>Status Description:</strong>
+                        <input
+                            type="text"
+                            name="statusDescription"
+                            value={editableEmployee.statusDescription || 'N/A'}
+                            onChange={handleChange}
+                        />
+                    </p>
+                    <p>
+                        <strong>Termination Date:</strong>
+                        <input
+                            type="date"
+                            name="terminationDate"
+                            value={editableEmployee.terminationDate || ''}
+                            onChange={handleChange}
+                        />
+                    </p>
+                    <p>
+                        <strong>Date Created:</strong> {employee.dateCreated}
+                    </p>
+                    <p>
+                        <strong>Date Modified:</strong> {employee.dateModified}
+                    </p>
+                </div>
+                <div className="employee-details-buttons">
+               
+                     <button className="save-button" onClick={handleSave}>Save</button> 
+                    <button className="delete-button" onClick={handleDelete}>Delete</button>
+                    <button className="close-button" onClick={onClose}>Close</button>
+                </div>
+            </div>
+           
+        </div>
+    );
+};
+
+export default EmployeeDetails;
diff --git a/src/reportWebVitals.js b/src/reportWebVitals.js
new file mode 100644
index 0000000..ceeb9f4
--- /dev/null
+++ b/src/reportWebVitals.js
@@ -0,0 +1,14 @@
+const reportWebVitals = (onPerfEntry) => {
+    if (onPerfEntry && onPerfEntry instanceof Function) {
+      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
+        getCLS(onPerfEntry);
+        getFID(onPerfEntry);
+        getFCP(onPerfEntry);
+        getLCP(onPerfEntry);
+        getTTFB(onPerfEntry);
+      });
+    }
+  };
+  
+  export default reportWebVitals;
+  
\ No newline at end of file
diff --git a/src/styles/AddEmployee-Styling.css b/src/styles/AddEmployee-Styling.css
new file mode 100644
index 0000000..5b744ab
--- /dev/null
+++ b/src/styles/AddEmployee-Styling.css
@@ -0,0 +1,57 @@
+/* AddEmployee Modal */
+.modal-overlay {
+  position: fixed;
+  top: 0;
+  left: 0;
+  right: 0;
+  bottom: 0;
+  background-color: rgba(0, 0, 0, 0.5);
+  display: flex;
+  justify-content: center;
+  align-items: center;
+  z-index: 1000;
+}
+
+.modal-content {
+  background-color: white;
+  padding: 20px;
+  border-radius: 8px;
+  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
+  width: 400px;
+  max-width: 90%;
+  max-height: 90vh; 
+  overflow-y: scroll; 
+}
+
+.modal-content h2 {
+  margin-top: 0;
+  margin-bottom: 20px;
+}
+
+.modal-content input {
+  display: block;
+  width: 100%;
+  padding: 10px;
+  margin-bottom: 10px;
+  border: 1px solid #ccc;
+  border-radius: 4px;
+  box-sizing: border-box;
+}
+
+.modal-content button {
+  padding: 10px 20px;
+  margin-right: 10px;
+  border: none;
+  border-radius: 4px;
+  cursor: pointer;
+}
+
+.modal-content button:nth-child(2) {
+  background-color: #007bff;
+  color: white;
+}
+
+.modal-content button:nth-child(3) {
+  background-color: #6c757d;
+  color: white;
+}
diff --git a/src/styles/EmployeeDetails-styling.css b/src/styles/EmployeeDetails-styling.css
new file mode 100644
index 0000000..09973d3
--- /dev/null
+++ b/src/styles/EmployeeDetails-styling.css
@@ -0,0 +1,51 @@
+/* ...EMPLOYEE DETAILS... */
+
+.employee-details-overlay {
+    position: fixed;
+    top: 0;
+    left: 0;
+    width: 100%;
+    height: 100%;
+    background-color: rgba(0, 0, 0, 0.5);
+    display: flex;
+    justify-content: center;
+    align-items: center;
+    z-index: 1000;
+  }
+  
+  .employee-details-container {
+    background-color: white;
+    padding: 30px;
+    border-radius: 8px;
+    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.3);
+    max-width: 90%;
+    max-height: 90%;
+    overflow: auto;
+    text-align: left;
+  }
+  
+  .employee-details-content {
+    margin-bottom: 20px;
+  }
+  
+  .employee-details-content p {
+    margin: 5px 0;
+    line-height: 1.6;
+  }
+  
+  .employee-details-content strong {
+    display: inline-block;
+    width: 150px;
+  }
+  
+  .close-button {
+    border: none;
+    border-radius: 4px;
+    padding: 10px 20px;
+    cursor: pointer;
+    font-size: 16px;
+    transition: background-color 0.3s;
+  }
+  
+  
+  
\ No newline at end of file
diff --git a/src/styles/dashboardStyling.css b/src/styles/dashboardStyling.css
new file mode 100644
index 0000000..51415b0
--- /dev/null
+++ b/src/styles/dashboardStyling.css
@@ -0,0 +1,89 @@
+/* ...DASHBOARD... */
+
+.dashboard-container {
+  padding: 1.5rem;
+  position: fixed;
+  overflow-y: scroll;
+}
+
+.dashboard-title {
+  font-size: 2rem;
+  font-weight: bold;
+  margin-bottom: 2rem;
+}
+
+.dashboard-grid {
+  display: grid;
+  grid-template-columns: repeat(1, 1fr);
+  gap: 1.5rem;
+}
+
+@media (min-width: 768px) {
+  .dashboard-grid {
+    grid-template-columns: repeat(2, 1fr);
+  }
+}
+
+@media (min-width: 1024px) {
+  .dashboard-grid {
+    grid-template-columns: repeat(4, 1fr);
+  }
+}
+
+.dashboard-card {
+  background-color: white;
+  padding: 1.5rem;
+  border-radius: 0.5rem;
+  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
+}
+
+.card-header {
+  display: flex;
+  align-items: center;
+  margin-bottom: 1rem;
+}
+
+.card-icon {
+  font-size: 2rem;
+  color: #3b82f6;
+  margin-right: 1rem;
+}
+
+.card-title {
+  font-size: 1.25rem;
+  font-weight: 600;
+}
+
+.card-value {
+  font-size: 2rem;
+  font-weight: bold;
+}
+
+.activity-section {
+  margin-top: 2rem;
+  background-color: white;
+  padding: 1.5rem;
+  border-radius: 0.5rem;
+  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
+}
+
+.activity-title {
+  font-size: 1.5rem;
+  font-weight: bold;
+  margin-bottom: 1rem;
+}
+
+.activity-list {
+  list-style-type: none;
+  padding: 0;
+}
+
+.activity-item {
+  margin-bottom: 0.5rem;
+}
+
+
+.cell-btn {
+  width: 100%;
+  height: 100%;
+}
\ No newline at end of file
diff --git a/src/styles/employeelistStyling.css b/src/styles/employeelistStyling.css
new file mode 100644
index 0000000..3993b7d
--- /dev/null
+++ b/src/styles/employeelistStyling.css
@@ -0,0 +1,116 @@
+/***EmployeeList***/
+.employees-list {
+    display: flex;
+    flex-direction: column;
+    height: 100%;
+  }
+  
+  .salaries-list {
+    display: flex;
+    flex-direction: column;
+    height: 100%;
+  }
+  
+  .loading-animation {
+    display: flex;
+    justify-content: center;
+    align-items: center;
+    height: 200px;
+  }
+  
+  .spinner {
+    border: 4px solid #f3f3f3;
+    border-top: 4px solid #3498db;
+    border-radius: 50%;
+    width: 50px;
+    height: 50px;
+    animation: spin 1s linear infinite;
+  }
+  
+  @keyframes spin {
+    0% {
+      transform: rotate(0deg);
+    }
+  
+    100% {
+      transform: rotate(360deg);
+    }
+  }
+
+  /*Employee Page Controlls */
+h2 {
+    font-size: 24px;
+    margin-bottom: 20px;
+  }
+  
+  .controls {
+    display: flex;
+    flex-direction: column;
+    gap: 20px;
+  }
+  
+  .search-bar {
+    display: flex;
+    gap: 10px;
+    margin-bottom: 20px;
+  }
+  
+  .search-bar input {
+    padding: 10px;
+    font-size: 16px;
+    width: 100%;
+    box-sizing: border-box;
+    border: 1px solid #ccc;
+    border-radius: 4px;
+  }
+  
+  .search-bar button {
+    padding: 10px 20px;
+    font-size: 16px;
+    background-color: #007bff;
+    color: white;
+    border: none;
+    border-radius: 4px;
+    cursor: pointer;
+  }
+  
+  .new-employee-form {
+    display: flex;
+    flex-direction: column;
+    gap: 10px;
+    margin-bottom: 20px;
+  }
+  
+  .new-employee-form input {
+    padding: 10px;
+    font-size: 16px;
+    width: 100%;
+    box-sizing: border-box;
+    border: 1px solid #ccc;
+    border-radius: 4px;
+  }
+  
+  .new-employee-form button {
+    padding: 10px 20px;
+    font-size: 16px;
+    background-color: #28a745;
+    color: white;
+    border: none;
+    border-radius: 4px;
+    cursor: pointer;
+  }
+  
+  .show-all-button {
+    padding: 10px 20px;
+    font-size: 16px;
+    background-color: #6c757d;
+    color: white;
+    border: none;
+    border-radius: 4px;
+    cursor: pointer;
+  }
+  
+  button:hover {
+    opacity: 0.9;
+  }
+  
\ No newline at end of file
diff --git a/src/styles/homepageStyling.css b/src/styles/homepageStyling.css
new file mode 100644
index 0000000..c736025
--- /dev/null
+++ b/src/styles/homepageStyling.css
@@ -0,0 +1,71 @@
+/***HOMEPAGE***/
+
+.header {
+    background-color: #1a2a3a;
+    padding: 1rem 2rem;
+  }
+  
+  .nav {
+    display: flex;
+    justify-content: space-between;
+    align-items: center;
+  }
+  
+  .logo {
+    font-size: 1.5rem;
+    font-weight: bold;
+    color: #f0f0f0;
+  }
+  
+  .nav-links {
+    list-style: none;
+    display: flex;
+    gap: 2rem;
+  }
+  
+  .nav-link {
+    color: #f0f0f0;
+    text-decoration: none;
+    font-weight: 500;
+    transition: color 0.3s ease;
+  }
+  
+  .nav-link:hover {
+    color: #ffd700;
+  }
+  
+  .main-content {
+    padding: 2rem;
+    text-align: center;
+    display: flex;
+    flex-direction: column;
+    align-content: center;
+  }
+  
+  .title {
+    color: #1a2a3a;
+    font-size: 2.5rem;
+    margin-bottom: 1rem;
+  }
+  
+  .subtitle {
+    color: #4a5a6a;
+    font-size: 1.2rem;
+    margin-bottom: 2rem;
+  }
+  
+  .cta-button {
+    width: 15vh;
+    background-color: #ffd700;
+    color: #1a2a3a;
+    padding: 0.75rem 1.5rem;
+    border-radius: 5px;
+    text-decoration: none;
+    font-weight: bold;
+    transition: background-color 0.3s ease;
+    align-self: center;
+  }
+  
+  .cta-button:hover {
+    background-color: #e6c200;
+  }
\ No newline at end of file
diff --git a/src/styles/index.css b/src/styles/index.css
new file mode 100644
index 0000000..a50b261
--- /dev/null
+++ b/src/styles/index.css
@@ -0,0 +1,67 @@
+*{
+  box-sizing: border-box;
+  -webkit-box-sizing: border-box;
+  -moz-box-sizing: border-box;
+  line-height: 1.5;
+  font-synthesis: none;
+  text-rendering: optimizeLegibility;
+  -webkit-font-smoothing: antialiased;
+  -moz-osx-font-smoothing: grayscale;
+}
+body{
+  font-family: Helvetica;
+  -webkit-font-smoothing: antialiased;
+  background: rgba( 71, 147, 227, 1);
+  margin: 0;
+  /* display: flex; */
+  place-items: center;
+}
+
+h1{
+  text-align: center;
+  font-size: 20px;
+  text-transform: uppercase;
+  letter-spacing: 1px;
+  font-size: 3.2em;
+  line-height: 1.1;
+  padding: 20px 0;
+
+}
+
+h2{
+  text-align: center;
+  font-size: 18px;
+  text-transform: uppercase;
+  letter-spacing: 1px;
+  color: rgb(14, 13, 13);
+  padding: 30px 0;
+}
+a {
+  font-weight: 500;
+  color: #646cff;
+  text-decoration: inherit;
+}
+a:hover {
+  color: #535bf2;
+}
+
+button {
+  border-radius: 8px;
+  border: 1px solid transparent;
+  padding: 2.5px;
+  font-size: 1em;
+  font-weight: 500;
+  font-family: inherit;
+  background-color: #13ac58;
+  cursor: pointer;
+  transition: border-color 0.25s;
+}
+button:hover {
+  border-color: #3f45c5;
+}
+button:focus,
+button:focus-visible {
+  outline: 4px auto -webkit-focus-ring-color;
+}
+
+
diff --git a/src/styles/layoutStyling.css b/src/styles/layoutStyling.css
new file mode 100644
index 0000000..b57c489
--- /dev/null
+++ b/src/styles/layoutStyling.css
@@ -0,0 +1,208 @@
+/* Overall layout */
+.dashboard-layout {
+    display: flex;
+    flex-direction: column;
+    height: 100vh;
+}
+
+/* Navbar styling */
+.navbar {
+    display: flex;
+    align-items: center;
+    justify-content: space-between;
+    background-color: #0066cc; /* Blue color matching the table */
+    color: white;
+    padding: 0.5rem 1rem;
+    position: fixed;
+    top: 0;
+    width: 100%;
+    z-index: 100;
+}
+
+.collapse-btn {
+    background-color: #005bb5; /* Slightly darker blue */
+    color: white;
+    border: none;
+    padding: 0.5rem 1rem;
+    cursor: pointer;
+}
+
+.navbar-left .logo {
+    height: 2.5rem;
+}
+
+.navbar-center .search-input {
+    width: 100%;
+    max-width: 18.75rem;
+    padding: 0.5rem;
+    border: 1px solid #005bb5; /* Border color matching the table */
+}
+
+.navbar-right {
+    display: flex;
+    align-items: center;
+}
+
+.icon-button {
+    background: none;
+    border: none;
+    color: white;
+    cursor: pointer;
+    margin: 0 0.5rem;
+}
+
+.user-profile {
+    display: flex;
+    align-items: center;
+}
+
+.user-profile .avatar {
+    height: 2.5rem;
+    border-radius: 50%;
+    margin-right: 0.5rem;
+}
+
+.user-profile .user-name,
+.user-profile .user-role {
+    margin-right: 0.5rem;
+}
+
+/* Main content wrapper */
+.main-content-wrapper {
+    display: flex;
+    flex: 1;
+    padding-top: 3.75rem; /* Height of the navbar */
+}
+
+/* Sidebar styling */
+.sidebar {
+    width: 15%;
+    background-color: #0066cc; /* Blue color matching the table */
+    padding: 1rem;
+    transition: width 0.3s ease;
+    overflow-y: auto;
+    position: sticky;
+    top: 3.75rem; /* Below the navbar */
+    height: calc(100vh - 3.75rem);
+}
+
+.sidebar.collapsed {
+    display: none;
+}
+
+.sidebar ul {
+    list-style-type: none;
+    padding: 0;
+}
+
+.sidebar ul li {
+    margin-bottom: 0.625rem;
+}
+
+.sidebar ul li a {
+    text-decoration: none;
+    color: #ffffff;
+    display: flex;
+    align-items: center;
+}
+
+.sidebar ul li a .icon-dashboard,
+.sidebar ul li a .icon-workers,
+.sidebar ul li a .icon-payroll,
+.sidebar ul li a .icon-reports,
+.sidebar ul li a .icon-filings,
+.sidebar ul li a .icon-hr,
+.sidebar ul li a .icon-company {
+    margin-right: 0.625rem;
+}
+
+/* Content area */
+.content-area {
+    flex: 1;
+    padding: 1.25rem;
+    background-color: #ffffff; /* White background matching the table */
+    overflow-y: auto;
+}
+
+.sidebar.collapsed + .content-area {
+    margin-left: 0%;
+}
+
+
+/* Responsive styling */
+@media (max-width: 768px) {
+    .navbar-center .search-input {
+        max-width: 12.5rem;
+    }
+
+    .sidebar {
+        width: 20%;
+    }
+
+    .sidebar.collapsed {
+        width: 7.5%;
+    }
+
+    .sidebar ul li a span {
+        display: none;
+    }
+
+    .content-area {
+        margin-left: 7.5%;
+    }
+}
+
+
+/* POPUP */
+.popup-overlay {
+    position: fixed;
+    top: 0;
+    left: 0;
+    width: 100%;
+    height: 100%;
+    background-color: rgba(0, 0, 0, 0.5);
+    display: flex;
+    justify-content: center;
+    align-items: center;
+}
+
+.popup-content {
+    position: relative;
+    background-color: #fff;
+    padding: 20px;
+    border-radius: 5px;
+    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
+    max-width: 80%;
+    max-height: 80%;
+    overflow: auto;
+}
+
+.close-btn {
+    position: absolute;
+    top: 0px;
+    right: 10px;
+    background:  #109c56;
+    border-radius: 20%;
+    cursor: pointer;
+    font-size: 16px;
+  
+}
+
+.search-results table {
+    width: 100%;
+    border-collapse: collapse;
+}
+
+.search-results th, .search-results td {
+    top: 25px;
+    border: 1px solid #ddd;
+    padding: 8px;
+}
+
+.search-results th {
+    padding-top: 12px;
+    padding-bottom: 12px;
+    text-align: left;
+    background-color: #f2f2f2;
+    color: black;
+}
diff --git a/src/styles/loginpageStyling.css b/src/styles/loginpageStyling.css
new file mode 100644
index 0000000..fa5f167
--- /dev/null
+++ b/src/styles/loginpageStyling.css
@@ -0,0 +1,136 @@
+
+/**LOGINPAGE**/
+
+body,
+html {
+  margin: 0;
+  padding: 0;
+  font-family: Arial, sans-serif;
+}
+
+.container {
+  display: flex;
+  flex-direction: column;
+  height: 100vh;
+}
+
+.left-section {
+  flex: 1;
+  background-color: #0256c4;
+  color: white;
+  display: flex;
+  flex-direction: column;
+  justify-content: center;
+  align-items: center;
+  text-align: center;
+  padding: 2rem;
+}
+
+.left-section h1 {
+  font-size: 2.5rem;
+  margin-bottom: 1rem;
+}
+
+.left-section p {
+  font-size: 1.2rem;
+}
+
+.right-section {
+  flex: 1;
+  background-color: #f5f5f5;
+  display: flex;
+  justify-content: center;
+  align-items: center;
+}
+
+.login-form {
+  background-color: white;
+  padding: 2rem;
+  border-radius: 8px;
+  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
+  width: 100%;
+  max-width: 400px;
+}
+
+.login-form h2 {
+  margin-bottom: 1.5rem;
+  color: #333;
+}
+
+.form-group {
+  margin-bottom: 1rem;
+  text-align: left;
+}
+
+.form-group label {
+  display: block;
+  margin-bottom: 0.5rem;
+  color: #333;
+}
+
+.form-control {
+  width: 100%;
+  padding: 0.5rem;
+  border: 1px solid #ccc;
+  border-radius: 4px;
+  font-size: 1rem;
+}
+
+.forgot-password {
+  display: block;
+  margin: 1rem 0;
+  color: #007bff;
+  text-decoration: none;
+}
+
+.forgot-password:hover {
+  text-decoration: underline;
+}
+
+.btn {
+  width: 100%;
+  padding: 0.75rem;
+  border: none;
+  border-radius: 4px;
+  font-size: 1rem;
+  cursor: pointer;
+  margin-top: 1rem;
+}
+
+.btn-primary {
+  background-color: #1a73e8;
+  color: #fff;
+}
+
+.btn-primary:hover {
+  background-color: #155bb5;
+}
+
+.captcha-image {
+  margin: 1rem 0;
+  display: flex;
+  justify-content: space-between;
+  align-items: center;
+}
+
+.captcha-image img {
+  max-height: 40px;
+}
+
+.captcha-refresh {
+  cursor: pointer;
+}
+
+@media (min-width: 768px) {
+  .container {
+    flex-direction: row;
+  }
+
+  .left-section {
+    min-width: 300px;
+  }
+
+  .right-section {
+    min-width: 400px;
+  }
+}
diff --git a/src/styles/pageStyling.css b/src/styles/pageStyling.css
new file mode 100644
index 0000000..e134c79
--- /dev/null
+++ b/src/styles/pageStyling.css
@@ -0,0 +1,200 @@
+
+
+/****PAGINATION*****/
+.pagination {
+  position: fixed;
+  display: flex;
+  align-items: center;
+  align-self: center;
+  justify-content: center;
+  gap: 10px;
+  padding: 10px;
+  background-color: #f8f9fa;
+  border-radius: 8px;
+  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
+  margin-top: 20px;
+  bottom: 2.5vh;
+}
+
+.page-info {
+  font-size: 16px;
+  font-weight: bold;
+}
+
+.page-controls {
+  display: flex;
+  align-items: center;
+  gap: 5px;
+}
+
+.page-input,
+.size-input {
+  width: 80px;
+  padding: 5px;
+  border: 1px solid #ced4da;
+  border-radius: 4px;
+}
+
+.page-input:focus,
+.size-input:focus {
+  outline: none;
+  border-color: #80bdff;
+  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
+}
+
+.go-button {
+  padding: 6px 5px;
+  border: none;
+  border-radius: 4px;
+
+  color: white;
+  cursor: pointer;
+  transition: background-color 0.3s;
+}
+
+
+.go-button:focus {
+  outline: none;
+  box-shadow: 0 0 0 0.2rem rgba(0, 255, 136, 0.5);
+}
+
+
+
+/* Table Styles */
+
+.table-wrapper {
+  margin: 10px 70px 70px;
+  box-shadow: 0px 35px 50px rgba(0, 0, 0, 0.2);
+}
+
+.fl-table {
+  border-radius: 5px;
+  font-size: 12px;
+  font-weight: normal;
+  border: none;
+  border-collapse: collapse;
+  width: 100%;
+  max-width: 100%;
+  white-space: nowrap;
+  background-color: white;
+}
+
+.fl-table td,
+.fl-table th {
+  text-align: center;
+  padding: 8px;
+}
+
+.fl-table td {
+  border-right: 1px solid #f8f8f8;
+  font-size: 12px;
+}
+
+.fl-table thead th {
+  color: #ffffff;
+  background: #4FC3A1;
+}
+
+
+.fl-table thead th:nth-child(odd) {
+  color: #ffffff;
+  background: #3b5875;
+}
+
+.fl-table tr:nth-child(even) {
+  background: #c1d8eb;
+}
+
+.fl-table td:hover {
+  background: #3b6085;
+  color: white;
+}
+
+/* Responsive */
+/*
+@media (max-width: 767px) {
+  .fl-table {
+    display: block;
+    width: 100%;
+  }
+
+  .table-wrapper:before {
+    content: "Scroll horizontally >";
+    display: block;
+    text-align: right;
+    font-size: 11px;
+    color: white;
+    padding: 0 0 10px;
+  }
+
+  .fl-table thead,
+  .fl-table tbody,
+  .fl-table thead th {
+    display: block;
+  }
+
+  .fl-table thead th:last-child {
+    border-bottom: none;
+  }
+
+  .fl-table thead {
+    float: left;
+  }
+
+  .fl-table tbody {
+    width: auto;
+    position: relative;
+    overflow-x: auto;
+  }
+
+  .fl-table td,
+  .fl-table th {
+    padding: 20px .625em .625em .625em;
+    height: 60px;
+    vertical-align: middle;
+    box-sizing: border-box;
+    overflow-x: hidden;
+    overflow-y: auto;
+    width: 120px;
+    font-size: 13px;
+    text-overflow: ellipsis;
+  }
+
+  .fl-table thead th {
+    text-align: left;
+    border-bottom: 1px solid #f7f7f9;
+  }
+
+  .fl-table tbody tr {
+    display: table-cell;
+  }
+
+  .fl-table tbody tr:nth-child(odd) {
+    background: none;
+  }
+
+  .fl-table tr:nth-child(even) {
+    background: transparent;
+  }
+
+  .fl-table tr td:nth-child(odd) {
+    background: #F8F8F8;
+    border-right: 1px solid #E6E4E4;
+  }
+
+  .fl-table tr td:nth-child(even) {
+    border-right: 1px solid #E6E4E4;
+  }
+
+  .fl-table tbody td {
+    display: block;
+    text-align: center;
+  }
+}
+
+/* tr:hover {
+  background-color: rgb(22, 9, 133);
+  color: white;
+  
+} */
+
diff --git a/vite.config.js b/vite.config.js
new file mode 100644
index 0000000..861b04b
--- /dev/null
+++ b/vite.config.js
@@ -0,0 +1,7 @@
+import { defineConfig } from 'vite'
+import react from '@vitejs/plugin-react-swc'
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+})
-- 
2.45.2


From af04ef06672b78e99205d0fb5bcefb41ed6cbef1 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Mon, 22 Jul 2024 18:40:02 +0300
Subject: [PATCH 02/32] Update

---
 src/pages/EmployeeList.jsx     | 201 +++++++++++++++++++++++++++++++++
 src/pages/EmployeeTable.jsx    |  32 ++++++
 src/pages/LoadingAnimation.jsx |  16 +++
 src/pages/pagination.jsx       |  30 +++++
 src/pages/searchbar.jsx        |  16 +++
 5 files changed, 295 insertions(+)
 create mode 100644 src/pages/EmployeeList.jsx
 create mode 100644 src/pages/EmployeeTable.jsx
 create mode 100644 src/pages/LoadingAnimation.jsx
 create mode 100644 src/pages/pagination.jsx
 create mode 100644 src/pages/searchbar.jsx

diff --git a/src/pages/EmployeeList.jsx b/src/pages/EmployeeList.jsx
new file mode 100644
index 0000000..e12303f
--- /dev/null
+++ b/src/pages/EmployeeList.jsx
@@ -0,0 +1,201 @@
+import React, { useEffect, useState, useCallback } from 'react';
+import {
+    getAllEmployees,
+    searchEmployees,
+    addNewEmployee,
+    updateEmployee,
+    deleteEmployee,
+} from '../api';
+import Dash from "../layout/Dash";
+import Pagination from './Pagination';
+import SearchBar from './SearchBar';
+import EmployeeTable from './EmployeeTable';
+import LoadingAnimation from './LoadingAnimation';
+import EmployeeDetailsModal from './EmployeeDetailsModal';
+import AddEmployeeModal from './AddEmployeeModal';
+import '../styles/pageStyling.css';
+import '../styles/employeelistStyling.css';
+
+const ListEmployees = () => {
+    const [employees, setEmployees] = useState([]);
+    const [loading, setLoading] = useState(true);
+    const [error, setError] = useState(null);
+    const [page, setPage] = useState(1);
+    const [size, setSize] = useState(10);
+    const [inputPage, setInputPage] = useState(1);
+    const [inputSize, setInputSize] = useState(10);
+    const [selectedEmployee, setSelectedEmployee] = useState(null);
+    const [searchTerm, setSearchTerm] = useState('');
+    const [isSearching, setIsSearching] = useState(false);
+    const [newEmployee, setNewEmployee] = useState({
+        name: '',
+        departmentId: '',
+        employmentType: '',
+        dob: '',
+        gender: '',
+        status: '',
+        statusDescription: '',
+        employmentDate: '',
+        terminationDate: ''
+    });
+    const [showAllEmployees, setShowAllEmployees] = useState(false);
+    const [isModalOpen, setIsModalOpen] = useState(false);
+
+    const fetchEmployees = useCallback(async () => {
+        try {
+            setLoading(true);
+            let response;
+            if (isSearching) {
+                response = await searchEmployees(searchTerm, page, size);
+            } else {
+                response = await getAllEmployees(page, size);
+            }
+            const data = response.data;
+            setEmployees(Array.isArray(data) ? data : []);
+        } catch (err) {
+            setError(err.message);
+        } finally {
+            setLoading(false);
+        }
+    }, [isSearching, searchTerm, page, size]);
+
+    useEffect(() => {
+        fetchEmployees();
+    }, [fetchEmployees]);
+
+    const handleGoToPage = () => {
+        setPage(inputPage);
+        setSize(inputSize);
+    };
+
+    const handleSearch = () => {
+        setIsSearching(true);
+        setPage(1);
+        setShowAllEmployees(false);
+        fetchEmployees();
+    };
+
+    const handleShowAllEmployees = () => {
+        setIsSearching(false);
+        setSearchTerm('');
+        setPage(1);
+        setShowAllEmployees(true);
+        fetchEmployees();
+    };
+
+    const handleNewEmployeeChange = (e) => {
+        setNewEmployee({ ...newEmployee, [e.target.name]: e.target.value });
+    };
+
+    const handleAddEmployee = async () => {
+        try {
+            setLoading(true);
+            await addNewEmployee(newEmployee);
+            setNewEmployee({
+                name: '',
+                departmentId: '',
+                employmentType: '',
+                dob: '',
+                gender: '',
+                status: '',
+                statusDescription: '',
+                employmentDate: '',
+                terminationDate: ''
+            });
+            fetchEmployees();
+        } catch (err) {
+            setError(err.message);
+        } finally {
+            setLoading(false);
+            setIsModalOpen(false);
+        }
+    };
+
+    const handleUpdateEmployee = async (employeeId) => {
+        try {
+            setLoading(true);
+            await updateEmployee(employeeId, selectedEmployee);
+            fetchEmployees();
+        } catch (err) {
+            setError(err.message);
+        } finally {
+            setLoading(false);
+        }
+    };
+
+    const handleDeleteEmployee = async (employeeId) => {
+        try {
+            setLoading(true);
+            await deleteEmployee(employeeId);
+            fetchEmployees();
+        } catch (err) {
+            setError(err.message);
+        } finally {
+            setLoading(false);
+        }
+    };
+
+    const showEmployeeDetails = (employee) => {
+        setSelectedEmployee(employee);
+    };
+
+    const closeEmployeeDetails = () => {
+        setSelectedEmployee(null);
+    };
+
+    const renderContent = () => {
+        if (error) return <div>Error: {error}</div>;
+        if (loading) return <LoadingAnimation key="loading" />;
+        if (employees.length === 0 && !loading) return <p>No employees found.</p>;
+        return <EmployeeTable employees={employees} page={page} size={size} showEmployeeDetails={showEmployeeDetails} />;
+    };
+
+    return (
+        <Dash>
+            <div className="employees-list">
+                <h2>Employees</h2>
+                <div className="controls">
+                    <SearchBar
+                        searchTerm={searchTerm}
+                        setSearchTerm={setSearchTerm}
+                        handleSearch={handleSearch}
+                        handleShowAllEmployees={handleShowAllEmployees}
+                    />
+                    <button className="add-employee-button" onClick={() => setIsModalOpen(true)}>Add Employee</button>
+                </div>
+
+                {renderContent()}
+                {(isSearching || showAllEmployees) && (
+                    <Pagination
+                        page={page}
+                        setPage={setPage}
+                        inputPage={inputPage}
+                        setInputPage={setInputPage}
+                        inputSize={inputSize}
+                        setInputSize={setInputSize}
+                        handleGoToPage={handleGoToPage}
+                    />
+                )}
+
+                {selectedEmployee && (
+                    <EmployeeDetailsModal
+                        employee={selectedEmployee}
+                        onClose={closeEmployeeDetails}
+                        onSave={handleUpdateEmployee}
+                        onDelete={handleDeleteEmployee}
+                    />
+                )}
+
+                <AddEmployeeModal
+                    isOpen={isModalOpen}
+                    onClose={() => setIsModalOpen(false)}
+                    onSubmit={handleAddEmployee}
+                    newEmployee={newEmployee}
+                    handleNewEmployeeChange={handleNewEmployeeChange}
+                />
+            </div>
+        </Dash>
+    );
+};
+
+export default ListEmployees;
diff --git a/src/pages/EmployeeTable.jsx b/src/pages/EmployeeTable.jsx
new file mode 100644
index 0000000..763f3a3
--- /dev/null
+++ b/src/pages/EmployeeTable.jsx
@@ -0,0 +1,32 @@
+import React from 'react';
+
+const EmployeeTable = ({ employees, page, size, showEmployeeDetails }) => (
+    <div className="table-wrapper">
+        <table className="fl-table">
+            <thead>
+                <tr>
+                    <th>#</th>
+                    <th>Name</th>
+                    <th>Department ID</th>
+                    <th>Employment Type</th>
+                </tr>
+            </thead>
+            <tbody>
+                {employees.map((employee, index) => (
+                    <tr key={employee.employeeId}>
+                        <td>
+                            <button className="cell-btn" onClick={() => showEmployeeDetails(employee)}>
+                                {(page - 1) * size + index + 1}
+                            </button>
+                        </td>
+                        <td>{employee.name}</td>
+                        <td>{employee.departmentId}</td>
+                        <td>{employee.employmentType}</td>
+                    </tr>
+                ))}
+            </tbody>
+        </table>
+    </div>
+);
+
+export default EmployeeTable;
diff --git a/src/pages/LoadingAnimation.jsx b/src/pages/LoadingAnimation.jsx
new file mode 100644
index 0000000..87008e6
--- /dev/null
+++ b/src/pages/LoadingAnimation.jsx
@@ -0,0 +1,16 @@
+import React from 'react';
+import { motion } from 'framer-motion';
+import '../styles/LoadingAnimation.css';
+
+const LoadingAnimation = () => (
+    <motion.div
+        initial={{ opacity: 0 }}
+        animate={{ opacity: 1 }}
+        exit={{ opacity: 0 }}
+        className="loading-animation"
+    >
+        <div className="spinner"></div>
+    </motion.div>
+);
+
+export default LoadingAnimation;
diff --git a/src/pages/pagination.jsx b/src/pages/pagination.jsx
new file mode 100644
index 0000000..effa577
--- /dev/null
+++ b/src/pages/pagination.jsx
@@ -0,0 +1,30 @@
+import React from 'react';
+import HandleNextPage from '../components/HandleNextPage';
+import HandlePrevPage from '../components/HandlePrevPage';
+
+const Pagination = ({ page, setPage, inputPage, setInputPage, inputSize, setInputSize, handleGoToPage }) => (
+    <div className="pagination">
+        <HandlePrevPage page={page} setPage={setPage} />
+        <span className="page-info">Page {page}</span>
+        <HandleNextPage page={page} setPage={setPage} />
+        <div className="page-controls">
+            <input
+                type="number"
+                value={inputPage}
+                onChange={(e) => setInputPage(Number(e.target.value))}
+                placeholder="Page number"
+                className="page-input"
+            />
+            <input
+                type="number"
+                value={inputSize}
+                onChange={(e) => setInputSize(Number(e.target.value))}
+                placeholder="Page size"
+                className="size-input"
+            />
+            <button onClick={handleGoToPage} className="go-button">Go</button>
+        </div>
+    </div>
+);
+
+export default Pagination;
diff --git a/src/pages/searchbar.jsx b/src/pages/searchbar.jsx
new file mode 100644
index 0000000..b60e47c
--- /dev/null
+++ b/src/pages/searchbar.jsx
@@ -0,0 +1,16 @@
+import React from 'react';
+
+const SearchBar = ({ searchTerm, setSearchTerm, handleSearch, handleShowAllEmployees }) => (
+    <div className="search-bar">
+        <input
+            type="text"
+            value={searchTerm}
+            onChange={(e) => setSearchTerm(e.target.value)}
+            placeholder="Search employees..."
+        />
+        <button onClick={handleSearch}>Search</button>
+        <button onClick={handleShowAllEmployees}>All Employees</button>
+    </div>
+);
+
+export default SearchBar;
-- 
2.45.2


From 9d69f31e3f29841748b732025f0cc4717c979d58 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Mon, 22 Jul 2024 18:50:01 +0300
Subject: [PATCH 03/32] More updates...XD

---
 package-lock.json                             | 171 +++++++++-
 package.json                                  |   6 +-
 src/App.jsx                                   |   2 +-
 src/layout/Dash.jsx                           |   2 +-
 src/pages/.Listemployees.jsx                  | 307 ------------------
 src/pages/EmployeeList.jsx                    |   4 +-
 src/pages/Listemployees.jsx                   | 279 ----------------
 src/pages/{pagination.jsx => Pagination.jsx}  |   0
 src/pages/{searchbar.jsx => SearchBar.jsx}    |   0
 .../{AddEmployee.jsx => AddEmployeeModal.jsx} |   4 +-
 ...eeDetails.jsx => EmployeeDetailsModal.jsx} |   4 +-
 src/styles/LoadingAnimation.css               |   0
 12 files changed, 183 insertions(+), 596 deletions(-)
 delete mode 100644 src/pages/.Listemployees.jsx
 delete mode 100644 src/pages/Listemployees.jsx
 rename src/pages/{pagination.jsx => Pagination.jsx} (100%)
 rename src/pages/{searchbar.jsx => SearchBar.jsx} (100%)
 rename src/pages/modals/{AddEmployee.jsx => AddEmployeeModal.jsx} (96%)
 rename src/pages/modals/{EmployeeDetails.jsx => EmployeeDetailsModal.jsx} (97%)
 create mode 100644 src/styles/LoadingAnimation.css

diff --git a/package-lock.json b/package-lock.json
index 00286f7..3d7827d 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -8,8 +8,12 @@
       "name": "mwm-pms-web-react-ui-decluttered",
       "version": "0.0.0",
       "dependencies": {
+        "axios": "^1.7.2",
+        "framer-motion": "^11.3.8",
         "react": "^18.3.1",
-        "react-dom": "^18.3.1"
+        "react-dom": "^18.3.1",
+        "react-icons": "^5.2.1",
+        "react-router-dom": "^6.25.1"
       },
       "devDependencies": {
         "@types/react": "^18.3.3",
@@ -516,6 +520,14 @@
         "node": ">= 8"
       }
     },
+    "node_modules/@remix-run/router": {
+      "version": "1.18.0",
+      "resolved": "https://registry.npmjs.org/@remix-run/router/-/router-1.18.0.tgz",
+      "integrity": "sha512-L3jkqmqoSVBVKHfpGZmLrex0lxR5SucGA0sUfFzGctehw+S/ggL9L/0NnC5mw6P8HUWpFZ3nQw3cRApjjWx9Sw==",
+      "engines": {
+        "node": ">=14.0.0"
+      }
+    },
     "node_modules/@rollup/rollup-android-arm-eabi": {
       "version": "4.19.0",
       "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.19.0.tgz",
@@ -1183,6 +1195,11 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/asynckit": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
+      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q=="
+    },
     "node_modules/available-typed-arrays": {
       "version": "1.0.7",
       "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
@@ -1198,6 +1215,16 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/axios": {
+      "version": "1.7.2",
+      "resolved": "https://registry.npmjs.org/axios/-/axios-1.7.2.tgz",
+      "integrity": "sha512-2A8QhOMrbomlDuiLeK9XibIBzuHeRcqqNOHp0Cyp5EoJ1IFDh+XZH3A6BkXtv0K4gFGCI0Y4BM7B1wOEi0Rmgw==",
+      "dependencies": {
+        "follow-redirects": "^1.15.6",
+        "form-data": "^4.0.0",
+        "proxy-from-env": "^1.1.0"
+      }
+    },
     "node_modules/balanced-match": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
@@ -1276,6 +1303,17 @@
       "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
       "dev": true
     },
+    "node_modules/combined-stream": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
+      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
+      "dependencies": {
+        "delayed-stream": "~1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
     "node_modules/concat-map": {
       "version": "0.0.1",
       "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
@@ -1410,6 +1448,14 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/delayed-stream": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
+      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
+      "engines": {
+        "node": ">=0.4.0"
+      }
+    },
     "node_modules/doctrine": {
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
@@ -1912,6 +1958,25 @@
       "integrity": "sha512-X8cqMLLie7KsNUDSdzeN8FYK9rEt4Dt67OsG/DNGnYTSDBG4uFAJFBnUeiV+zCVAvwFy56IjM9sH51jVaEhNxw==",
       "dev": true
     },
+    "node_modules/follow-redirects": {
+      "version": "1.15.6",
+      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.6.tgz",
+      "integrity": "sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==",
+      "funding": [
+        {
+          "type": "individual",
+          "url": "https://github.com/sponsors/RubenVerborgh"
+        }
+      ],
+      "engines": {
+        "node": ">=4.0"
+      },
+      "peerDependenciesMeta": {
+        "debug": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/for-each": {
       "version": "0.3.3",
       "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz",
@@ -1921,6 +1986,43 @@
         "is-callable": "^1.1.3"
       }
     },
+    "node_modules/form-data": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.0.tgz",
+      "integrity": "sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==",
+      "dependencies": {
+        "asynckit": "^0.4.0",
+        "combined-stream": "^1.0.8",
+        "mime-types": "^2.1.12"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
+    "node_modules/framer-motion": {
+      "version": "11.3.8",
+      "resolved": "https://registry.npmjs.org/framer-motion/-/framer-motion-11.3.8.tgz",
+      "integrity": "sha512-1D+RDTsIp4Rz2dq/oToqSEc9idEQwgBRQyBq4rGpFba+0Z+GCbj9z1s0+ikFbanWe3YJ0SqkNlDe08GcpFGj5A==",
+      "dependencies": {
+        "tslib": "^2.4.0"
+      },
+      "peerDependencies": {
+        "@emotion/is-prop-valid": "*",
+        "react": "^18.0.0",
+        "react-dom": "^18.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@emotion/is-prop-valid": {
+          "optional": true
+        },
+        "react": {
+          "optional": true
+        },
+        "react-dom": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/fs.realpath": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
@@ -2710,6 +2812,25 @@
         "loose-envify": "cli.js"
       }
     },
+    "node_modules/mime-db": {
+      "version": "1.52.0",
+      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
+      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/mime-types": {
+      "version": "2.1.35",
+      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
+      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
+      "dependencies": {
+        "mime-db": "1.52.0"
+      },
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
     "node_modules/minimatch": {
       "version": "3.1.2",
       "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
@@ -3013,6 +3134,11 @@
         "react-is": "^16.13.1"
       }
     },
+    "node_modules/proxy-from-env": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
+      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg=="
+    },
     "node_modules/punycode": {
       "version": "2.3.1",
       "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
@@ -3065,12 +3191,50 @@
         "react": "^18.3.1"
       }
     },
+    "node_modules/react-icons": {
+      "version": "5.2.1",
+      "resolved": "https://registry.npmjs.org/react-icons/-/react-icons-5.2.1.tgz",
+      "integrity": "sha512-zdbW5GstTzXaVKvGSyTaBalt7HSfuK5ovrzlpyiWHAFXndXTdd/1hdDHI4xBM1Mn7YriT6aqESucFl9kEXzrdw==",
+      "peerDependencies": {
+        "react": "*"
+      }
+    },
     "node_modules/react-is": {
       "version": "16.13.1",
       "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
       "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
       "dev": true
     },
+    "node_modules/react-router": {
+      "version": "6.25.1",
+      "resolved": "https://registry.npmjs.org/react-router/-/react-router-6.25.1.tgz",
+      "integrity": "sha512-u8ELFr5Z6g02nUtpPAggP73Jigj1mRePSwhS/2nkTrlPU5yEkH1vYzWNyvSnSzeeE2DNqWdH+P8OhIh9wuXhTw==",
+      "dependencies": {
+        "@remix-run/router": "1.18.0"
+      },
+      "engines": {
+        "node": ">=14.0.0"
+      },
+      "peerDependencies": {
+        "react": ">=16.8"
+      }
+    },
+    "node_modules/react-router-dom": {
+      "version": "6.25.1",
+      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-6.25.1.tgz",
+      "integrity": "sha512-0tUDpbFvk35iv+N89dWNrJp+afLgd+y4VtorJZuOCXK0kkCWjEvb3vTJM++SYvMEpbVwXKf3FjeVveVEb6JpDQ==",
+      "dependencies": {
+        "@remix-run/router": "1.18.0",
+        "react-router": "6.25.1"
+      },
+      "engines": {
+        "node": ">=14.0.0"
+      },
+      "peerDependencies": {
+        "react": ">=16.8",
+        "react-dom": ">=16.8"
+      }
+    },
     "node_modules/reflect.getprototypeof": {
       "version": "1.0.6",
       "resolved": "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.6.tgz",
@@ -3491,6 +3655,11 @@
       "integrity": "sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==",
       "dev": true
     },
+    "node_modules/tslib": {
+      "version": "2.6.3",
+      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.6.3.tgz",
+      "integrity": "sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ=="
+    },
     "node_modules/type-check": {
       "version": "0.4.0",
       "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
diff --git a/package.json b/package.json
index 8ca64f1..56e8723 100644
--- a/package.json
+++ b/package.json
@@ -10,8 +10,12 @@
     "preview": "vite preview"
   },
   "dependencies": {
+    "axios": "^1.7.2",
+    "framer-motion": "^11.3.8",
     "react": "^18.3.1",
-    "react-dom": "^18.3.1"
+    "react-dom": "^18.3.1",
+    "react-icons": "^5.2.1",
+    "react-router-dom": "^6.25.1"
   },
   "devDependencies": {
     "@types/react": "^18.3.3",
diff --git a/src/App.jsx b/src/App.jsx
index fc17b83..4a87d01 100644
--- a/src/App.jsx
+++ b/src/App.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';
 import ListSalaries from './pages/ListSalaries';
-import Listemployees from './pages/Listemployees';
+import Listemployees from './pages/EmployeeList';
 import EmployeeDetails from './pages/modals/EmployeeDetails';
 import Homepage from './pages/Homepage';
 import Loginpage from './pages/Loginpage';
diff --git a/src/layout/Dash.jsx b/src/layout/Dash.jsx
index 914375a..67cb1f1 100644
--- a/src/layout/Dash.jsx
+++ b/src/layout/Dash.jsx
@@ -1,7 +1,7 @@
 import React, { useState } from 'react';
 import { Link } from 'react-router-dom';
 import { searchEmployees } from '../api';
-import EmployeeDetails from '../pages/modals/EmployeeDetails';
+import EmployeeDetails from '../pages/modals/EmployeeDetailsModal';
 import { motion, AnimatePresence } from 'framer-motion';
 import '../styles/layoutStyling.css';
 
diff --git a/src/pages/.Listemployees.jsx b/src/pages/.Listemployees.jsx
deleted file mode 100644
index 3c0666e..0000000
--- a/src/pages/.Listemployees.jsx
+++ /dev/null
@@ -1,307 +0,0 @@
-import React, { useEffect, useState, useCallback } from 'react';
-import {
-    getAllEmployees,
-    searchEmployees,
-    addNewEmployee,
-    updateEmployee,
-    deleteEmployee,
-} from '../api';
-import Dash from "../layout/Dash";
-import HandleNextPage from '../components/HandleNextPage';
-import HandlePrevPage from '../components/HandlePrevPage';
-import { motion, AnimatePresence } from 'framer-motion';
-import EmployeeDetails from './EmployeeDetails';
-
-const LoadingAnimation = () => (
-    <motion.div
-        initial={{ opacity: 0 }}
-        animate={{ opacity: 1 }}
-        exit={{ opacity: 0 }}
-        className="loading-animation"
-    >
-        <div className="spinner"></div>
-    </motion.div>
-);
-
-const ListEmployees = () => {
-    const [employees, setEmployees] = useState([]);
-    const [loading, setLoading] = useState(true);
-    const [error, setError] = useState(null);
-    const [page, setPage] = useState(1);
-    const [size, setSize] = useState(10);
-    const [inputPage, setInputPage] = useState(1);
-    const [inputSize, setInputSize] = useState(10);
-    const [selectedEmployee, setSelectedEmployee] = useState(null);
-    const [searchTerm, setSearchTerm] = useState('');
-    const [newEmployee, setNewEmployee] = useState({ name: '', departmentId: '', employmentType: '' });
-    const [showAllEmployees, setShowAllEmployees] = useState(false);
-
-    const fetchEmployees = useCallback(async () => {
-        try {
-            setLoading(true);
-            const response = await getAllEmployees(page, size);
-            const data = response.data;
-            setEmployees(Array.isArray(data) ? data : []);
-        } catch (err) {
-            setError(err.message);
-        } finally {
-            setLoading(false);
-        }
-    }, [page, size]);
-
-    useEffect(() => {
-        fetchEmployees();
-    }, [fetchEmployees]);
-
-    const handlePageChange = (e) => {
-        setInputPage(Number(e.target.value));
-    };
-
-    const handleSizeChange = (e) => {
-        setInputSize(Number(e.target.value));
-    };
-
-    const handleGoToPage = () => {
-        setPage(inputPage);
-        setSize(inputSize);
-    };
-
-    const handleSearchChange = (e) => {
-        setSearchTerm(e.target.value);
-    };
-
-    const handleSearch = async () => {
-        try {
-            setLoading(true);
-            const response = await searchEmployees(searchTerm);
-            const data = response.data;
-            setEmployees(Array.isArray(data) ? data : []);
-        } catch (err) {
-            setError(err.message);
-        } finally {
-            setLoading(false);
-        }
-    };
-
-    const handleNewEmployeeChange = (e) => {
-        setNewEmployee({ ...newEmployee, [e.target.name]: e.target.value });
-    };
-
-    const handleAddEmployee = async () => {
-        try {
-            setLoading(true);
-            await addNewEmployee(newEmployee);
-            fetchEmployees();
-        } catch (err) {
-            setError(err.message);
-        } finally {
-            setLoading(false);
-        }
-    };
-
-    const handleUpdateEmployee = async (employeeId) => {
-        try {
-            setLoading(true);
-            await updateEmployee(employeeId, selectedEmployee);
-            fetchEmployees();
-        } catch (err) {
-            setError(err.message);
-        } finally {
-            setLoading(false);
-        }
-    };
-
-    const handleDeleteEmployee = async (employeeId) => {
-        try {
-            setLoading(true);
-            await deleteEmployee(employeeId);
-            fetchEmployees();
-        } catch (err) {
-            setError(err.message);
-        } finally {
-            setLoading(false);
-        }
-    };
-
-    const showEmployeeDetails = (employee) => {
-        setSelectedEmployee(employee);
-    };
-
-    const closeEmployeeDetails = () => {
-        setSelectedEmployee(null);
-    };
-
-    const renderTable = () => (
-        <div className="table-wrapper">
-            <table className="fl-table">
-                <thead>
-                    <tr>
-                        <th>ID</th>
-                        <th>Name</th>
-                        <th>Department ID</th>
-                        <th>Employment Type</th>
-                    </tr>
-                </thead>
-                <tbody>
-                    {employees.map((employee) => (
-                        <tr key={employee.employeeId}>
-                            <td>
-                                <button onClick={() => showEmployeeDetails(employee)}>
-                                    {employee.employeeId}
-                                </button>
-                            </td>
-                            <td>{employee.name}</td>
-                            <td>{employee.departmentId}</td>
-                            <td>{employee.employmentType}</td>
-                        </tr>
-                    ))}
-                </tbody>
-            </table>
-        </div>
-    );
-
-    const renderPagination = () => (
-        <div className="pagination">
-            <HandlePrevPage page={page} setPage={setPage} setLoading={setLoading} />
-            <span className="page-info">Page {page}</span>
-            <HandleNextPage page={page} setPage={setPage} setLoading={setLoading} />
-            <div className="page-controls">
-                <input
-                    type="number"
-                    value={inputPage}
-                    onChange={handlePageChange}
-                    placeholder="Page number"
-                    className="page-input"
-                />
-                <input
-                    type="number"
-                    value={inputSize}
-                    onChange={handleSizeChange}
-                    placeholder="Page size"
-                    className="size-input"
-                />
-                <button onClick={handleGoToPage} className="go-button">Go</button>
-            </div>
-        </div>
-    );
-
-    const renderContent = () => {
-        if (error) return <div>Error: {error}</div>;
-        if (loading) return <LoadingAnimation key="loading" />;
-        if (employees.length === 0 && !loading) return <p>No employees found.</p>;
-
-        return (
-            // <motion.div
-            //     key="content"
-            //     initial={{ opacity: 0 }}
-            //     animate={{ opacity: 1 }}
-            //     exit={{ opacity: 0 }}
-            // >
-            //     {renderTable()}
-            // </motion.div>
-            <div>
-            {renderTable()}
-            </div>
-        );
-    };
-
-    return (
-        <Dash>
-            <div className="employees-list">
-                <h2>Employees</h2>
-                <div className="controls">
-                    <div className="search-bar">
-                        <input
-                            type="text"
-                            value={searchTerm}
-                            onChange={handleSearchChange}
-                            placeholder="Search employees..."
-                        />
-                        <button onClick={handleSearch}>Search</button>
-                    </div>
-                    <div className="new-employee-form">
-                        <input
-                            type="text"
-                            name="name"
-                            value={newEmployee.name}
-                            onChange={handleNewEmployeeChange}
-                            placeholder="Name"
-                        />
-                        <input
-                            type="number"
-                            name="departmentId"
-                            value={newEmployee.departmentId}
-                            onChange={handleNewEmployeeChange}
-                            placeholder="Department ID"
-                        />
-                        <input
-                            type="text"
-                            name="dob"
-                            value={newEmployee.employmentType}
-                            onChange={handleNewEmployeeChange}
-                            placeholder="DOB"
-                        />
-                        <input
-                            type="text"
-                            name="employmentType"
-                            value={newEmployee.employmentType}
-                            onChange={handleNewEmployeeChange}
-                            placeholder="Employment Type"
-                        />
-                        <input
-                            type="text"
-                            name="gender"
-                            value={newEmployee.employmentType}
-                            onChange={handleNewEmployeeChange}
-                            placeholder="Gender"
-                        />
-                        <input
-                            type="text"
-                            name="status"
-                            value={newEmployee.employmentType}
-                            onChange={handleNewEmployeeChange}
-                            placeholder="Status"
-                        />
-                        <input
-                            type="text"
-                            name="statusDescription"
-                            value={newEmployee.employmentType}
-                            onChange={handleNewEmployeeChange}
-                            placeholder="Status Description"
-                        />
-                        
-                        <button onClick={handleAddEmployee}>Add Employee</button>
-                    </div>
-                    <button onClick={() => setShowAllEmployees(true)}>All Employees</button>
-                </div>
-                {showAllEmployees && (
-                    <>
-                        {renderContent()}
-                        {renderPagination()}
-                    </>
-                )}
-                {selectedEmployee && (
-                    <div className="employee-details-overlay">
-                        <AnimatePresence>
-                            <motion.div
-                                initial={{ opacity: 0 }}
-                                animate={{ opacity: 1 }}
-                                exit={{ opacity: 0 }}
-                                className="employee-details-container"
-                            >
-                                <EmployeeDetails
-                                    employee={selectedEmployee}
-                                    onClose={closeEmployeeDetails}
-                                    onSave={handleUpdateEmployee}
-                                    onDelete={handleDeleteEmployee}
-                                />
-                            </motion.div>
-                        </AnimatePresence>
-                    </div>
-                )}
-            </div>
-        </Dash>
-    );
-};
-
-export default ListEmployees;
diff --git a/src/pages/EmployeeList.jsx b/src/pages/EmployeeList.jsx
index e12303f..e791691 100644
--- a/src/pages/EmployeeList.jsx
+++ b/src/pages/EmployeeList.jsx
@@ -11,8 +11,8 @@ import Pagination from './Pagination';
 import SearchBar from './SearchBar';
 import EmployeeTable from './EmployeeTable';
 import LoadingAnimation from './LoadingAnimation';
-import EmployeeDetailsModal from './EmployeeDetailsModal';
-import AddEmployeeModal from './AddEmployeeModal';
+import EmployeeDetailsModal from './modals/EmployeeDetailsModal';
+import AddEmployeeModal from './modals/AddEmployeeModal';
 import '../styles/pageStyling.css';
 import '../styles/employeelistStyling.css';
 
diff --git a/src/pages/Listemployees.jsx b/src/pages/Listemployees.jsx
deleted file mode 100644
index e76067d..0000000
--- a/src/pages/Listemployees.jsx
+++ /dev/null
@@ -1,279 +0,0 @@
-import React, { useEffect, useState, useCallback } from 'react';
-import {
-    getAllEmployees,
-    searchEmployees,
-    addNewEmployee,
-    updateEmployee,
-    deleteEmployee,
-} from '../api';
-import Dash from "../layout/Dash";
-import HandleNextPage from '../components/HandleNextPage';
-import HandlePrevPage from '../components/HandlePrevPage';
-import { motion, AnimatePresence } from 'framer-motion';
-import EmployeeDetails from './modals/EmployeeDetails';
-import AddEmployee from './modals/AddEmployee';
-import '../styles/pageStyling.css'
-import '../styles/employeelistStyling.css'
-
-const LoadingAnimation = () => (
-    <motion.div
-        initial={{ opacity: 0 }}
-        animate={{ opacity: 1 }}
-        exit={{ opacity: 0 }}
-        className="loading-animation"
-    >
-        <div className="spinner"></div>
-    </motion.div>
-);
-
-const ListEmployees = () => {
-    const [employees, setEmployees] = useState([]);
-    const [loading, setLoading] = useState(true);
-    const [error, setError] = useState(null);
-    const [page, setPage] = useState(1);
-    const [size, setSize] = useState(10);
-    const [inputPage, setInputPage] = useState(1);
-    const [inputSize, setInputSize] = useState(10);
-    const [selectedEmployee, setSelectedEmployee] = useState(null);
-    const [searchTerm, setSearchTerm] = useState('');
-    const [isSearching, setIsSearching] = useState(false);
-    const [newEmployee, setNewEmployee] = useState({
-        name: '',
-        departmentId: '',
-        employmentType: '',
-        dob: '',
-        gender: '',
-        status: '',
-        statusDescription: '',
-        employmentDate: '',
-        terminationDate: ''
-    });
-    const [showAllEmployees, setShowAllEmployees] = useState(false);
-    const [isModalOpen, setIsModalOpen] = useState(false);
-
-    const fetchEmployees = useCallback(async () => {
-        try {
-            setLoading(true);
-            let response;
-            if (isSearching) {
-                response = await searchEmployees(searchTerm, page, size);
-            } else {
-                response = await getAllEmployees(page, size);
-            }
-            const data = response.data;
-            setEmployees(Array.isArray(data) ? data : []);
-        } catch (err) {
-            setError(err.message);
-        } finally {
-            setLoading(false);
-        }
-    }, [isSearching, searchTerm, page, size]);
-
-    useEffect(() => {
-        fetchEmployees();
-    }, [fetchEmployees]);
-
-    const handlePageChange = (e) => {
-        setInputPage(Number(e.target.value));
-    };
-
-    const handleSizeChange = (e) => {
-        setInputSize(Number(e.target.value));
-    };
-
-    const handleGoToPage = () => {
-        setPage(inputPage);
-        setSize(inputSize);
-    };
-
-    const handleSearchChange = (e) => {
-        setSearchTerm(e.target.value);
-        setPage(1);
-    };
-
-    const handleSearch = () => {
-        setIsSearching(true);
-        setPage(1);
-        setShowAllEmployees(false);
-        fetchEmployees();
-    };
-
-    const handleShowAllEmployees = () => {
-        setIsSearching(false);
-        setSearchTerm('');
-        setPage(1);
-        setShowAllEmployees(true);
-        fetchEmployees();
-    };
-
-    const handleNewEmployeeChange = (e) => {
-        setNewEmployee({ ...newEmployee, [e.target.name]: e.target.value });
-    };
-
-    const handleAddEmployee = async () => {
-        try {
-            setLoading(true);
-            await addNewEmployee(newEmployee);
-            setNewEmployee({ name: '', departmentId: '', employmentType: '', dob: '', gender: '', status: '', statusDescription: '' });
-            fetchEmployees();
-        } catch (err) {
-            setError(err.message);
-        } finally {
-            setLoading(false);
-            setIsModalOpen(false);
-        }
-    };
-
-    const handleUpdateEmployee = async (employeeId) => {
-        try {
-            setLoading(true);
-            await updateEmployee(employeeId, selectedEmployee);
-            fetchEmployees();
-        } catch (err) {
-            setError(err.message);
-        } finally {
-            setLoading(false);
-        }
-    };
-
-    const handleDeleteEmployee = async (employeeId) => {
-        try {
-            setLoading(true);
-            await deleteEmployee(employeeId);
-            fetchEmployees();
-        } catch (err) {
-            setError(err.message);
-        } finally {
-            setLoading(false);
-        }
-    };
-
-    const showEmployeeDetails = (employee) => {
-        setSelectedEmployee(employee);
-    };
-
-    const closeEmployeeDetails = () => {
-        setSelectedEmployee(null);
-
-    };
-
-    const renderTable = () => (
-        <div className="table-wrapper">
-            <table className="fl-table">
-                <thead>
-                    <tr>
-                        <th>#</th>
-                        <th>Name</th>
-                        <th>Department ID</th>
-                        <th>Employment Type</th>
-                    </tr>
-                </thead>
-                <tbody>
-                    {employees.map((employee, index) => (
-                        <tr key={employee.employeeId}>
-                            <td>
-                                <button className="cell-btn" onClick={() => showEmployeeDetails(employee)}>
-                                    {(page - 1) * size + index + 1}
-                                </button>
-                            </td>
-                            <td>{employee.name}</td>
-                            <td>{employee.departmentId}</td>
-                            <td>{employee.employmentType}</td>
-
-                        </tr>
-                    ))}
-                </tbody>
-            </table>
-        </div>
-    );
-
-    const renderPagination = () => {
-        if (isSearching || showAllEmployees) {
-            return (
-                <div className="pagination">
-                    <HandlePrevPage page={page} setPage={setPage} setLoading={setLoading} />
-                    <span className="page-info">Page {page}</span>
-                    <HandleNextPage page={page} setPage={setPage} setLoading={setLoading} />
-                    <div className="page-controls">
-                        <input
-                            type="number"
-                            value={inputPage}
-                            onChange={handlePageChange}
-                            placeholder="Page number"
-                            className="page-input"
-                        />
-                        <input
-                            type="number"
-                            value={inputSize}
-                            onChange={handleSizeChange}
-                            placeholder="Page size"
-                            className="size-input"
-                        />
-                        <button onClick={handleGoToPage} className="go-button">Go</button>
-                    </div>
-                </div>
-            );
-        }
-
-
-    };
-
-    const renderContent = () => {
-        if (error) return <div>Error: {error}</div>;
-        if (loading) return <LoadingAnimation key="loading" />;
-        if (employees.length === 0 && !loading) return <p>No employees found.</p>;
-        if (showAllEmployees || isSearching) return <div>{renderTable()}</div>;
-    };
-
-    return (
-        <Dash>
-            <div className="employees-list">
-                <h2>Employees</h2>
-                <div className="controls">
-                    <div className="search-bar">
-                        <input
-                            type="text"
-                            value={searchTerm}
-                            onChange={handleSearchChange}
-                            placeholder="Search employees..."
-                        />
-                        <button onClick={handleSearch}>Search</button>
-                    </div>
-                    <button className="add-employee-button" onClick={() => setIsModalOpen(true)}>Add Employee</button>
-                    <button className="show-all-button" onClick={handleShowAllEmployees}>All Employees</button>
-                </div>
-
-                {renderContent()}
-                {renderPagination()}
-                {selectedEmployee && (
-                    <div className="employee-details-overlay">
-                        <AnimatePresence>
-                            <motion.div
-                                initial={{ opacity: 0 }}
-                                animate={{ opacity: 1 }}
-                                exit={{ opacity: 0 }}
-                                className="employee-details-container"
-                            >
-                                <EmployeeDetails
-                                    employee={selectedEmployee}
-                                    onClose={closeEmployeeDetails}
-                                    onSave={handleUpdateEmployee}
-                                    onDelete={handleDeleteEmployee}
-                                />
-                            </motion.div>
-                        </AnimatePresence>
-                    </div>
-                )}
-                <AddEmployee
-                    isOpen={isModalOpen}
-                    onClose={() => setIsModalOpen(false)}
-                    onSubmit={handleAddEmployee}
-                    newEmployee={newEmployee}
-                    handleNewEmployeeChange={handleNewEmployeeChange}
-                />
-            </div>
-        </Dash>
-    );
-};
-
-export default ListEmployees;
diff --git a/src/pages/pagination.jsx b/src/pages/Pagination.jsx
similarity index 100%
rename from src/pages/pagination.jsx
rename to src/pages/Pagination.jsx
diff --git a/src/pages/searchbar.jsx b/src/pages/SearchBar.jsx
similarity index 100%
rename from src/pages/searchbar.jsx
rename to src/pages/SearchBar.jsx
diff --git a/src/pages/modals/AddEmployee.jsx b/src/pages/modals/AddEmployeeModal.jsx
similarity index 96%
rename from src/pages/modals/AddEmployee.jsx
rename to src/pages/modals/AddEmployeeModal.jsx
index 8c8b9b5..b9baef7 100644
--- a/src/pages/modals/AddEmployee.jsx
+++ b/src/pages/modals/AddEmployeeModal.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import Modal from 'react-modal';
 import '../../styles/AddEmployee-Styling.css';
 
-const AddEmployee = ({ isOpen, onClose, onSubmit, newEmployee, handleNewEmployeeChange }) => {
+const AddEmployeeModal = ({ isOpen, onClose, onSubmit, newEmployee, handleNewEmployeeChange }) => {
     return (
         <Modal
             isOpen={isOpen}
@@ -101,4 +101,4 @@ const AddEmployee = ({ isOpen, onClose, onSubmit, newEmployee, handleNewEmployee
     );
 };
 
-export default AddEmployee;
+export default AddEmployeeModal;
diff --git a/src/pages/modals/EmployeeDetails.jsx b/src/pages/modals/EmployeeDetailsModal.jsx
similarity index 97%
rename from src/pages/modals/EmployeeDetails.jsx
rename to src/pages/modals/EmployeeDetailsModal.jsx
index b207d56..53b2ac2 100644
--- a/src/pages/modals/EmployeeDetails.jsx
+++ b/src/pages/modals/EmployeeDetailsModal.jsx
@@ -1,7 +1,7 @@
 import React, { useState } from 'react';
 import '../../styles/EmployeeDetails-styling.css'
 
-const EmployeeDetails = ({ employee, onClose, onSave, onDelete }) => {
+const EmployeeDetailsModal = ({ employee, onClose, onSave, onDelete }) => {
     const [editableEmployee, setEditableEmployee] = useState({ ...employee });
 
     const handleChange = (e) => {
@@ -128,4 +128,4 @@ const EmployeeDetails = ({ employee, onClose, onSave, onDelete }) => {
     );
 };
 
-export default EmployeeDetails;
+export default EmployeeDetailsModal;
diff --git a/src/styles/LoadingAnimation.css b/src/styles/LoadingAnimation.css
new file mode 100644
index 0000000..e69de29
-- 
2.45.2


From 4bdb81f3a8fe16eb12d8b370f156775da26de869 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Mon, 22 Jul 2024 19:00:00 +0300
Subject: [PATCH 04/32] Updates

---
 package-lock.json           |  42 ++++++++++--
 package.json                |   1 +
 src/App.jsx                 |   4 +-
 src/pages/ListSalaries.jsx  | 124 +++++++-----------------------------
 src/pages/SalariesTable.jsx |  28 ++++++++
 5 files changed, 91 insertions(+), 108 deletions(-)
 create mode 100644 src/pages/SalariesTable.jsx

diff --git a/package-lock.json b/package-lock.json
index 3d7827d..6c021f9 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -13,6 +13,7 @@
         "react": "^18.3.1",
         "react-dom": "^18.3.1",
         "react-icons": "^5.2.1",
+        "react-modal": "^3.16.1",
         "react-router-dom": "^6.25.1"
       },
       "devDependencies": {
@@ -1883,6 +1884,11 @@
         "node": ">=0.10.0"
       }
     },
+    "node_modules/exenv": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/exenv/-/exenv-1.2.2.tgz",
+      "integrity": "sha512-Z+ktTxTwv9ILfgKCk32OX3n/doe+OcLTRtqK9pcL+JsP3J1/VW8Uvl4ZjLlKqeW4rzK4oesDOGMEMRIZqtP4Iw=="
+    },
     "node_modules/fast-deep-equal": {
       "version": "3.1.3",
       "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
@@ -2877,7 +2883,6 @@
       "version": "4.1.1",
       "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
       "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
-      "dev": true,
       "engines": {
         "node": ">=0.10.0"
       }
@@ -3127,7 +3132,6 @@
       "version": "15.8.1",
       "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
       "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
-      "dev": true,
       "dependencies": {
         "loose-envify": "^1.4.0",
         "object-assign": "^4.1.1",
@@ -3202,8 +3206,30 @@
     "node_modules/react-is": {
       "version": "16.13.1",
       "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
-      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
-      "dev": true
+      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
+    },
+    "node_modules/react-lifecycles-compat": {
+      "version": "3.0.4",
+      "resolved": "https://registry.npmjs.org/react-lifecycles-compat/-/react-lifecycles-compat-3.0.4.tgz",
+      "integrity": "sha512-fBASbA6LnOU9dOU2eW7aQ8xmYBSXUIWr+UmF9b1efZBazGNO+rcXT/icdKnYm2pTwcRylVUYwW7H1PHfLekVzA=="
+    },
+    "node_modules/react-modal": {
+      "version": "3.16.1",
+      "resolved": "https://registry.npmjs.org/react-modal/-/react-modal-3.16.1.tgz",
+      "integrity": "sha512-VStHgI3BVcGo7OXczvnJN7yT2TWHJPDXZWyI/a0ssFNhGZWsPmB8cF0z33ewDXq4VfYMO1vXgiv/g8Nj9NDyWg==",
+      "dependencies": {
+        "exenv": "^1.2.0",
+        "prop-types": "^15.7.2",
+        "react-lifecycles-compat": "^3.0.0",
+        "warning": "^4.0.3"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "peerDependencies": {
+        "react": "^0.14.0 || ^15.0.0 || ^16 || ^17 || ^18",
+        "react-dom": "^0.14.0 || ^15.0.0 || ^16 || ^17 || ^18"
+      }
     },
     "node_modules/react-router": {
       "version": "6.25.1",
@@ -3836,6 +3862,14 @@
         }
       }
     },
+    "node_modules/warning": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/warning/-/warning-4.0.3.tgz",
+      "integrity": "sha512-rpJyN222KWIvHJ/F53XSZv0Zl/accqHR8et1kpaMTD/fLCRxtV8iX8czMzY7sVZupTI3zcUTg8eycS2kNF9l6w==",
+      "dependencies": {
+        "loose-envify": "^1.0.0"
+      }
+    },
     "node_modules/which": {
       "version": "2.0.2",
       "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
diff --git a/package.json b/package.json
index 56e8723..eda36c7 100644
--- a/package.json
+++ b/package.json
@@ -15,6 +15,7 @@
     "react": "^18.3.1",
     "react-dom": "^18.3.1",
     "react-icons": "^5.2.1",
+    "react-modal": "^3.16.1",
     "react-router-dom": "^6.25.1"
   },
   "devDependencies": {
diff --git a/src/App.jsx b/src/App.jsx
index 4a87d01..d680af3 100644
--- a/src/App.jsx
+++ b/src/App.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';
 import ListSalaries from './pages/ListSalaries';
 import Listemployees from './pages/EmployeeList';
-import EmployeeDetails from './pages/modals/EmployeeDetails';
+import EmployeeDetailsModal from './pages/modals/EmployeeDetailsModal';
 import Homepage from './pages/Homepage';
 import Loginpage from './pages/Loginpage';
 import { Dashboard } from './pages/Dashboard';
@@ -14,7 +14,7 @@ const App = () => {
           <Route path="/" element={<Homepage />} />
           <Route path="/home" element={<Homepage />} />
           <Route path="/salaries" element={<ListSalaries />} /> 
-          <Route path="/employee/:id" element={<EmployeeDetails />} />
+          <Route path="/employee/:id" element={<EmployeeDetailsModal />} />
           <Route path="/employees" element={<Listemployees/>} /> 
           <Route path="/login" element={<Loginpage />} />
           <Route path="/dashboard" element={<Dashboard/>} />
diff --git a/src/pages/ListSalaries.jsx b/src/pages/ListSalaries.jsx
index 7b111bb..1ff193f 100644
--- a/src/pages/ListSalaries.jsx
+++ b/src/pages/ListSalaries.jsx
@@ -1,20 +1,9 @@
 import React, { useState, useEffect, useCallback } from 'react';
-import { getAllSalaries } from '../api';
-import Dash from "../layout/Dash";
-import HandleNextPage from '../components/HandleNextPage';
-import HandlePrevPage from '../components/HandlePrevPage';
-import { motion } from 'framer-motion';
-
-const LoadingAnimation = () => (
-  <motion.div
-    initial={{ opacity: 0 }}
-    animate={{ opacity: 1 }}
-    exit={{ opacity: 0 }}
-    className="loading-animation"
-  >
-    <div className="spinner"></div>
-  </motion.div>
-);
+import { getAllSalaries } from '../../api';
+import Dash from "../../layout/Dash";
+import LoadingAnimation from './LoadingAnimation';
+import SalariesTable from './SalariesTable';
+import Pagination from './Pagination';
 
 const ListSalaries = () => {
   const [salaries, setSalaries] = useState([]);
@@ -30,116 +19,47 @@ const ListSalaries = () => {
       setLoading(true);
       const response = await getAllSalaries(page, size);
       const data = response.data;
-      console.log("Fetched salaries data:", data);
-      const salaryList = data;
-      if (salaryList) {
-        setSalaries(salaryList);
-        console.log("Updated salaries state:", salaryList);
-      } else {
-        setError('No salary data found');
-      }
+      setSalaries(Array.isArray(data) ? data : []);
     } catch (error) {
-      if (error.message === "Network Error") {
-        setLoading(true);
-      } else {
-        setError(`Error fetching salaries: ${error.message}`);
-      }
+      setError(`Error fetching salaries: ${error.message}`);
     } finally {
       setLoading(false);
     }
   }, [page, size]);
 
   useEffect(() => {
-    console.log("Fetching salaries for page:", page);
     fetchSalaries();
   }, [fetchSalaries]);
 
-  const handlePageChange = (e) => {
-    setInputPage(Number(e.target.value));
-  };
-
-  const handleSizeChange = (e) => {
-    setInputSize(Number(e.target.value));
-  };
-
+  const handlePageChange = (e) => setInputPage(Number(e.target.value));
+  const handleSizeChange = (e) => setInputSize(Number(e.target.value));
   const handleGoToPage = () => {
     setPage(inputPage);
     setSize(inputSize);
   };
 
-  const renderTable = () => (
-    <div className="table-wrapper">
-      <table className="fl-table">
-        <thead>
-          <tr>
-            <th>#</th>
-            <th>EmployeeID</th>
-            <th>Date</th>
-            <th>NetSalary</th>
-          </tr>
-        </thead>
-        <tbody>
-          {salaries.map((salary, index) => (
-            <tr key={salary.salaryId}>
-              <td>{(page - 1) * size + index + 1}</td>
-              <td>{salary.employeeId}</td>
-              <td>{salary.month}</td>
-              <td>{salary.netSalary}</td>
-            </tr>
-          ))}
-        </tbody>
-      </table>
-    </div>
-  );
-
-  const renderPagination = () => (
-    <div className="pagination">
-      <HandlePrevPage page={page} setPage={setPage} setLoading={setLoading} />
-      <span className="page-info">Page {page}</span>
-      <HandleNextPage page={page} setPage={setPage} setLoading={setLoading} />
-      <div className="page-controls">
-        <input
-          type="number"
-          value={inputPage}
-          onChange={handlePageChange}
-          placeholder="Page number"
-          className="page-input"
-        />
-        <input
-          type="number"
-          value={inputSize}
-          onChange={handleSizeChange}
-          placeholder="Page size"
-          className="size-input"
-        />
-        <button onClick={handleGoToPage} className="go-button">Go</button>
-      </div>
-    </div>
-  );
-
   const renderContent = () => {
     if (error) return <div>Error: {error}</div>;
-    if (salaries.length === 0 && !loading) return <p>No salaries found.</p>;
-
-    return (
-      <motion.div
-        key="content"
-        initial={{ opacity: 0 }}
-        animate={{ opacity: 1 }}
-        exit={{ opacity: 0 }}
-      >
-        {renderTable()}
-      </motion.div>
-    );
+    if (loading) return <LoadingAnimation />;
+    if (salaries.length === 0) return <p>No salaries found.</p>;
+    
+    return <SalariesTable salaries={salaries} page={page} size={size} />;
   };
 
   return (
     <Dash>
       <div className="salaries-list">
         <h2>Salaries</h2>
-        {console.log("Current salaries state:", salaries)}
         {renderContent()}
-        {renderPagination()}
+        <Pagination
+          page={page}
+          setPage={setPage}
+          inputPage={inputPage}
+          inputSize={inputSize}
+          handlePageChange={handlePageChange}
+          handleSizeChange={handleSizeChange}
+          handleGoToPage={handleGoToPage}
+        />
       </div>
     </Dash>
   );
diff --git a/src/pages/SalariesTable.jsx b/src/pages/SalariesTable.jsx
new file mode 100644
index 0000000..9c8a9aa
--- /dev/null
+++ b/src/pages/SalariesTable.jsx
@@ -0,0 +1,28 @@
+import React from 'react';
+
+const SalariesTable = ({ salaries, page, size }) => (
+  <div className="table-wrapper">
+    <table className="fl-table">
+      <thead>
+        <tr>
+          <th>#</th>
+          <th>EmployeeID</th>
+          <th>Date</th>
+          <th>NetSalary</th>
+        </tr>
+      </thead>
+      <tbody>
+        {salaries.map((salary, index) => (
+          <tr key={salary.salaryId}>
+            <td>{(page - 1) * size + index + 1}</td>
+            <td>{salary.employeeId}</td>
+            <td>{salary.month}</td>
+            <td>{salary.netSalary}</td>
+          </tr>
+        ))}
+      </tbody>
+    </table>
+  </div>
+);
+
+export default SalariesTable;
-- 
2.45.2


From 9b4acb597867c40db605b4d5d989630fe9c90ea7 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Mon, 22 Jul 2024 20:00:00 +0300
Subject: [PATCH 05/32] More updates

---
 src/pages/ListSalaries.jsx | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/pages/ListSalaries.jsx b/src/pages/ListSalaries.jsx
index 1ff193f..bf3c4bf 100644
--- a/src/pages/ListSalaries.jsx
+++ b/src/pages/ListSalaries.jsx
@@ -1,5 +1,5 @@
 import React, { useState, useEffect, useCallback } from 'react';
-import { getAllSalaries } from '../../api';
+import {getAllSalaries} from '../api';
 import Dash from "../../layout/Dash";
 import LoadingAnimation from './LoadingAnimation';
 import SalariesTable from './SalariesTable';
-- 
2.45.2


From 1b298ca44e4ebd46d9e762c36c12330a58f84d94 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Wed, 24 Jul 2024 09:03:52 +0300
Subject: [PATCH 06/32] Updates

---
 vite.config.js | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/vite.config.js b/vite.config.js
index 861b04b..6f15701 100644
--- a/vite.config.js
+++ b/vite.config.js
@@ -4,4 +4,5 @@ import react from '@vitejs/plugin-react-swc'
 // https://vitejs.dev/config/
 export default defineConfig({
   plugins: [react()],
-})
+  server: { port: 3000 }
+})
\ No newline at end of file
-- 
2.45.2


From 817976506f9e773bd6b62192e69d80fe624d01b3 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Wed, 24 Jul 2024 09:26:12 +0300
Subject: [PATCH 07/32] fixed error "locating Dash file"

---
 src/pages/ListSalaries.jsx | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/pages/ListSalaries.jsx b/src/pages/ListSalaries.jsx
index bf3c4bf..ede39d1 100644
--- a/src/pages/ListSalaries.jsx
+++ b/src/pages/ListSalaries.jsx
@@ -1,6 +1,6 @@
 import React, { useState, useEffect, useCallback } from 'react';
 import {getAllSalaries} from '../api';
-import Dash from "../../layout/Dash";
+import Dash from "../layout/Dash";
 import LoadingAnimation from './LoadingAnimation';
 import SalariesTable from './SalariesTable';
 import Pagination from './Pagination';
-- 
2.45.2


From cd1db432fc434fd16788d52dc7dbd2b3c8991cbf Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Thu, 25 Jul 2024 09:20:03 +0300
Subject: [PATCH 08/32] More updates

---
 package-lock.json | 9 +++++++++
 package.json      | 1 +
 2 files changed, 10 insertions(+)

diff --git a/package-lock.json b/package-lock.json
index 6c021f9..d6e8aa5 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -10,6 +10,7 @@
       "dependencies": {
         "axios": "^1.7.2",
         "framer-motion": "^11.3.8",
+        "js-cookie": "^3.0.5",
         "react": "^18.3.1",
         "react-dom": "^18.3.1",
         "react-icons": "^5.2.1",
@@ -2714,6 +2715,14 @@
         "set-function-name": "^2.0.1"
       }
     },
+    "node_modules/js-cookie": {
+      "version": "3.0.5",
+      "resolved": "https://registry.npmjs.org/js-cookie/-/js-cookie-3.0.5.tgz",
+      "integrity": "sha512-cEiJEAEoIbWfCZYKWhVwFuvPX1gETRYPw6LlaTKoxD3s2AkXzkCjnp6h0V77ozyqj0jakteJ4YqDJT830+lVGw==",
+      "engines": {
+        "node": ">=14"
+      }
+    },
     "node_modules/js-tokens": {
       "version": "4.0.0",
       "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
diff --git a/package.json b/package.json
index eda36c7..aec2a38 100644
--- a/package.json
+++ b/package.json
@@ -12,6 +12,7 @@
   "dependencies": {
     "axios": "^1.7.2",
     "framer-motion": "^11.3.8",
+    "js-cookie": "^3.0.5",
     "react": "^18.3.1",
     "react-dom": "^18.3.1",
     "react-icons": "^5.2.1",
-- 
2.45.2


From 79424ef167431c529d3ab8c8c4863d74c6972d15 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Thu, 25 Jul 2024 11:00:03 +0300
Subject: [PATCH 09/32] Updates

---
 src/api.jsx | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/api.jsx b/src/api.jsx
index 48e32bc..d7ef0bb 100644
--- a/src/api.jsx
+++ b/src/api.jsx
@@ -2,6 +2,7 @@ import axios from 'axios';
 
 const api = axios.create({
   baseURL: 'http://localhost:8080',
+  withCredentials: true,
   headers: {
     "Content-Type": "application/json",
     Accept: "application/json",
-- 
2.45.2


From 7544b06d682008d014dbdb2276e3d6b1e5c10bfe Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Thu, 25 Jul 2024 11:40:01 +0300
Subject: [PATCH 10/32] Update

---
 src/pages/SearchBar.jsx            |  4 +-
 src/styles/employeelistStyling.css |  4 +-
 src/styles/searchBarStyling.css    | 65 ++++++++++++++++++++++++++++++
 3 files changed, 70 insertions(+), 3 deletions(-)
 create mode 100644 src/styles/searchBarStyling.css

diff --git a/src/pages/SearchBar.jsx b/src/pages/SearchBar.jsx
index b60e47c..0e8740a 100644
--- a/src/pages/SearchBar.jsx
+++ b/src/pages/SearchBar.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-
+import '../styles/searchBarStyling.css'
 const SearchBar = ({ searchTerm, setSearchTerm, handleSearch, handleShowAllEmployees }) => (
     <div className="search-bar">
         <input
@@ -9,7 +9,7 @@ const SearchBar = ({ searchTerm, setSearchTerm, handleSearch, handleShowAllEmplo
             placeholder="Search employees..."
         />
         <button onClick={handleSearch}>Search</button>
-        <button onClick={handleShowAllEmployees}>All Employees</button>
+        <button className= 'show-all-button' onClick={handleShowAllEmployees}>All Employees</button>
     </div>
 );
 
diff --git a/src/styles/employeelistStyling.css b/src/styles/employeelistStyling.css
index 3993b7d..663969b 100644
--- a/src/styles/employeelistStyling.css
+++ b/src/styles/employeelistStyling.css
@@ -48,7 +48,8 @@ h2 {
     flex-direction: column;
     gap: 20px;
   }
-  
+    
+
   .search-bar {
     display: flex;
     gap: 10px;
@@ -113,4 +114,5 @@ h2 {
   button:hover {
     opacity: 0.9;
   }
+  
   
\ No newline at end of file
diff --git a/src/styles/searchBarStyling.css b/src/styles/searchBarStyling.css
new file mode 100644
index 0000000..0cc4dc1
--- /dev/null
+++ b/src/styles/searchBarStyling.css
@@ -0,0 +1,65 @@
+.search-bar {
+    display: flex;
+    gap: 10px;
+    margin-bottom: 20px;
+  }
+  
+  .search-bar input {
+    padding: 10px;
+    font-size: 16px;
+    width: 100%;
+    box-sizing: border-box;
+    border: 1px solid #ccc;
+    border-radius: 4px;
+  }
+  
+  .search-bar button {
+    padding: 10px 20px;
+    font-size: 16px;
+    background-color: #007bff;
+    color: white;
+    border: none;
+    border-radius: 4px;
+    cursor: pointer;
+  }
+  
+  .new-employee-form {
+    display: flex;
+    flex-direction: column;
+    gap: 10px;
+    margin-bottom: 20px;
+  }
+  
+  .new-employee-form input {
+    padding: 10px;
+    font-size: 16px;
+    width: 100%;
+    box-sizing: border-box;
+    border: 1px solid #ccc;
+    border-radius: 4px;
+  }
+  
+  .new-employee-form button {
+    padding: 10px 20px;
+    font-size: 16px;
+    background-color: #28a745;
+    color: white;
+    border: none;
+    border-radius: 4px;
+    cursor: pointer;
+  }
+  
+  .show-all-button {
+    padding: 10px 20px;
+    font-size: 16px;
+    background-color: #6c757d;
+    color: white;
+    border: none;
+    border-radius: 4px;
+    cursor: pointer;
+  }
+  
+  button:hover {
+    opacity: 0.9;
+  }
+  
\ No newline at end of file
-- 
2.45.2


From 3d607e8aa86503be2bd1f1c33c17062f83d80013 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Thu, 25 Jul 2024 18:00:02 +0300
Subject: [PATCH 11/32] Update

---
 src/pages/EmployeeList.jsx | 4 ++--
 src/pages/SearchBar.jsx    | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/pages/EmployeeList.jsx b/src/pages/EmployeeList.jsx
index e791691..88dbd2c 100644
--- a/src/pages/EmployeeList.jsx
+++ b/src/pages/EmployeeList.jsx
@@ -159,9 +159,9 @@ const ListEmployees = () => {
                         searchTerm={searchTerm}
                         setSearchTerm={setSearchTerm}
                         handleSearch={handleSearch}
-                        handleShowAllEmployees={handleShowAllEmployees}
+                        handleAddEmployee={() => setIsModalOpen(true)}
                     />
-                    <button className="add-employee-button" onClick={() => setIsModalOpen(true)}>Add Employee</button>
+                    <button className="add-employee-button" onClick={handleShowAllEmployees}>Show All</button>
                 </div>
 
                 {renderContent()}
diff --git a/src/pages/SearchBar.jsx b/src/pages/SearchBar.jsx
index 0e8740a..7303148 100644
--- a/src/pages/SearchBar.jsx
+++ b/src/pages/SearchBar.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import '../styles/searchBarStyling.css'
-const SearchBar = ({ searchTerm, setSearchTerm, handleSearch, handleShowAllEmployees }) => (
+const SearchBar = ({ searchTerm, setSearchTerm, handleSearch, handleAddEmployee }) => (
     <div className="search-bar">
         <input
             type="text"
@@ -9,7 +9,7 @@ const SearchBar = ({ searchTerm, setSearchTerm, handleSearch, handleShowAllEmplo
             placeholder="Search employees..."
         />
         <button onClick={handleSearch}>Search</button>
-        <button className= 'show-all-button' onClick={handleShowAllEmployees}>All Employees</button>
+        <button className='show-all-button' onClick={handleAddEmployee}>Add Employee</button>
     </div>
 );
 
-- 
2.45.2


From d165623a37289a59a903e6d3127b012a3a7c5d86 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Thu, 25 Jul 2024 18:30:02 +0300
Subject: [PATCH 12/32] Update

---
 src/pages/EmployeeList.jsx | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/pages/EmployeeList.jsx b/src/pages/EmployeeList.jsx
index 88dbd2c..3095702 100644
--- a/src/pages/EmployeeList.jsx
+++ b/src/pages/EmployeeList.jsx
@@ -147,7 +147,7 @@ const ListEmployees = () => {
         if (error) return <div>Error: {error}</div>;
         if (loading) return <LoadingAnimation key="loading" />;
         if (employees.length === 0 && !loading) return <p>No employees found.</p>;
-        return <EmployeeTable employees={employees} page={page} size={size} showEmployeeDetails={showEmployeeDetails} />;
+        // return <EmployeeTable employees={employees} page={page} size={size} showEmployeeDetails={showEmployeeDetails} />;
     };
 
     return (
-- 
2.45.2


From 833221cc16273f41ec40ec7c4bf283446622fc9c Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Thu, 25 Jul 2024 18:40:01 +0300
Subject: [PATCH 13/32] Updates

---
 src/pages/EmployeeList.jsx | 34 +++++++++++++++++++++++-----------
 1 file changed, 23 insertions(+), 11 deletions(-)

diff --git a/src/pages/EmployeeList.jsx b/src/pages/EmployeeList.jsx
index 3095702..dce6db8 100644
--- a/src/pages/EmployeeList.jsx
+++ b/src/pages/EmployeeList.jsx
@@ -147,9 +147,29 @@ const ListEmployees = () => {
         if (error) return <div>Error: {error}</div>;
         if (loading) return <LoadingAnimation key="loading" />;
         if (employees.length === 0 && !loading) return <p>No employees found.</p>;
-        // return <EmployeeTable employees={employees} page={page} size={size} showEmployeeDetails={showEmployeeDetails} />;
+
+        return (
+            <>
+                <EmployeeTable
+                    employees={employees}
+                    page={page}
+                    size={size}
+                    showEmployeeDetails={showEmployeeDetails}
+                />
+                <Pagination
+                    page={page}
+                    setPage={setPage}
+                    inputPage={inputPage}
+                    setInputPage={setInputPage}
+                    inputSize={inputSize}
+                    setInputSize={setInputSize}
+                    handleGoToPage={handleGoToPage}
+                />
+            </>
+        );
     };
 
+
     return (
         <Dash>
             <div className="employees-list">
@@ -164,17 +184,9 @@ const ListEmployees = () => {
                     <button className="add-employee-button" onClick={handleShowAllEmployees}>Show All</button>
                 </div>
 
-                {renderContent()}
+
                 {(isSearching || showAllEmployees) && (
-                    <Pagination
-                        page={page}
-                        setPage={setPage}
-                        inputPage={inputPage}
-                        setInputPage={setInputPage}
-                        inputSize={inputSize}
-                        setInputSize={setInputSize}
-                        handleGoToPage={handleGoToPage}
-                    />
+                    renderContent()
                 )}
 
                 {selectedEmployee && (
-- 
2.45.2


From 04e5b9d44b18328c483d503489c0cbc50951956a Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Thu, 25 Jul 2024 18:50:00 +0300
Subject: [PATCH 14/32] More updates

---
 src/pages/Pagination.jsx | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/src/pages/Pagination.jsx b/src/pages/Pagination.jsx
index effa577..d2631c4 100644
--- a/src/pages/Pagination.jsx
+++ b/src/pages/Pagination.jsx
@@ -2,8 +2,15 @@ import React from 'react';
 import HandleNextPage from '../components/HandleNextPage';
 import HandlePrevPage from '../components/HandlePrevPage';
 
-const Pagination = ({ page, setPage, inputPage, setInputPage, inputSize, setInputSize, handleGoToPage }) => (
-    <div className="pagination">
+function Pagination ({ page, setPage, inputPage, setInputPage, inputSize, setInputSize, handleGoToPage }){
+    
+    console.log("clcicked!")
+    return 
+   (
+
+   
+   
+   <div className="pagination">
         <HandlePrevPage page={page} setPage={setPage} />
         <span className="page-info">Page {page}</span>
         <HandleNextPage page={page} setPage={setPage} />
@@ -27,4 +34,6 @@ const Pagination = ({ page, setPage, inputPage, setInputPage, inputSize, setInpu
     </div>
 );
 
+}
+
 export default Pagination;
-- 
2.45.2


From 82f9630fd673b2c3e3543a3b59c2c0d80ddd3d95 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Thu, 25 Jul 2024 19:00:01 +0300
Subject: [PATCH 15/32] Update

---
 src/pages/EmployeeList.jsx |  1 +
 src/pages/Pagination.jsx   | 60 +++++++++++++++++++-------------------
 2 files changed, 31 insertions(+), 30 deletions(-)

diff --git a/src/pages/EmployeeList.jsx b/src/pages/EmployeeList.jsx
index dce6db8..0d474e6 100644
--- a/src/pages/EmployeeList.jsx
+++ b/src/pages/EmployeeList.jsx
@@ -164,6 +164,7 @@ const ListEmployees = () => {
                     inputSize={inputSize}
                     setInputSize={setInputSize}
                     handleGoToPage={handleGoToPage}
+                    setLoading={setLoading}
                 />
             </>
         );
diff --git a/src/pages/Pagination.jsx b/src/pages/Pagination.jsx
index d2631c4..b35b6d4 100644
--- a/src/pages/Pagination.jsx
+++ b/src/pages/Pagination.jsx
@@ -2,37 +2,37 @@ import React from 'react';
 import HandleNextPage from '../components/HandleNextPage';
 import HandlePrevPage from '../components/HandlePrevPage';
 
-function Pagination ({ page, setPage, inputPage, setInputPage, inputSize, setInputSize, handleGoToPage }){
-    
+
+
+
+function Pagination({ page, setPage, inputPage, setInputPage, inputSize, setInputSize, handleGoToPage , setLoading}) {
+
     console.log("clcicked!")
-    return 
-   (
-
-   
-   
-   <div className="pagination">
-        <HandlePrevPage page={page} setPage={setPage} />
-        <span className="page-info">Page {page}</span>
-        <HandleNextPage page={page} setPage={setPage} />
-        <div className="page-controls">
-            <input
-                type="number"
-                value={inputPage}
-                onChange={(e) => setInputPage(Number(e.target.value))}
-                placeholder="Page number"
-                className="page-input"
-            />
-            <input
-                type="number"
-                value={inputSize}
-                onChange={(e) => setInputSize(Number(e.target.value))}
-                placeholder="Page size"
-                className="size-input"
-            />
-            <button onClick={handleGoToPage} className="go-button">Go</button>
-        </div>
-    </div>
-);
+    return (
+            <div className="pagination">
+                <HandlePrevPage page={page} setPage={setPage}  setLoading={setLoading}/>
+                <span className="page-info">Page {page}</span>
+                <HandleNextPage page={page} setPage={setPage}   setLoading={setLoading}/>
+                <div className="page-controls">
+                    <input
+                        type="number"
+                        value={inputPage}
+                        onChange={(e) => setInputPage(Number(e.target.value))}
+                        placeholder="Page number"
+                        className="page-input"
+                    />
+                    <input
+                        type="number"
+                        value={inputSize}
+                        onChange={(e) => setInputSize(Number(e.target.value))}
+                        placeholder="Page size"
+                        className="size-input"
+                    />
+                    <button onClick={handleGoToPage} className="go-button">Go</button>
+                </div>
+            </div>
+    )
+
 
 }
 
-- 
2.45.2


From 6899569d730c1eb259c96e9666ad54928265a1ac Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Thu, 25 Jul 2024 19:10:00 +0300
Subject: [PATCH 16/32] More updates...XD

---
 src/components/HandleNextPage.jsx        | 12 ------------
 src/components/HandlePrevPage.jsx        | 12 ------------
 src/{pages => components}/Pagination.jsx | 19 ++++++++++++++++---
 src/pages/EmployeeList.jsx               |  4 +++-
 src/pages/ListSalaries.jsx               |  2 +-
 5 files changed, 20 insertions(+), 29 deletions(-)
 delete mode 100644 src/components/HandleNextPage.jsx
 delete mode 100644 src/components/HandlePrevPage.jsx
 rename src/{pages => components}/Pagination.jsx (70%)

diff --git a/src/components/HandleNextPage.jsx b/src/components/HandleNextPage.jsx
deleted file mode 100644
index 05f6f06..0000000
--- a/src/components/HandleNextPage.jsx
+++ /dev/null
@@ -1,12 +0,0 @@
-
-import React from 'react';
-
-const HandleNextPage = ({ page, setPage, setLoading }) => {
-    const nextPage = () => {
-        setLoading(true);
-        setPage((prev) => prev + 1);
-    };
-    return <button onClick={nextPage}>Next</button>;
-};
-
-export default HandleNextPage;
diff --git a/src/components/HandlePrevPage.jsx b/src/components/HandlePrevPage.jsx
deleted file mode 100644
index c32199d..0000000
--- a/src/components/HandlePrevPage.jsx
+++ /dev/null
@@ -1,12 +0,0 @@
-
-import React from 'react';
-
-const HandlePrevPage = ({ page, setPage, setLoading }) => {
-    const prevPage = () => {
-      setLoading(true);
-      setPage((prev) => (prev > 0 ? prev - 1 : 0));
-    };
-    return <button onClick={prevPage} disabled={page === 1}>Previous</button>;
-  };
-
-export default HandlePrevPage;
diff --git a/src/pages/Pagination.jsx b/src/components/Pagination.jsx
similarity index 70%
rename from src/pages/Pagination.jsx
rename to src/components/Pagination.jsx
index b35b6d4..517591b 100644
--- a/src/pages/Pagination.jsx
+++ b/src/components/Pagination.jsx
@@ -1,13 +1,26 @@
 import React from 'react';
-import HandleNextPage from '../components/HandleNextPage';
-import HandlePrevPage from '../components/HandlePrevPage';
+
 
 
 
 
 function Pagination({ page, setPage, inputPage, setInputPage, inputSize, setInputSize, handleGoToPage , setLoading}) {
 
-    console.log("clcicked!")
+    const HandleNextPage = ({ page, setPage, setLoading }) => {
+        const nextPage = () => {
+            setLoading(true);
+            setPage((prev) => prev + 1);
+        };
+        return <button onClick={nextPage}>Next</button>;
+    };
+    const HandlePrevPage = ({ page, setPage, setLoading }) => {
+        const prevPage = () => {
+          setLoading(true);
+          setPage((prev) => (prev > 0 ? prev - 1 : 0));
+        };
+        return <button onClick={prevPage} disabled={page === 1}>Previous</button>;
+      };
+    
     return (
             <div className="pagination">
                 <HandlePrevPage page={page} setPage={setPage}  setLoading={setLoading}/>
diff --git a/src/pages/EmployeeList.jsx b/src/pages/EmployeeList.jsx
index 0d474e6..934ef83 100644
--- a/src/pages/EmployeeList.jsx
+++ b/src/pages/EmployeeList.jsx
@@ -7,7 +7,7 @@ import {
     deleteEmployee,
 } from '../api';
 import Dash from "../layout/Dash";
-import Pagination from './Pagination';
+import Pagination from '../components/Pagination';
 import SearchBar from './SearchBar';
 import EmployeeTable from './EmployeeTable';
 import LoadingAnimation from './LoadingAnimation';
@@ -16,6 +16,8 @@ import AddEmployeeModal from './modals/AddEmployeeModal';
 import '../styles/pageStyling.css';
 import '../styles/employeelistStyling.css';
 
+
+
 const ListEmployees = () => {
     const [employees, setEmployees] = useState([]);
     const [loading, setLoading] = useState(true);
diff --git a/src/pages/ListSalaries.jsx b/src/pages/ListSalaries.jsx
index ede39d1..973f011 100644
--- a/src/pages/ListSalaries.jsx
+++ b/src/pages/ListSalaries.jsx
@@ -3,7 +3,7 @@ import {getAllSalaries} from '../api';
 import Dash from "../layout/Dash";
 import LoadingAnimation from './LoadingAnimation';
 import SalariesTable from './SalariesTable';
-import Pagination from './Pagination';
+import Pagination from '../components/Pagination';
 
 const ListSalaries = () => {
   const [salaries, setSalaries] = useState([]);
-- 
2.45.2


From ae880857be289c85c63aec46c8e3bc78d851479e Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Fri, 26 Jul 2024 09:30:00 +0300
Subject: [PATCH 17/32] Updates

---
 src/api.jsx | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/src/api.jsx b/src/api.jsx
index d7ef0bb..2cfce1e 100644
--- a/src/api.jsx
+++ b/src/api.jsx
@@ -56,4 +56,14 @@ export const getAllowancesSalariesDept = (departmentId = 1) => api.get(`/salarie
 export const getTotalSalary = api.get(`/salaries/total-net-salary`)
 export const getPaymentHistory = (employeeId) => api.get(`/salaries/payment-history/?employeeId=${employeeId}`)
 
-export const getAllUsers = (page = 1, size = 10) => api.get(`/systemusers?page=${page}&size=${size}`)
\ No newline at end of file
+export const getAllUsers = (page = 1, size = 10) => api.get(`/systemusers?page=${page}&size=${size}`)
+
+
+// SSE for Export Jobs
+export const initiateExport = (tableName) => {
+  return new EventSource(`http://localhost:8080/api/export/${tableName}`);
+};
+
+export const initiateExportSearch = (tableName, searchTerm) => {
+  return new EventSource(`http://localhost:8080/api/exportSearch/${tableName}?searchTerm=${searchTerm}`);
+};
\ No newline at end of file
-- 
2.45.2


From 9b2f8f72a972a057d1349a3780b91f942c5fabfa Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Fri, 26 Jul 2024 09:45:09 +0300
Subject: [PATCH 18/32] feat: added notification tab in Dash component

---
 src/layout/Dash.jsx | 72 +++++++++++++++++++++------------------------
 1 file changed, 33 insertions(+), 39 deletions(-)

diff --git a/src/layout/Dash.jsx b/src/layout/Dash.jsx
index 67cb1f1..329ef98 100644
--- a/src/layout/Dash.jsx
+++ b/src/layout/Dash.jsx
@@ -1,4 +1,4 @@
-import React, { useState } from 'react';
+import React, { useState, useEffect } from 'react';
 import { Link } from 'react-router-dom';
 import { searchEmployees } from '../api';
 import EmployeeDetails from '../pages/modals/EmployeeDetailsModal';
@@ -11,20 +11,11 @@ const Dash = ({ children }) => {
     const [searchResults, setSearchResults] = useState([]);
     const [showPopup, setShowPopup] = useState(false);
     const [selectedEmployee, setSelectedEmployee] = useState(null);
+    const [notifications, setNotifications] = useState([]);
 
-    const toggleCollapse = () => {
-        setIsCollapsed(!isCollapsed);
-    };
-
-    const handleKeyDown = (e) => {
-        if (e.key === 'Enter') {
-            handleSearch();
-        }
-    };
+    const toggleCollapse = () => setIsCollapsed(!isCollapsed);
 
-    const handleSearchInputChange = (e) => {
-        setSearchTerm(e.target.value);
-    };
+    const handleSearchInputChange = (e) => setSearchTerm(e.target.value);
 
     const handleSearch = async () => {
         if (searchTerm.trim() === '') {
@@ -34,26 +25,29 @@ const Dash = ({ children }) => {
 
         try {
             const response = await searchEmployees(searchTerm);
-            const data = response.data;
-            setSearchResults(data);
-            setShowPopup(true); 
+            setSearchResults(response.data);
+            setShowPopup(true);
         } catch (error) {
             console.error('Error fetching search results:', error);
             setSearchResults([]);
         }
     };
 
-    const closePopup = () => {
-        setShowPopup(false);
-    };
+    const closePopup = () => setShowPopup(false);
 
-    const showEmployeeDetails = (employee) => {
-        setSelectedEmployee(employee);
-    };
+    const showEmployeeDetails = (employee) => setSelectedEmployee(employee);
 
-    const closeEmployeeDetails = () => {
-        setSelectedEmployee(null);
-    };
+    const closeEmployeeDetails = () => setSelectedEmployee(null);
+
+    useEffect(() => {
+        const eventSource = new EventSource('http://localhost:8080/api/notifications');
+
+        eventSource.onmessage = (event) => {
+            setNotifications((prev) => [...prev, event.data]);
+        };
+
+        return () => eventSource.close();
+    }, []);
 
     return (
         <div className="dashboard-layout">
@@ -64,24 +58,17 @@ const Dash = ({ children }) => {
                     </button>
                 </div>
                 <div className="navbar-left">
-                    <img src="../assets/logo.png" alt="" className="logo" />
+                    <img src="../assets/logo.png" alt="Logo" className="logo" />
                 </div>
                 <div className="navbar-center">
-                    {/* <input
-                        type="text"
-                        placeholder="Search Employee"
-                        className="search-input"
-                        value={searchTerm}
-                        onChange={handleSearchInputChange}
-                        onKeyDown={handleKeyDown}
-                    /> */}
+                    {/* Search bar could go here */}
                 </div>
                 <div className="navbar-right">
                     <button className="icon-button"><i className="bell-icon"></i></button>
                     <button className="icon-button"><i className="gift-icon"></i></button>
                     <button className="icon-button"><i className="help-icon"></i></button>
                     <div className="user-profile">
-                        <img src="../assets/avatar.png" alt="" className="avatar" />
+                        <img src="../assets/avatar.png" alt="User Avatar" className="avatar" />
                         <span className="user-name">Name</span>
                         <span className="user-role">Role</span>
                     </div>
@@ -105,6 +92,16 @@ const Dash = ({ children }) => {
                     {children}
                 </div>
 
+                {/* Notifications Section */}
+                <div className="notifications">
+                    <h2>Notifications</h2>
+                    <ul>
+                        {notifications.map((notification, index) => (
+                            <li key={index}>{notification}</li>
+                        ))}
+                    </ul>
+                </div>
+
                 {/* Popup Modal for Search Results */}
                 {showPopup && (
                     <div className="popup-overlay">
@@ -131,9 +128,7 @@ const Dash = ({ children }) => {
                                             <tbody>
                                                 {searchResults.map(employee => (
                                                     <tr key={employee.employeeId}>
-                                                        <td><button onClick={() => showEmployeeDetails(employee)}>
-                                                            {employee.employeeId}
-                                                        </button></td>
+                                                        <td><button onClick={() => showEmployeeDetails(employee)}>{employee.employeeId}</button></td>
                                                         <td>{employee.name}</td>
                                                         <td>{employee.dob}</td>
                                                         <td>{employee.gender}</td>
@@ -165,7 +160,6 @@ const Dash = ({ children }) => {
                                             </div>
                                         )}
                                     </div>
-
                                 ) : (
                                     <p>No results found.</p>
                                 )}
-- 
2.45.2


From 43dfecbcfdcc8df8c5eee4c35d96467a4e411fa2 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Fri, 26 Jul 2024 10:00:01 +0300
Subject: [PATCH 19/32] Update

---
 src/components/NotificationDrawer.jsx | 39 ++++++++++++++++++
 src/layout/Dash.jsx                   | 26 ++++++------
 src/styles/notificationDrawer.css     | 58 +++++++++++++++++++++++++++
 3 files changed, 110 insertions(+), 13 deletions(-)
 create mode 100644 src/components/NotificationDrawer.jsx
 create mode 100644 src/styles/notificationDrawer.css

diff --git a/src/components/NotificationDrawer.jsx b/src/components/NotificationDrawer.jsx
new file mode 100644
index 0000000..7f4c8a0
--- /dev/null
+++ b/src/components/NotificationDrawer.jsx
@@ -0,0 +1,39 @@
+import React from 'react';
+import { motion, AnimatePresence } from 'framer-motion';
+import '../styles/notificationDrawer.css';
+
+const NotificationDrawer = ({ notifications, isOpen, onClose }) => {
+    return (
+        <AnimatePresence>
+            {isOpen && (
+                <motion.div
+                    initial={{ x: '100%' }}
+                    animate={{ x: '0%' }}
+                    exit={{ x: '100%' }}
+                    transition={{ type: 'spring', stiffness: 300, damping: 30 }}
+                    className="notification-drawer"
+                >
+                    <div className="drawer-header">
+                        <h2>Notifications</h2>
+                        <button className="close-drawer-btn" onClick={onClose}>
+                            &times;
+                        </button>
+                    </div>
+                    <div className="drawer-content">
+                        {notifications.length > 0 ? (
+                            <ul>
+                                {notifications.map((notification, index) => (
+                                    <li key={index}>{notification}</li>
+                                ))}
+                            </ul>
+                        ) : (
+                            <p>No notifications</p>
+                        )}
+                    </div>
+                </motion.div>
+            )}
+        </AnimatePresence>
+    );
+};
+
+export default NotificationDrawer;
diff --git a/src/layout/Dash.jsx b/src/layout/Dash.jsx
index 329ef98..7f31a5a 100644
--- a/src/layout/Dash.jsx
+++ b/src/layout/Dash.jsx
@@ -2,6 +2,7 @@ import React, { useState, useEffect } from 'react';
 import { Link } from 'react-router-dom';
 import { searchEmployees } from '../api';
 import EmployeeDetails from '../pages/modals/EmployeeDetailsModal';
+import NotificationDrawer from '../components/NotificationDrawer';
 import { motion, AnimatePresence } from 'framer-motion';
 import '../styles/layoutStyling.css';
 
@@ -12,8 +13,10 @@ const Dash = ({ children }) => {
     const [showPopup, setShowPopup] = useState(false);
     const [selectedEmployee, setSelectedEmployee] = useState(null);
     const [notifications, setNotifications] = useState([]);
+    const [isDrawerOpen, setIsDrawerOpen] = useState(false);
 
     const toggleCollapse = () => setIsCollapsed(!isCollapsed);
+    const toggleDrawer = () => setIsDrawerOpen(!isDrawerOpen);
 
     const handleSearchInputChange = (e) => setSearchTerm(e.target.value);
 
@@ -34,9 +37,7 @@ const Dash = ({ children }) => {
     };
 
     const closePopup = () => setShowPopup(false);
-
     const showEmployeeDetails = (employee) => setSelectedEmployee(employee);
-
     const closeEmployeeDetails = () => setSelectedEmployee(null);
 
     useEffect(() => {
@@ -58,13 +59,15 @@ const Dash = ({ children }) => {
                     </button>
                 </div>
                 <div className="navbar-left">
-                    <img src="../assets/logo.png" alt="Logo" className="logo" />
+                    <img src="../assets/react.svg" alt="Logo" className="logo" />
                 </div>
                 <div className="navbar-center">
                     {/* Search bar could go here */}
                 </div>
                 <div className="navbar-right">
-                    <button className="icon-button"><i className="bell-icon"></i></button>
+                    <button className="icon-button" onClick={toggleDrawer}>
+                        <i className="bell-icon"></i>
+                    </button>
                     <button className="icon-button"><i className="gift-icon"></i></button>
                     <button className="icon-button"><i className="help-icon"></i></button>
                     <div className="user-profile">
@@ -92,15 +95,12 @@ const Dash = ({ children }) => {
                     {children}
                 </div>
 
-                {/* Notifications Section */}
-                <div className="notifications">
-                    <h2>Notifications</h2>
-                    <ul>
-                        {notifications.map((notification, index) => (
-                            <li key={index}>{notification}</li>
-                        ))}
-                    </ul>
-                </div>
+                {/* Notification Drawer */}
+                <NotificationDrawer
+                    notifications={notifications}
+                    isOpen={isDrawerOpen}
+                    onClose={toggleDrawer}
+                />
 
                 {/* Popup Modal for Search Results */}
                 {showPopup && (
diff --git a/src/styles/notificationDrawer.css b/src/styles/notificationDrawer.css
new file mode 100644
index 0000000..4c5d57a
--- /dev/null
+++ b/src/styles/notificationDrawer.css
@@ -0,0 +1,58 @@
+.notification-drawer {
+    position: fixed;
+    top: 0;
+    right: 0;
+    height: 100%;
+    width: 300px;
+    background: white;
+    border-left: 1px solid #ddd;
+    box-shadow: -4px 0 8px rgba(0, 0, 0, 0.2);
+    z-index: 1000;
+    overflow-y: auto;
+    display: flex;
+    flex-direction: column;
+    padding: 16px;
+}
+
+.drawer-header {
+    display: flex;
+    justify-content: space-between;
+    align-items: center;
+    border-bottom: 1px solid #ddd;
+    padding-bottom: 8px;
+}
+
+.drawer-header h2 {
+    margin: 0;
+    font-size: 1.25rem;
+    color: #333;
+}
+
+.close-drawer-btn {
+    background: none;
+    border: none;
+    font-size: 1.5rem;
+    cursor: pointer;
+    color: #333;
+}
+
+.drawer-content {
+    flex: 1;
+    margin-top: 16px;
+}
+
+.drawer-content ul {
+    list-style: none;
+    padding: 0;
+    margin: 0;
+}
+
+.drawer-content li {
+    padding: 8px 0;
+    border-bottom: 1px solid #eee;
+    color: #333;
+}
+
+.drawer-content p {
+    color: #666;
+}
-- 
2.45.2


From 1dd665cc7ba7dbc142af596c74bdaf28e5d9e960 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Fri, 26 Jul 2024 10:10:01 +0300
Subject: [PATCH 20/32] Update

---
 src/layout/Dash.jsx          |  2 +-
 src/styles/layoutStyling.css | 37 +++++++++++++++++++++++++++---------
 2 files changed, 29 insertions(+), 10 deletions(-)

diff --git a/src/layout/Dash.jsx b/src/layout/Dash.jsx
index 7f31a5a..0087188 100644
--- a/src/layout/Dash.jsx
+++ b/src/layout/Dash.jsx
@@ -71,7 +71,7 @@ const Dash = ({ children }) => {
                     <button className="icon-button"><i className="gift-icon"></i></button>
                     <button className="icon-button"><i className="help-icon"></i></button>
                     <div className="user-profile">
-                        <img src="../assets/avatar.png" alt="User Avatar" className="avatar" />
+                        {/* <img src="../assets/avatar.png" alt="User Avatar" className="avatar" /> */}
                         <span className="user-name">Name</span>
                         <span className="user-role">Role</span>
                     </div>
diff --git a/src/styles/layoutStyling.css b/src/styles/layoutStyling.css
index b57c489..5aae99d 100644
--- a/src/styles/layoutStyling.css
+++ b/src/styles/layoutStyling.css
@@ -10,7 +10,7 @@
     display: flex;
     align-items: center;
     justify-content: space-between;
-    background-color: #0066cc; /* Blue color matching the table */
+    background-color: #ffffff;
     color: white;
     padding: 0.5rem 1rem;
     position: fixed;
@@ -25,6 +25,7 @@
     border: none;
     padding: 0.5rem 1rem;
     cursor: pointer;
+    font-size: 1rem;
 }
 
 .navbar-left .logo {
@@ -44,11 +45,32 @@
 }
 
 .icon-button {
-    background: none;
+    background: black;
     border: none;
-    color: white;
+    color: rgb(209, 10, 10);
     cursor: pointer;
+    height: 15px;
     margin: 0 0.5rem;
+    font-size: 3.5rem; 
+    display: flex;
+    align-items: center;
+}
+
+.icon-button i {
+    margin-right: 0.5rem;
+}
+
+
+.icon-button .bell-icon {
+    font-size: 4.5rem;
+}
+
+.icon-button .gift-icon {
+    font-size: 4.5rem;
+}
+
+.icon-button .help-icon {
+    font-size: 4.5rem;
 }
 
 .user-profile {
@@ -114,6 +136,7 @@
 .sidebar ul li a .icon-hr,
 .sidebar ul li a .icon-company {
     margin-right: 0.625rem;
+    font-size: 1.25rem; /* Adjust icon size */
 }
 
 /* Content area */
@@ -128,7 +151,6 @@
     margin-left: 0%;
 }
 
-
 /* Responsive styling */
 @media (max-width: 768px) {
     .navbar-center .search-input {
@@ -152,8 +174,7 @@
     }
 }
 
-
-/* POPUP */
+/* Popup */
 .popup-overlay {
     position: fixed;
     top: 0;
@@ -181,11 +202,10 @@
     position: absolute;
     top: 0px;
     right: 10px;
-    background:  #109c56;
+    background: #109c56;
     border-radius: 20%;
     cursor: pointer;
     font-size: 16px;
-  
 }
 
 .search-results table {
@@ -194,7 +214,6 @@
 }
 
 .search-results th, .search-results td {
-    top: 25px;
     border: 1px solid #ddd;
     padding: 8px;
 }
-- 
2.45.2


From 3e0982a3676f49da0da97952ab35a7a29f2a4697 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Fri, 26 Jul 2024 10:20:01 +0300
Subject: [PATCH 21/32] Updates

---
 src/styles/layoutStyling.css | 20 ++++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

diff --git a/src/styles/layoutStyling.css b/src/styles/layoutStyling.css
index 5aae99d..a1915ce 100644
--- a/src/styles/layoutStyling.css
+++ b/src/styles/layoutStyling.css
@@ -45,16 +45,20 @@
 }
 
 .icon-button {
-    background: black;
-    border: none;
-    color: rgb(209, 10, 10);
+    background-color: #3f51b5;
+    border: none; 
+    border-radius: 50%;
+    color: #fff; 
     cursor: pointer;
-    height: 15px;
-    margin: 0 0.5rem;
-    font-size: 3.5rem; 
+    font-size: 2.5rem; 
+    height: 2rem; 
+    width: 2rem; 
+    padding: 1rem;
+    margin: 0 0.5rem; 
     display: flex;
     align-items: center;
-}
+    justify-content: center;
+  }
 
 .icon-button i {
     margin-right: 0.5rem;
@@ -99,7 +103,7 @@
 /* Sidebar styling */
 .sidebar {
     width: 15%;
-    background-color: #0066cc; /* Blue color matching the table */
+    background-color: #0066cc; 
     padding: 1rem;
     transition: width 0.3s ease;
     overflow-y: auto;
-- 
2.45.2


From 92f8f38ad4a355866ab6c48b848dac61f05faba7 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Fri, 26 Jul 2024 10:30:01 +0300
Subject: [PATCH 22/32] More updates

---
 src/layout/Dash.jsx          | 8 ++++----
 src/styles/layoutStyling.css | 8 ++++----
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/src/layout/Dash.jsx b/src/layout/Dash.jsx
index 0087188..f06f324 100644
--- a/src/layout/Dash.jsx
+++ b/src/layout/Dash.jsx
@@ -41,7 +41,7 @@ const Dash = ({ children }) => {
     const closeEmployeeDetails = () => setSelectedEmployee(null);
 
     useEffect(() => {
-        const eventSource = new EventSource('http://localhost:8080/api/notifications');
+        const eventSource = new EventSource('http://localhost:8080/api/export/employees');
 
         eventSource.onmessage = (event) => {
             setNotifications((prev) => [...prev, event.data]);
@@ -54,12 +54,12 @@ const Dash = ({ children }) => {
         <div className="dashboard-layout">
             <nav className="navbar">
                 <div>
-                    <button className="collapse-btn" onClick={toggleCollapse}>
-                        {isCollapsed ? 'Expand' : 'Collapse'}
+                    <button className="icon-button" onClick={toggleCollapse}>
+                        {isCollapsed ? '<' : '>'}
                     </button>
                 </div>
                 <div className="navbar-left">
-                    <img src="../assets/react.svg" alt="Logo" className="logo" />
+                    {/* <img src="../assets/react.svg" alt="Logo" className="logo" /> */}
                 </div>
                 <div className="navbar-center">
                     {/* Search bar could go here */}
diff --git a/src/styles/layoutStyling.css b/src/styles/layoutStyling.css
index a1915ce..35ca96f 100644
--- a/src/styles/layoutStyling.css
+++ b/src/styles/layoutStyling.css
@@ -10,7 +10,7 @@
     display: flex;
     align-items: center;
     justify-content: space-between;
-    background-color: #ffffff;
+    background-color: #0c569b;
     color: white;
     padding: 0.5rem 1rem;
     position: fixed;
@@ -20,12 +20,12 @@
 }
 
 .collapse-btn {
-    background-color: #005bb5; /* Slightly darker blue */
+    background-color: #005bb5;
     color: white;
     border: none;
     padding: 0.5rem 1rem;
     cursor: pointer;
-    font-size: 1rem;
+    font-size: 0.5rem;
 }
 
 .navbar-left .logo {
@@ -45,7 +45,7 @@
 }
 
 .icon-button {
-    background-color: #3f51b5;
+    background-color: #0e0e11;
     border: none; 
     border-radius: 50%;
     color: #fff; 
-- 
2.45.2


From 8f1c8001e7d203fba87198a83ca33d7ef05dc9f4 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Fri, 26 Jul 2024 11:20:00 +0300
Subject: [PATCH 23/32] Updates

---
 src/layout/Dash.jsx | 41 +++++++++++++++++++++++++++++++++--------
 1 file changed, 33 insertions(+), 8 deletions(-)

diff --git a/src/layout/Dash.jsx b/src/layout/Dash.jsx
index f06f324..9dcd037 100644
--- a/src/layout/Dash.jsx
+++ b/src/layout/Dash.jsx
@@ -14,6 +14,7 @@ const Dash = ({ children }) => {
     const [selectedEmployee, setSelectedEmployee] = useState(null);
     const [notifications, setNotifications] = useState([]);
     const [isDrawerOpen, setIsDrawerOpen] = useState(false);
+    const [eventSource, setEventSource] = useState(null);
 
     const toggleCollapse = () => setIsCollapsed(!isCollapsed);
     const toggleDrawer = () => setIsDrawerOpen(!isDrawerOpen);
@@ -40,15 +41,37 @@ const Dash = ({ children }) => {
     const showEmployeeDetails = (employee) => setSelectedEmployee(employee);
     const closeEmployeeDetails = () => setSelectedEmployee(null);
 
-    useEffect(() => {
-        const eventSource = new EventSource('http://localhost:8080/api/export/employees');
+    // Function to start export and setup SSE listener
+    const startExport = () => {
+        fetch('http://localhost:8080/api/export/employees', { method: 'POST' })
+            .then(response => {
+                if (eventSource) {
+                    eventSource.close(); // Close existing event source if any
+                }
+                const newEventSource = new EventSource('http://localhost:8080/api/export/employees');
+                setEventSource(newEventSource);
 
-        eventSource.onmessage = (event) => {
-            setNotifications((prev) => [...prev, event.data]);
-        };
+                newEventSource.onmessage = (event) => {
+                    setNotifications((prev) => [...prev, event.data]);
+                };
 
-        return () => eventSource.close();
-    }, []);
+                newEventSource.onerror = (error) => {
+                    console.error('EventSource failed:', error);
+                };
+            })
+            .catch(error => {
+                console.error('Error starting export:', error);
+            });
+    };
+
+    // Clean up event source on component unmount
+    useEffect(() => {
+        return () => {
+            if (eventSource) {
+                eventSource.close();
+            }
+        };
+    }, [eventSource]);
 
     return (
         <div className="dashboard-layout">
@@ -68,7 +91,9 @@ const Dash = ({ children }) => {
                     <button className="icon-button" onClick={toggleDrawer}>
                         <i className="bell-icon"></i>
                     </button>
-                    <button className="icon-button"><i className="gift-icon"></i></button>
+                    <button className="icon-button" onClick={startExport}>
+                        <i className="gift-icon"></i>
+                    </button>
                     <button className="icon-button"><i className="help-icon"></i></button>
                     <div className="user-profile">
                         {/* <img src="../assets/avatar.png" alt="User Avatar" className="avatar" /> */}
-- 
2.45.2


From 6e7bb2e2ca1f8f34be584ed4a76497cb864bfe06 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Fri, 26 Jul 2024 11:40:03 +0300
Subject: [PATCH 24/32] Update

---
 src/layout/Dash.jsx | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/layout/Dash.jsx b/src/layout/Dash.jsx
index 9dcd037..75294ac 100644
--- a/src/layout/Dash.jsx
+++ b/src/layout/Dash.jsx
@@ -43,12 +43,12 @@ const Dash = ({ children }) => {
 
     // Function to start export and setup SSE listener
     const startExport = () => {
-        fetch('http://localhost:8080/api/export/employees', { method: 'POST' })
+        fetch('http://localhost:8080/api/export/departments', { method: 'POST' })
             .then(response => {
                 if (eventSource) {
                     eventSource.close(); // Close existing event source if any
                 }
-                const newEventSource = new EventSource('http://localhost:8080/api/export/employees');
+                const newEventSource = new EventSource('http://localhost:8080/api/export/departments');
                 setEventSource(newEventSource);
 
                 newEventSource.onmessage = (event) => {
-- 
2.45.2


From 78c84045012f17825763e2aec58fbc7c58a9deaa Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Fri, 26 Jul 2024 11:50:02 +0300
Subject: [PATCH 25/32] More updates

---
 src/layout/Dash.jsx | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/layout/Dash.jsx b/src/layout/Dash.jsx
index 75294ac..90a2cb2 100644
--- a/src/layout/Dash.jsx
+++ b/src/layout/Dash.jsx
@@ -43,12 +43,12 @@ const Dash = ({ children }) => {
 
     // Function to start export and setup SSE listener
     const startExport = () => {
-        fetch('http://localhost:8080/api/export/departments', { method: 'POST' })
+        // fetch('http://localhost:8080/api/export/departments', { method: 'GET' })
             .then(response => {
                 if (eventSource) {
                     eventSource.close(); // Close existing event source if any
                 }
-                const newEventSource = new EventSource('http://localhost:8080/api/export/departments');
+                const newEventSource = new EventSource('http://localhost:8080/sse-emitter');
                 setEventSource(newEventSource);
 
                 newEventSource.onmessage = (event) => {
-- 
2.45.2


From 4600432314b8936cb3986e09a17ce16ba082fcb8 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Fri, 26 Jul 2024 12:00:03 +0300
Subject: [PATCH 26/32] Update

---
 src/layout/Dash.jsx | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/src/layout/Dash.jsx b/src/layout/Dash.jsx
index 90a2cb2..a7fbc15 100644
--- a/src/layout/Dash.jsx
+++ b/src/layout/Dash.jsx
@@ -43,11 +43,11 @@ const Dash = ({ children }) => {
 
     // Function to start export and setup SSE listener
     const startExport = () => {
-        // fetch('http://localhost:8080/api/export/departments', { method: 'GET' })
-            .then(response => {
-                if (eventSource) {
-                    eventSource.close(); // Close existing event source if any
-                }
+        // // fetch('http://localhost:8080/api/export/departments', { method: 'GET' })
+        //     .then(response => {
+                // if (eventSource) {
+                //     eventSource.close(); // Close existing event source if any
+                // }
                 const newEventSource = new EventSource('http://localhost:8080/sse-emitter');
                 setEventSource(newEventSource);
 
@@ -58,10 +58,10 @@ const Dash = ({ children }) => {
                 newEventSource.onerror = (error) => {
                     console.error('EventSource failed:', error);
                 };
-            })
-            .catch(error => {
-                console.error('Error starting export:', error);
-            });
+            // })
+            // .catch(error => {
+            //     console.error('Error starting export:', error);
+            // });
     };
 
     // Clean up event source on component unmount
-- 
2.45.2


From a1299ed880d7bc3f31c870c14ec695c2f522a71f Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Fri, 26 Jul 2024 12:50:03 +0300
Subject: [PATCH 27/32] Updates

---
 src/layout/Dash.jsx | 41 ++++++++---------------------------------
 1 file changed, 8 insertions(+), 33 deletions(-)

diff --git a/src/layout/Dash.jsx b/src/layout/Dash.jsx
index a7fbc15..04652b0 100644
--- a/src/layout/Dash.jsx
+++ b/src/layout/Dash.jsx
@@ -14,7 +14,6 @@ const Dash = ({ children }) => {
     const [selectedEmployee, setSelectedEmployee] = useState(null);
     const [notifications, setNotifications] = useState([]);
     const [isDrawerOpen, setIsDrawerOpen] = useState(false);
-    const [eventSource, setEventSource] = useState(null);
 
     const toggleCollapse = () => setIsCollapsed(!isCollapsed);
     const toggleDrawer = () => setIsDrawerOpen(!isDrawerOpen);
@@ -41,37 +40,15 @@ const Dash = ({ children }) => {
     const showEmployeeDetails = (employee) => setSelectedEmployee(employee);
     const closeEmployeeDetails = () => setSelectedEmployee(null);
 
-    // Function to start export and setup SSE listener
-    const startExport = () => {
-        // // fetch('http://localhost:8080/api/export/departments', { method: 'GET' })
-        //     .then(response => {
-                // if (eventSource) {
-                //     eventSource.close(); // Close existing event source if any
-                // }
-                const newEventSource = new EventSource('http://localhost:8080/sse-emitter');
-                setEventSource(newEventSource);
-
-                newEventSource.onmessage = (event) => {
-                    setNotifications((prev) => [...prev, event.data]);
-                };
-
-                newEventSource.onerror = (error) => {
-                    console.error('EventSource failed:', error);
-                };
-            // })
-            // .catch(error => {
-            //     console.error('Error starting export:', error);
-            // });
-    };
-
-    // Clean up event source on component unmount
     useEffect(() => {
-        return () => {
-            if (eventSource) {
-                eventSource.close();
-            }
+        const eventSource = new EventSource('http://localhost:8080/api/notifications');
+
+        eventSource.onmessage = (event) => {
+            setNotifications((prev) => [...prev, event.data]);
         };
-    }, [eventSource]);
+
+        return () => eventSource.close();
+    }, []);
 
     return (
         <div className="dashboard-layout">
@@ -91,9 +68,7 @@ const Dash = ({ children }) => {
                     <button className="icon-button" onClick={toggleDrawer}>
                         <i className="bell-icon"></i>
                     </button>
-                    <button className="icon-button" onClick={startExport}>
-                        <i className="gift-icon"></i>
-                    </button>
+                    <button className="icon-button"><i className="gift-icon"></i></button>
                     <button className="icon-button"><i className="help-icon"></i></button>
                     <div className="user-profile">
                         {/* <img src="../assets/avatar.png" alt="User Avatar" className="avatar" /> */}
-- 
2.45.2


From 96cc5277055aef34c224c74410d277b1cb5baac5 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Fri, 26 Jul 2024 14:30:01 +0300
Subject: [PATCH 28/32] More updates

---
 src/components/Table.jsx    | 47 ++++++++++++++++++++
 src/pages/EmployeeTable.jsx | 89 +++++++++++++++++++++++++------------
 2 files changed, 108 insertions(+), 28 deletions(-)
 create mode 100644 src/components/Table.jsx

diff --git a/src/components/Table.jsx b/src/components/Table.jsx
new file mode 100644
index 0000000..7d995a4
--- /dev/null
+++ b/src/components/Table.jsx
@@ -0,0 +1,47 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+const Table = ({ data, columns, onRowClick, page, size }) => (
+    <div className="table-wrapper">
+        <table className="fl-table">
+            <thead>
+                <tr>
+                    {columns.map((col) => (
+                        <th key={col.key}>{col.label}</th>
+                    ))}
+                </tr>
+            </thead>
+            <tbody>
+                {data.map((item, index) => (
+                    <tr key={item.id} onClick={() => onRowClick && onRowClick(item)}>
+                        {columns.map((col) => (
+                            <td key={col.key}>
+                                {col.render ? col.render(item[col.key], item) : item[col.key]}
+                            </td>
+                        ))}
+                    </tr>
+                ))}
+            </tbody>
+        </table>
+    </div>
+);
+
+Table.propTypes = {
+    data: PropTypes.arrayOf(PropTypes.object).isRequired,
+    columns: PropTypes.arrayOf(PropTypes.shape({
+        key: PropTypes.string.isRequired,
+        label: PropTypes.string.isRequired,
+        render: PropTypes.func,
+    })).isRequired,
+    onRowClick: PropTypes.func,
+    page: PropTypes.number,
+    size: PropTypes.number,
+};
+
+Table.defaultProps = {
+    onRowClick: null,
+    page: 1,
+    size: 10,
+};
+
+export default Table;
diff --git a/src/pages/EmployeeTable.jsx b/src/pages/EmployeeTable.jsx
index 763f3a3..056a922 100644
--- a/src/pages/EmployeeTable.jsx
+++ b/src/pages/EmployeeTable.jsx
@@ -1,32 +1,65 @@
+// import React from 'react';
+
+// const EmployeeTable = ({ employees, page, size, showEmployeeDetails }) => (
+//     <div className="table-wrapper">
+//         <table className="fl-table">
+//             <thead>
+//                 <tr>
+//                     <th>#</th>
+//                     <th>Name</th>
+//                     <th>Department ID</th>
+//                     <th>Employment Type</th>
+//                 </tr>
+//             </thead>
+//             <tbody>
+//                 {employees.map((employee, index) => (
+//                     <tr key={employee.employeeId}>
+//                         <td>
+//                             <button className="cell-btn" onClick={() => showEmployeeDetails(employee)}>
+//                                 {(page - 1) * size + index + 1}
+//                             </button>
+//                         </td>
+//                         <td>{employee.name}</td>
+//                         <td>{employee.departmentId}</td>
+//                         <td>{employee.employmentType}</td>
+//                     </tr>
+//                 ))}
+//             </tbody>
+//         </table>
+//     </div>
+// );
+
+// export default EmployeeTable;
+
+
 import React from 'react';
+import Table from '../components/Table';
+
+const EmployeeTable = ({ employees, page, size, showEmployeeDetails }) => {
+    const columns = [
+        {
+            key: 'index',
+            label: '#',
+            render: (value, item, index) => (
+                <button className="cell-btn" onClick={() => showEmployeeDetails(item)}>
+                    {(page - 1) * size + index + 1}
+                </button>
+            ),
+        },
+        { key: 'name', label: 'Name' },
+        { key: 'departmentId', label: 'Department ID' },
+        { key: 'employmentType', label: 'Employment Type' },
+    ];
 
-const EmployeeTable = ({ employees, page, size, showEmployeeDetails }) => (
-    <div className="table-wrapper">
-        <table className="fl-table">
-            <thead>
-                <tr>
-                    <th>#</th>
-                    <th>Name</th>
-                    <th>Department ID</th>
-                    <th>Employment Type</th>
-                </tr>
-            </thead>
-            <tbody>
-                {employees.map((employee, index) => (
-                    <tr key={employee.employeeId}>
-                        <td>
-                            <button className="cell-btn" onClick={() => showEmployeeDetails(employee)}>
-                                {(page - 1) * size + index + 1}
-                            </button>
-                        </td>
-                        <td>{employee.name}</td>
-                        <td>{employee.departmentId}</td>
-                        <td>{employee.employmentType}</td>
-                    </tr>
-                ))}
-            </tbody>
-        </table>
-    </div>
-);
+    return (
+        <Table
+            data={employees}
+            columns={columns}
+            onRowClick={showEmployeeDetails}
+            page={page}
+            size={size}
+        />
+    );
+};
 
 export default EmployeeTable;
-- 
2.45.2


From f09b42744277ed8cb5622f3114bc17a55bd171c1 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Fri, 26 Jul 2024 14:50:01 +0300
Subject: [PATCH 29/32] More updates

---
 src/pages/SalariesTable.jsx | 73 +++++++++++++++++++++++++------------
 1 file changed, 49 insertions(+), 24 deletions(-)

diff --git a/src/pages/SalariesTable.jsx b/src/pages/SalariesTable.jsx
index 9c8a9aa..f213595 100644
--- a/src/pages/SalariesTable.jsx
+++ b/src/pages/SalariesTable.jsx
@@ -1,28 +1,53 @@
+// import React from 'react';
+
+// const SalariesTable = ({ salaries, page, size }) => (
+//   <div className="table-wrapper">
+//     <table className="fl-table">
+//       <thead>
+//         <tr>
+//           <th>#</th>
+//           <th>EmployeeID</th>
+//           <th>Date</th>
+//           <th>NetSalary</th>
+//         </tr>
+//       </thead>
+//       <tbody>
+//         {salaries.map((salary, index) => (
+//           <tr key={salary.salaryId}>
+//             <td>{(page - 1) * size + index + 1}</td>
+//             <td>{salary.employeeId}</td>
+//             <td>{salary.month}</td>
+//             <td>{salary.netSalary}</td>
+//           </tr>
+//         ))}
+//       </tbody>
+//     </table>
+//   </div>
+// );
+
+// export default SalariesTable;
+
+
 import React from 'react';
+import Table from '../components/Table'; 
+
+const SalariesTable = ({ salaries, page, size, showSalaryDetails }) => {
+  const columns = [
+    { header: '#', accessor: (row, index) => (page - 1) * size + index + 1 },
+    { header: 'EmployeeID', key: 'employeeId' },
+    { header: 'Date', key: 'month' },
+    { header: 'NetSalary', key: 'netSalary' }
+  ];
 
-const SalariesTable = ({ salaries, page, size }) => (
-  <div className="table-wrapper">
-    <table className="fl-table">
-      <thead>
-        <tr>
-          <th>#</th>
-          <th>EmployeeID</th>
-          <th>Date</th>
-          <th>NetSalary</th>
-        </tr>
-      </thead>
-      <tbody>
-        {salaries.map((salary, index) => (
-          <tr key={salary.salaryId}>
-            <td>{(page - 1) * size + index + 1}</td>
-            <td>{salary.employeeId}</td>
-            <td>{salary.month}</td>
-            <td>{salary.netSalary}</td>
-          </tr>
-        ))}
-      </tbody>
-    </table>
-  </div>
-);
+  return (
+    <Table
+      columns={columns}
+      data={salaries}
+      page={page}
+      size={size}
+      onRowClick={showSalaryDetails}
+    />
+  );
+};
 
 export default SalariesTable;
-- 
2.45.2


From 94442db710805fe5a28a32a0c0c9ddcb01a087b4 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Fri, 26 Jul 2024 15:00:01 +0300
Subject: [PATCH 30/32] Update

---
 src/pages/ListSalaries.jsx | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/src/pages/ListSalaries.jsx b/src/pages/ListSalaries.jsx
index 973f011..df581a2 100644
--- a/src/pages/ListSalaries.jsx
+++ b/src/pages/ListSalaries.jsx
@@ -1,5 +1,5 @@
 import React, { useState, useEffect, useCallback } from 'react';
-import {getAllSalaries} from '../api';
+import { getAllSalaries } from '../api';
 import Dash from "../layout/Dash";
 import LoadingAnimation from './LoadingAnimation';
 import SalariesTable from './SalariesTable';
@@ -42,7 +42,7 @@ const ListSalaries = () => {
     if (error) return <div>Error: {error}</div>;
     if (loading) return <LoadingAnimation />;
     if (salaries.length === 0) return <p>No salaries found.</p>;
-    
+
     return <SalariesTable salaries={salaries} page={page} size={size} />;
   };
 
@@ -55,10 +55,11 @@ const ListSalaries = () => {
           page={page}
           setPage={setPage}
           inputPage={inputPage}
+          setInputPage={setInputPage}
           inputSize={inputSize}
-          handlePageChange={handlePageChange}
-          handleSizeChange={handleSizeChange}
+          setInputSize={setInputSize}
           handleGoToPage={handleGoToPage}
+          setLoading={setLoading}
         />
       </div>
     </Dash>
-- 
2.45.2


From 58440e08b8e6df715607a8433060e218ba8a6fad Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Fri, 26 Jul 2024 15:10:01 +0300
Subject: [PATCH 31/32] More updates

---
 src/pages/ListSalaries.jsx | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/pages/ListSalaries.jsx b/src/pages/ListSalaries.jsx
index df581a2..d317eee 100644
--- a/src/pages/ListSalaries.jsx
+++ b/src/pages/ListSalaries.jsx
@@ -61,7 +61,7 @@ const ListSalaries = () => {
           handleGoToPage={handleGoToPage}
           setLoading={setLoading}
         />
-      </div>
+      </div> 
     </Dash>
   );
 };
-- 
2.45.2


From 8434fa5b3edccf3f73b92f0d42ad36dcfcdb9654 Mon Sep 17 00:00:00 2001
From: Olooce <asirastephen9@gmail.com>
Date: Sat, 27 Jul 2024 13:30:01 +0300
Subject: [PATCH 32/32] Update

---
 src/api.jsx | 8 --------
 1 file changed, 8 deletions(-)

diff --git a/src/api.jsx b/src/api.jsx
index 2cfce1e..d2b97c0 100644
--- a/src/api.jsx
+++ b/src/api.jsx
@@ -59,11 +59,3 @@ export const getPaymentHistory = (employeeId) => api.get(`/salaries/payment-hist
 export const getAllUsers = (page = 1, size = 10) => api.get(`/systemusers?page=${page}&size=${size}`)
 
 
-// SSE for Export Jobs
-export const initiateExport = (tableName) => {
-  return new EventSource(`http://localhost:8080/api/export/${tableName}`);
-};
-
-export const initiateExportSearch = (tableName, searchTerm) => {
-  return new EventSource(`http://localhost:8080/api/exportSearch/${tableName}?searchTerm=${searchTerm}`);
-};
\ No newline at end of file
-- 
2.45.2

